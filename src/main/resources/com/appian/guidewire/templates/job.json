{
  "components": {
    "parameters": {
      "additionalNamedInsuredId": {
        "description": "The identifier for the additional named insured (Since 1.4.0)",
        "in": "path",
        "name": "additionalNamedInsuredId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-gw-sinceVersion": "1.4.0"
      },
      "asOfDate": {
        "description": "The date on which to view the job or policy",
        "in": "query",
        "name": "asOfDate",
        "required": false,
        "schema": {
          "format": "date-time",
          "type": "string"
        },
        "x-gw-allowForCompositeApi": true
      },
      "assessmentSummaryId": {
        "description": "The REST identifier for the assessment summary (Since 1.5.0)",
        "in": "path",
        "name": "assessmentSummaryId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-gw-sinceVersion": "1.5.0"
      },
      "contactId": {
        "description": "The identifier for the policy contact",
        "in": "path",
        "name": "contactId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "contingencyId": {
        "description": "The identifier for the contingency (Since 1.3.0)",
        "in": "path",
        "name": "contingencyId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-gw-sinceVersion": "1.3.0"
      },
      "coverageId": {
        "description": "The identifier for the coverage",
        "in": "path",
        "name": "coverageId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "createDefaultCoverages": {
        "description": "Can be set to false to disable creation of the default set of coverages, conditions, and exclusions when creating a new submission, line, or coverable (Since 1.4.0)",
        "in": "query",
        "name": "createDefaultCoverages",
        "schema": {
          "default": true,
          "type": "boolean"
        },
        "x-gw-allowForCompositeApi": true,
        "x-gw-sinceVersion": "1.4.0"
      },
      "deferValidation": {
        "description": "Defers certain kinds of validation, such as availability checks, until quoting, rather than performing the validation on this request (Since 1.4.0)",
        "in": "query",
        "name": "deferValidation",
        "schema": {
          "default": false,
          "type": "boolean"
        },
        "x-gw-allowForCompositeApi": true,
        "x-gw-sinceVersion": "1.4.0"
      },
      "enablePolymorphism": {
        "description": "Whether or not to use the `discriminator`/`oneOf` pattern to output schemas in cases where the valid set of fields can vary based on some attribute of the data such as the country or subtype.  Defaults to `true`. See the documentation for more information.",
        "in": "query",
        "name": "enablePolymorphism",
        "schema": {
          "default": true,
          "type": "boolean"
        }
      },
      "fields": {
        "description": "Allows the caller to specify the set of fields that should be included on the response. This can be used to limit the set of fields returned as well as to include optional fields that otherwise wouldn't normally be returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field list>`, where `<field list>` consists of a comma-separated list of field or field set names. See the documentation for more information.",
        "explode": true,
        "in": "query",
        "name": "fields",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form",
        "x-gw-allowForCompositeApi": true
      },
      "filter": {
        "description": "Filters the list of results based on the specified field, operator, and value. The parameter is either of the form `filter=<field>:<operator>:<value>` or `filter=<include>:<field>:<operator>:<value>`. See the documentation for more information.",
        "explode": true,
        "in": "query",
        "name": "filter",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form",
        "x-gw-allowForCompositeApi": true
      },
      "filterByUser": {
        "description": "Whether or not to filter endpoints and schema properties by the authorization of the caller. Defaults to `false`.",
        "in": "query",
        "name": "filterByUser",
        "schema": {
          "default": false,
          "type": "boolean"
        }
      },
      "gwLanguageHeader": {
        "description": "If specified, this header will set the language used when processing the request",
        "in": "header",
        "name": "GW-Language",
        "schema": {
          "type": "string"
        }
      },
      "gwLocaleHeader": {
        "description": "If specified, this header will set the locale used when processing the request",
        "in": "header",
        "name": "GW-Locale",
        "schema": {
          "type": "string"
        }
      },
      "gwSchemaProperty": {
        "description": "If specified and the operation returns json with a defined schema, this will add a property, '$GW-Schema',  with the fully qualified name of the object's schema.",
        "in": "header",
        "name": "GW-IncludeSchemaProperty",
        "schema": {
          "type": "boolean"
        }
      },
      "gwTraceability": {
        "description": "This header permits a customer to trace a request from its initial reception through all of the subsequent applications that were invoked to handle that request. The actual traceability id present in the MDC and logs (and returned in the response), is dependent on the implementation of TraceabilityIDPlugin. The default implementation uses this value, if specified, or a generated UID.  However, another implementation may always generate a unique id and just log  the relationship between these incoming values and the generated UID. Note: that this header can be repeated, but the resulting string will just be the comma separated values.",
        "in": "header",
        "name": "X-Correlation-ID",
        "schema": {
          "type": "string"
        }
      },
      "gwTransactionID": {
        "description": "If specified and this operation results in a database commit, this header's value must not have been submitted before.  This value must be globally unique across all clients, apis and webservices. It is used for those transaction that are not idempotent. Unless this is explicitly referenced for an operation it is not required.",
        "in": "header",
        "name": "GW-DBTransaction-ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "gwUnknownPropertyHeader": {
        "description": "If specified, this header will drive the behavior for unknown property handling",
        "in": "header",
        "name": "GW-UnknownPropertyHandling",
        "schema": {
          "enum": [
            "log",
            "reject",
            "ignore"
          ],
          "type": "string"
        }
      },
      "gwUnknownQueryParameterHeader": {
        "description": "If specified, this header will drive the behavior for unknown query parameter handling.  Default is to reject them.",
        "in": "header",
        "name": "GW-UnknownQueryParamHandling",
        "schema": {
          "enum": [
            "log",
            "reject",
            "ignore"
          ],
          "type": "string"
        }
      },
      "gwValidateResponseHandling": {
        "description": "If specified, this header permits the client to override the behavior around validating response",
        "in": "header",
        "name": "GW-ValidateResponseHandling",
        "schema": {
          "type": "boolean"
        }
      },
      "include": {
        "description": "Used to request that additional resources be returned with the API response in the `included` section of the responses. The `include` parameter can appear multiple times, and is a comma-separated list of additional resources to include. See the documentation for more information.",
        "explode": true,
        "in": "query",
        "name": "include",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "includeTotal": {
        "description": "Used to request that results should include a count of the total number of results available, which may be more than the total number of results currently being returned. This parameter is of the form `includeTotal=<true|false>` or `includeTotal=<include>:<true|false>`. If not specified, the default is considered to be `false`. See the documentation for more information about response pagination.",
        "explode": true,
        "in": "query",
        "name": "includeTotal",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form",
        "x-gw-allowForCompositeApi": true
      },
      "jobId": {
        "description": "The identifier for the job",
        "in": "path",
        "name": "jobId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "jobVersion": {
        "description": "The version of the job to view or modify (Since 1.1.0)",
        "in": "query",
        "name": "jobVersion",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-gw-allowForCompositeApi": true,
        "x-gw-sinceVersion": "1.1.0"
      },
      "locationId": {
        "description": "The identifier for the location",
        "in": "path",
        "name": "locationId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "modifierId": {
        "description": "The identifier for the modifier",
        "in": "path",
        "name": "modifierId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "omitInclusions": {
        "description": "Whether or not to omit the `included` properties on request and response schemas.  Defaults to `false`. See the documentation for more information. (Since 1.4.0)",
        "in": "query",
        "name": "omitInclusions",
        "schema": {
          "default": false,
          "type": "boolean"
        },
        "x-gw-sinceVersion": "1.4.0"
      },
      "pageOffset": {
        "description": "The offset of the first result to fetch when fetching a paginated set of results. The parameter is of the form `pageOffset=<number>` where the first result has an offset of 0. For example, `pageOffset=25` will skip the first 25 results in sorted order. If not specified, the default value is 0. See the documentation for more information about response pagination.",
        "in": "query",
        "name": "pageOffset",
        "schema": {
          "type": "string"
        },
        "x-gw-allowForCompositeApi": true
      },
      "pageSize": {
        "description": "The maximum number of results to return in the response. The parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the default `pageSize` both depend on the specific API endpoint the request is made to. See the documentation for more information about response pagination.",
        "explode": true,
        "in": "query",
        "name": "pageSize",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form",
        "x-gw-allowForCompositeApi": true
      },
      "paymentPlanId": {
        "description": "The identifier for the payment plan",
        "in": "path",
        "name": "paymentPlanId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "prettyPrintSchema": {
        "description": "Whether or not to pretty-print the returned schema, making it larger but more human readable.  Defaults to `false`.",
        "in": "query",
        "name": "prettyPrint",
        "schema": {
          "default": false,
          "type": "boolean"
        }
      },
      "priorLossId": {
        "description": "The identifier for the prior loss (Since 1.5.0)",
        "in": "path",
        "name": "priorLossId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-gw-sinceVersion": "1.5.0"
      },
      "priorPolicyId": {
        "description": "The identifier for the prior policy (Since 1.5.0)",
        "in": "path",
        "name": "priorPolicyId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-gw-sinceVersion": "1.5.0"
      },
      "scheduledItemCoverageId": {
        "description": "The identifier for the scheduled item coverage (Since 1.6.0)",
        "in": "path",
        "name": "scheduledItemCoverageId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-gw-sinceVersion": "1.6.0"
      },
      "scheduledItemId": {
        "description": "The identifier for the scheduled item",
        "in": "path",
        "name": "scheduledItemId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "sort": {
        "description": "Controls the sorting of elements within a response. The sort parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where `<fields>` represents a comma-separated list of field names to sort on. Field names can be prefixed with `-` to request a descending sort, otherwise the sort will be ascending. See the documentation for more information.",
        "explode": true,
        "in": "query",
        "name": "sort",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form",
        "x-gw-allowForCompositeApi": true
      },
      "uwIssueId": {
        "description": "The identifier for the underwriting issue (Since 1.2.0)",
        "in": "path",
        "name": "uwIssueId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-gw-sinceVersion": "1.2.0"
      },
      "versionId": {
        "description": "The identifier for the job version",
        "in": "path",
        "name": "versionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "Account": {
        "description": "An `Account` represents a person or company that applies for or purchases insurance from the insurer",
        "properties": {
          "accountHolder": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `AccountContact` that represents the owner of the policies for this account",
            "title": "Account holder",
            "x-gw-reference-schema": "AccountContact",
            "x-gw-referenceType": "AccountContact"
          },
          "accountNumber": {
            "description": "The number assigned to this account",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Account number",
            "type": "string"
          },
          "accountStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The current status of this account",
            "readOnly": true,
            "title": "Account status",
            "x-gw-typelist": "AccountStatus"
          },
          "accountStatusUpdateTime": {
            "description": "The date and time when the `accountStatus` was last updated",
            "format": "date-time",
            "readOnly": true,
            "title": "Account status update time",
            "type": "string"
          },
          "businessOperationsDescription": {
            "description": "A brief description of the type of business done by the company represented by this account",
            "maxLength": 240,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Business and operations description",
            "type": "string"
          },
          "createdDate": {
            "description": "The date and time when this `Account` was created",
            "format": "date-time",
            "readOnly": true,
            "title": "Created date",
            "type": "string"
          },
          "frozen": {
            "description": "A `true` value indicates that this `Account` is frozen and cannot currently be edited",
            "readOnly": true,
            "title": "Frozen",
            "type": "boolean"
          },
          "id": {
            "description": "The unique identifier of this element",
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "A reference to the `IndustryCode` that defines the type of business done by the company represented by this account. Only applicable for an `Account` that represents a company.",
            "nullable": true,
            "title": "Industry code"
          },
          "initialAccountHolder": {
            "$ref": "#/components/schemas/AccountContact",
            "description": "The details of the `AccountContact` that should be set as the `accountHolder` for a newly created account",
            "title": "Initial account holder",
            "x-gw-createOnly": true
          },
          "initialPrimaryLocation": {
            "$ref": "#/components/schemas/AccountLocation",
            "description": "The details of the `AccountLocation` that should be set as the `primaryLocation` for a newly created account",
            "title": "Initial primary location",
            "x-gw-createOnly": true
          },
          "locked": {
            "description": "A `true` value indicates that policies cannot be created or retrieved on this account. A locked account usually indicates that the account is being merged with another account. (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then policies cannot be created or retrieved on this account",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "nickname": {
            "description": "A nickname for the account, which can be used to distinguish between different accounts held by the same account holder",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Nickname",
            "type": "string"
          },
          "numberOfContacts": {
            "description": "The number of `AccountContact` elements on this `Account`",
            "readOnly": true,
            "title": "Number of contacts",
            "type": "string"
          },
          "organizationType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of organization of the company or person represented by this account, such as `individual` or `corporation`",
            "nullable": true,
            "title": "Organization type",
            "x-gw-typelist": "AccountOrgType"
          },
          "originationDate": {
            "description": "The date and time at which the company or person represented by this account first became a client of the insurer",
            "format": "date-time",
            "readOnly": true,
            "title": "Origination date",
            "type": "string"
          },
          "otherOrganizationTypeDescription": {
            "description": "A description of the organization type. Only applicable if `organizationType` is `other`.",
            "maxLength": 40,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Other organization type description",
            "type": "string"
          },
          "preferredCoverageCurrency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The preferred currency used for defining coverages on policies for this account",
            "title": "Preferred coverage currency",
            "x-gw-typelist": "Currency"
          },
          "preferredSettlementCurrency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The preferred currency used for billing this account",
            "title": "Preferred settlement currency",
            "x-gw-typelist": "Currency"
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The preferred language for this account",
            "nullable": true,
            "title": "Primary language",
            "x-gw-typelist": "LanguageType"
          },
          "primaryLocale": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The preferred locale for this account",
            "nullable": true,
            "title": "Primary locale",
            "x-gw-typelist": "LocaleType"
          },
          "primaryLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `AccountLocation` that is the primary location for this account. This location will be used as the default location when creating policies for certain products.",
            "title": "Primary location",
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "producerCodes": {
            "description": "When an `Account` is being created, this list should include a reference to the single `ProducerCode` that represents the default producer for the account. For an `Account` that already exists, this list will include `ProducerCode` references for all producers that have created or serviced policies for this account.",
            "items": {
              "$ref": "#/components/schemas/SimpleReference",
              "x-gw-reference-schema": "ProducerCode",
              "x-gw-referenceType": "ProducerCode"
            },
            "maxItems": 1,
            "minItems": 1,
            "title": "Producer codes",
            "type": "array",
            "x-gw-createOnly": true
          },
          "serviceTier": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The customer service tier assigned to this account",
            "nullable": true,
            "title": "Service tier",
            "x-gw-typelist": "CustomerServiceTier"
          },
          "stateBureauNum": {
            "description": "The state bureau number for this account",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "State bureau number",
            "type": "string"
          },
          "yearBusinessStarted": {
            "description": "The year that the company represented by this account was started",
            "nullable": true,
            "title": "Year business started",
            "type": "integer"
          }
        },
        "title": "Account",
        "type": "object",
        "x-gw-dynamicProperties": {
          "accountHolderCreation": {
            "forbiddenError": "Exactly one of either 'accountHolder' or 'initialAccountHolder' is required on creation",
            "jsonLogic": {
              "if": [
                {
                  "===": [
                    {
                      "var": "accountHolder"
                    },
                    null
                  ]
                },
                {
                  "x-gw-dynamicPropertiesMarker": true,
                  "x-gw-requiredForCreate": [
                    "initialAccountHolder"
                  ]
                },
                {
                  "x-gw-dynamicPropertiesMarker": true,
                  "x-gw-forbidden": [
                    "initialAccountHolder"
                  ]
                }
              ]
            },
            "requiredError": "Exactly one of either 'accountHolder' or 'initialAccountHolder' is required on creation"
          },
          "primaryLocationCreation": {
            "forbiddenError": "Exactly one of either 'primaryLocation' or 'initialPrimaryLocation' is required on creation",
            "jsonLogic": {
              "if": [
                {
                  "===": [
                    {
                      "var": "primaryLocation"
                    },
                    null
                  ]
                },
                {
                  "x-gw-dynamicPropertiesMarker": true,
                  "x-gw-requiredForCreate": [
                    "initialPrimaryLocation"
                  ]
                },
                {
                  "x-gw-dynamicPropertiesMarker": true,
                  "x-gw-forbidden": [
                    "initialPrimaryLocation"
                  ]
                }
              ]
            },
            "requiredError": "Exactly one of either 'primaryLocation' or 'initialPrimaryLocation' is required on creation"
          }
        },
        "x-gw-filterable": [
          "accountNumber",
          "accountStatus",
          "createdDate"
        ],
        "x-gw-requiredForCreate": [
          "producerCodes"
        ],
        "x-gw-sortable": [
          "accountNumber",
          "accountStatus",
          "createdDate"
        ]
      },
      "AccountContact": {
        "description": "An `AccountContact` represents a person or company that is part of an account or policy on that account. Each `PolicyContact` on a policy for this account will also be linked to an `AccountContact` on this account. Changes to this `AccountContact` will be reflected on new jobs created for this account.",
        "discriminator": {
          "mapping": {
            "Adjudicator": "#/components/schemas/AccountContact_Person",
            "Company": "#/components/schemas/AccountContact_Company",
            "CompanyVendor": "#/components/schemas/AccountContact_Company",
            "InsuranceCompany": "#/components/schemas/AccountContact_Company",
            "LegalVenue": "#/components/schemas/AccountContact_Place",
            "Person": "#/components/schemas/AccountContact_Person",
            "PersonVendor": "#/components/schemas/AccountContact_Person",
            "Place": "#/components/schemas/AccountContact_Place",
            "UserContact": "#/components/schemas/AccountContact_Person"
          },
          "propertyName": "contactSubtype"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AccountContact_Company"
          },
          {
            "$ref": "#/components/schemas/AccountContact_Person"
          },
          {
            "$ref": "#/components/schemas/AccountContact_Place"
          }
        ],
        "title": "Account contact"
      },
      "AccountContactData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AccountContact"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "AccountContact_Company": {
        "description": "An `AccountContact` represents a person or company that is part of an account or policy on that account. Each `PolicyContact` on a policy for this account will also be linked to an `AccountContact` on this account. Changes to this `AccountContact` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value for this field indicates that the contact is available to be added to jobs (Since 1.4.0)",
            "title": "Active",
            "type": "boolean",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.4.0"
          },
          "addressBookUID": {
            "description": "The unique ID of this contact within the contact management system. This field is only set if the contact has been linked to a contact management system.",
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address book UID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "busOpsDescription": {
            "description": "The description of the contact's business operations, if this contact represents a named insured on the policy",
            "nullable": true,
            "title": "Named insured business operation description",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "companyName": {
            "description": "The name of the company represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a company.",
            "maxLength": 60,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Company name",
            "type": "string"
          },
          "companyNameKanji": {
            "description": "The kanji version of the name of the company represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a company. (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Company name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "contactSubtype": {
            "description": "The specific type of contact represented by this `AccountContact`, such as `Person` or `Company`",
            "enum": [
              "Company",
              "CompanyVendor",
              "InsuranceCompany"
            ],
            "title": "Contact subtype",
            "type": "string",
            "x-gw-type": "typekey.Contact"
          },
          "displayName": {
            "description": "A formatted representation of the full name for this `AccountContact', including all applicable fields such as `firstName` or `lastName`",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "emailAddress1": {
            "description": "The contact's primary e-mail address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "E-mail address 1",
            "type": "string"
          },
          "emailAddress2": {
            "description": "The contact's secondary e-mail address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "E-mail address 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "externalId": {
            "description": "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "External ID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "firstNameKanji": {
            "description": "The kanji version of the first name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "First name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The relevant industry code, if this contact represents a named insured on the policy. Only applicable for a named insured that represents a company.",
            "nullable": true,
            "title": "Named insured industry code",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "lastNameKanji": {
            "description": "The kanji version of the last name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Last name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "officialIds": {
            "$ref": "#/components/schemas/OfficialIDMap",
            "description": "The contact's official identifiers in various jurisdictions (Since 1.4.0)",
            "title": "Official IDs",
            "x-gw-sinceVersion": "1.4.0"
          },
          "orgType": {
            "description": "The organization type of the named insured's company, if this contact represents a named insured on the policy",
            "nullable": true,
            "title": "Named insured organization type",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "particle": {
            "description": "The particle portion of the name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Particle",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "The contact's primary address",
            "title": "Primary address",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary language",
            "nullable": true,
            "title": "Primary language",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LanguageType"
          },
          "primaryLocale": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary locale",
            "nullable": true,
            "title": "Primary locale",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LocaleType"
          },
          "primaryPhone": {
            "description": "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
            "readOnly": true,
            "title": "Primary phone",
            "type": "string"
          },
          "taxId": {
            "description": "The contact's tax ID",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Tax ID",
            "type": "string"
          },
          "workPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "The contact's work phone number, if this `AccountContact` represents a person, or the business's phone number, if this `AccountContact` represents a company",
            "nullable": true,
            "title": "Work phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account contact",
        "type": "object",
        "x-gw-requiredForCreate": [
          "companyName",
          "primaryAddress",
          "contactSubtype"
        ]
      },
      "AccountContact_Person": {
        "description": "An `AccountContact` represents a person or company that is part of an account or policy on that account. Each `PolicyContact` on a policy for this account will also be linked to an `AccountContact` on this account. Changes to this `AccountContact` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value for this field indicates that the contact is available to be added to jobs (Since 1.4.0)",
            "title": "Active",
            "type": "boolean",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.4.0"
          },
          "addressBookUID": {
            "description": "The unique ID of this contact within the contact management system. This field is only set if the contact has been linked to a contact management system.",
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address book UID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "busOpsDescription": {
            "description": "The description of the contact's business operations, if this contact represents a named insured on the policy",
            "nullable": true,
            "title": "Named insured business operation description",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "cellPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "The person's mobile phone number. Only applicable for an `AccountContact` that represents a person.",
            "nullable": true,
            "title": "Cell phone"
          },
          "companyNameKanji": {
            "description": "The kanji version of the name of the company represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a company. (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Company name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "contactSubtype": {
            "description": "The specific type of contact represented by this `AccountContact`, such as `Person` or `Company`",
            "enum": [
              "Adjudicator",
              "Person",
              "PersonVendor",
              "UserContact"
            ],
            "title": "Contact subtype",
            "type": "string",
            "x-gw-type": "typekey.Contact"
          },
          "dateCompletedTrainingClass": {
            "description": "The date that the person completed a driver training class. Only applicable for an `AccountContact` that represents a person.",
            "format": "date",
            "nullable": true,
            "title": "Driver training class completion date",
            "type": "string",
            "x-gw-before": "now",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "dateOfBirth": {
            "description": "The person's date of birth. Only applicable for an `AccountContact` that represents a person.",
            "format": "date",
            "nullable": true,
            "title": "Date of birth",
            "type": "string",
            "x-gw-before": "now"
          },
          "displayName": {
            "description": "A formatted representation of the full name for this `AccountContact', including all applicable fields such as `firstName` or `lastName`",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "emailAddress1": {
            "description": "The contact's primary e-mail address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "E-mail address 1",
            "type": "string"
          },
          "emailAddress2": {
            "description": "The contact's secondary e-mail address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "E-mail address 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "externalId": {
            "description": "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "External ID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "firstName": {
            "description": "The persons's first name. Only applicable for an `AccountContact` that represents a person.",
            "maxLength": 30,
            "minLength": 1,
            "pattern": "\\S",
            "title": "First name",
            "type": "string"
          },
          "firstNameKanji": {
            "description": "The kanji version of the first name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "First name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "goodDriverDiscount": {
            "description": "A `true` value indicates that the person qualifies for a good driver discount. Only applicable for an `AccountContact` that represents a person.",
            "nullable": true,
            "title": "Good driver discount",
            "type": "boolean",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "homePhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "The person's home phone number. Only applicable for an `AccountContact` that represents a person.",
            "nullable": true,
            "title": "Home phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The relevant industry code, if this contact represents a named insured on the policy. Only applicable for a named insured that represents a company.",
            "nullable": true,
            "title": "Named insured industry code",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "lastName": {
            "description": "The person's last name. Only applicable for an `AccountContact` that represents a person.",
            "maxLength": 30,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Last name",
            "type": "string"
          },
          "lastNameKanji": {
            "description": "The kanji version of the last name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Last name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "licenseNumber": {
            "description": "The person's driver's license number. Only applicable for an `AccountContact` that represents a person. (Since 1.1.0)",
            "maxLength": 20,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Driver's license number",
            "type": "string",
            "x-gw-sinceVersion": "1.1.0"
          },
          "licenseState": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The person's driver's license state. Only applicable for an `AccountContact` that represents a person. (Since 1.1.0)",
            "nullable": true,
            "title": "Driver's license state",
            "x-gw-sinceVersion": "1.1.0",
            "x-gw-typelist": "Jurisdiction"
          },
          "maritalStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The person's marital status. Only applicable for an `AccountContact` that represents a person. (Since 1.1.0)",
            "nullable": true,
            "title": "Marital status",
            "x-gw-sinceVersion": "1.1.0",
            "x-gw-typelist": "MaritalStatus"
          },
          "numberOfAccidents": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The person's number of vehicular accidents. Only applicable for an `AccountContact` that represents a person.",
            "nullable": true,
            "title": "Number of accidents",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "NumberOfAccidents"
          },
          "numberOfViolations": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The person's number of driving violations. Only applicable for an `AccountContact` that represents a person.",
            "nullable": true,
            "title": "Number of violations",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "NumberOfAccidents"
          },
          "officialIds": {
            "$ref": "#/components/schemas/OfficialIDMap",
            "description": "The contact's official identifiers in various jurisdictions (Since 1.4.0)",
            "title": "Official IDs",
            "x-gw-sinceVersion": "1.4.0"
          },
          "orgType": {
            "description": "The organization type of the named insured's company, if this contact represents a named insured on the policy",
            "nullable": true,
            "title": "Named insured organization type",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "particle": {
            "description": "The particle portion of the name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Particle",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "The contact's primary address",
            "title": "Primary address",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary language",
            "nullable": true,
            "title": "Primary language",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LanguageType"
          },
          "primaryLocale": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary locale",
            "nullable": true,
            "title": "Primary locale",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LocaleType"
          },
          "primaryPhone": {
            "description": "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
            "readOnly": true,
            "title": "Primary phone",
            "type": "string"
          },
          "primaryPhoneType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for an `AccountContact` that represents a person.",
            "nullable": true,
            "title": "Primary phone type",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "PrimaryPhoneType"
          },
          "relationshipTitle": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The relationship this person has to the insured company, if this person is an owner or officer for the company. Only applicable for an `AccountContact` that represents a person.",
            "nullable": true,
            "title": "Owner/officer relationship title",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "Relationship"
          },
          "student": {
            "description": "A `true` value indicates that the person qualifies as a student. Only applicable for an `AccountContact` that represents a person.",
            "nullable": true,
            "title": "Student",
            "type": "boolean",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "taxId": {
            "description": "The contact's tax ID",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Tax ID",
            "type": "string"
          },
          "trainingClassType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of driver training class completed. Only applicable for an `AccountContact` that represents a person.",
            "nullable": true,
            "title": "Driver training class type",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "TrainingClassType"
          },
          "workPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "The contact's work phone number, if this `AccountContact` represents a person, or the business's phone number, if this `AccountContact` represents a company",
            "nullable": true,
            "title": "Work phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "yearLicensed": {
            "description": "The year that the person first acquired a driver's license. Only applicable for an `AccountContact` that represents a person.",
            "nullable": true,
            "title": "Year licensed",
            "type": "integer",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account contact",
        "type": "object",
        "x-gw-requiredForCreate": [
          "lastName",
          "firstName",
          "primaryAddress",
          "contactSubtype"
        ]
      },
      "AccountContact_Place": {
        "description": "An `AccountContact` represents a person or company that is part of an account or policy on that account. Each `PolicyContact` on a policy for this account will also be linked to an `AccountContact` on this account. Changes to this `AccountContact` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value for this field indicates that the contact is available to be added to jobs (Since 1.4.0)",
            "title": "Active",
            "type": "boolean",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.4.0"
          },
          "addressBookUID": {
            "description": "The unique ID of this contact within the contact management system. This field is only set if the contact has been linked to a contact management system.",
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address book UID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "busOpsDescription": {
            "description": "The description of the contact's business operations, if this contact represents a named insured on the policy",
            "nullable": true,
            "title": "Named insured business operation description",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "companyNameKanji": {
            "description": "The kanji version of the name of the company represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a company. (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Company name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "contactSubtype": {
            "description": "The specific type of contact represented by this `AccountContact`, such as `Person` or `Company`",
            "enum": [
              "LegalVenue",
              "Place"
            ],
            "title": "Contact subtype",
            "type": "string",
            "x-gw-type": "typekey.Contact"
          },
          "displayName": {
            "description": "A formatted representation of the full name for this `AccountContact', including all applicable fields such as `firstName` or `lastName`",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "emailAddress1": {
            "description": "The contact's primary e-mail address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "E-mail address 1",
            "type": "string"
          },
          "emailAddress2": {
            "description": "The contact's secondary e-mail address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "E-mail address 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "externalId": {
            "description": "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "External ID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "firstNameKanji": {
            "description": "The kanji version of the first name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "First name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The relevant industry code, if this contact represents a named insured on the policy. Only applicable for a named insured that represents a company.",
            "nullable": true,
            "title": "Named insured industry code",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "lastNameKanji": {
            "description": "The kanji version of the last name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Last name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "officialIds": {
            "$ref": "#/components/schemas/OfficialIDMap",
            "description": "The contact's official identifiers in various jurisdictions (Since 1.4.0)",
            "title": "Official IDs",
            "x-gw-sinceVersion": "1.4.0"
          },
          "orgType": {
            "description": "The organization type of the named insured's company, if this contact represents a named insured on the policy",
            "nullable": true,
            "title": "Named insured organization type",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "particle": {
            "description": "The particle portion of the name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Particle",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "The contact's primary address",
            "title": "Primary address",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary language",
            "nullable": true,
            "title": "Primary language",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LanguageType"
          },
          "primaryLocale": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary locale",
            "nullable": true,
            "title": "Primary locale",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LocaleType"
          },
          "primaryPhone": {
            "description": "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
            "readOnly": true,
            "title": "Primary phone",
            "type": "string"
          },
          "taxId": {
            "description": "The contact's tax ID",
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Tax ID",
            "type": "string"
          },
          "workPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "The contact's work phone number, if this `AccountContact` represents a person, or the business's phone number, if this `AccountContact` represents a company",
            "nullable": true,
            "title": "Work phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account contact",
        "type": "object",
        "x-gw-requiredForCreate": [
          "primaryAddress",
          "contactSubtype"
        ]
      },
      "AccountData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Account"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "AccountLocation": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "discriminator": {
          "mapping": {
            "AD": "#/components/schemas/AccountLocation_Group0",
            "AE": "#/components/schemas/AccountLocation_AE",
            "AF": "#/components/schemas/AccountLocation_Group0",
            "AG": "#/components/schemas/AccountLocation_AG",
            "AI": "#/components/schemas/AccountLocation_Group0",
            "AL": "#/components/schemas/AccountLocation_Group0",
            "AM": "#/components/schemas/AccountLocation_Group3",
            "AO": "#/components/schemas/AccountLocation_Group2",
            "AQ": "#/components/schemas/AccountLocation_Group2",
            "AR": "#/components/schemas/AccountLocation_Group3",
            "AS": "#/components/schemas/AccountLocation_Group1",
            "AT": "#/components/schemas/AccountLocation_Group4",
            "AU": "#/components/schemas/AccountLocation_Group1",
            "AW": "#/components/schemas/AccountLocation_Group2",
            "AZ": "#/components/schemas/AccountLocation_Group0",
            "BA": "#/components/schemas/AccountLocation_Group0",
            "BB": "#/components/schemas/AccountLocation_BB",
            "BD": "#/components/schemas/AccountLocation_Group0",
            "BE": "#/components/schemas/AccountLocation_Group4",
            "BF": "#/components/schemas/AccountLocation_Group6",
            "BG": "#/components/schemas/AccountLocation_Group0",
            "BH": "#/components/schemas/AccountLocation_Group0",
            "BI": "#/components/schemas/AccountLocation_Group2",
            "BJ": "#/components/schemas/AccountLocation_Group2",
            "BL": "#/components/schemas/AccountLocation_Group8",
            "BM": "#/components/schemas/AccountLocation_Group0",
            "BN": "#/components/schemas/AccountLocation_Group0",
            "BO": "#/components/schemas/AccountLocation_Group2",
            "BR": "#/components/schemas/AccountLocation_BR",
            "BS": "#/components/schemas/AccountLocation_Group5",
            "BT": "#/components/schemas/AccountLocation_Group0",
            "BV": "#/components/schemas/AccountLocation_Group2",
            "BW": "#/components/schemas/AccountLocation_Group2",
            "BY": "#/components/schemas/AccountLocation_Group3",
            "BZ": "#/components/schemas/AccountLocation_Group2",
            "CA": "#/components/schemas/AccountLocation_CA",
            "CC": "#/components/schemas/AccountLocation_Group3",
            "CD": "#/components/schemas/AccountLocation_Group2",
            "CF": "#/components/schemas/AccountLocation_Group2",
            "CG": "#/components/schemas/AccountLocation_Group2",
            "CH": "#/components/schemas/AccountLocation_Group4",
            "CI": "#/components/schemas/AccountLocation_Group6",
            "CK": "#/components/schemas/AccountLocation_Group2",
            "CL": "#/components/schemas/AccountLocation_Group3",
            "CM": "#/components/schemas/AccountLocation_Group2",
            "CN": "#/components/schemas/AccountLocation_CN",
            "CO": "#/components/schemas/AccountLocation_CO",
            "CR": "#/components/schemas/AccountLocation_Group7",
            "CV": "#/components/schemas/AccountLocation_CV",
            "CX": "#/components/schemas/AccountLocation_Group3",
            "CY": "#/components/schemas/AccountLocation_Group0",
            "CZ": "#/components/schemas/AccountLocation_Group0",
            "DE": "#/components/schemas/AccountLocation_Group4",
            "DJ": "#/components/schemas/AccountLocation_Group2",
            "DK": "#/components/schemas/AccountLocation_Group4",
            "DM": "#/components/schemas/AccountLocation_Group2",
            "DO": "#/components/schemas/AccountLocation_Group0",
            "DZ": "#/components/schemas/AccountLocation_Group0",
            "EC": "#/components/schemas/AccountLocation_Group0",
            "EE": "#/components/schemas/AccountLocation_Group0",
            "EG": "#/components/schemas/AccountLocation_Group3",
            "EH": "#/components/schemas/AccountLocation_Group0",
            "ER": "#/components/schemas/AccountLocation_Group2",
            "ES": "#/components/schemas/AccountLocation_Group10",
            "ET": "#/components/schemas/AccountLocation_Group0",
            "FI": "#/components/schemas/AccountLocation_Group4",
            "FJ": "#/components/schemas/AccountLocation_Group2",
            "FK": "#/components/schemas/AccountLocation_Group4",
            "FM": "#/components/schemas/AccountLocation_Group1",
            "FO": "#/components/schemas/AccountLocation_Group0",
            "FR": "#/components/schemas/AccountLocation_FR",
            "GA": "#/components/schemas/AccountLocation_Group2",
            "GB": "#/components/schemas/AccountLocation_Group4",
            "GD": "#/components/schemas/AccountLocation_Group2",
            "GE": "#/components/schemas/AccountLocation_Group0",
            "GF": "#/components/schemas/AccountLocation_Group8",
            "GH": "#/components/schemas/AccountLocation_Group2",
            "GI": "#/components/schemas/AccountLocation_GI",
            "GL": "#/components/schemas/AccountLocation_Group4",
            "GM": "#/components/schemas/AccountLocation_Group2",
            "GN": "#/components/schemas/AccountLocation_Group0",
            "GP": "#/components/schemas/AccountLocation_Group8",
            "GQ": "#/components/schemas/AccountLocation_Group2",
            "GR": "#/components/schemas/AccountLocation_Group4",
            "GS": "#/components/schemas/AccountLocation_Group4",
            "GT": "#/components/schemas/AccountLocation_Group0",
            "GU": "#/components/schemas/AccountLocation_Group1",
            "GW": "#/components/schemas/AccountLocation_Group0",
            "GY": "#/components/schemas/AccountLocation_Group2",
            "HK": "#/components/schemas/AccountLocation_HK",
            "HM": "#/components/schemas/AccountLocation_Group3",
            "HN": "#/components/schemas/AccountLocation_Group7",
            "HR": "#/components/schemas/AccountLocation_Group0",
            "HT": "#/components/schemas/AccountLocation_Group0",
            "HU": "#/components/schemas/AccountLocation_Group4",
            "ID": "#/components/schemas/AccountLocation_ID",
            "IE": "#/components/schemas/AccountLocation_IE",
            "IL": "#/components/schemas/AccountLocation_Group0",
            "IN": "#/components/schemas/AccountLocation_Group1",
            "IO": "#/components/schemas/AccountLocation_Group4",
            "IQ": "#/components/schemas/AccountLocation_Group7",
            "IR": "#/components/schemas/AccountLocation_Group9",
            "IS": "#/components/schemas/AccountLocation_Group0",
            "IT": "#/components/schemas/AccountLocation_Group10",
            "JM": "#/components/schemas/AccountLocation_JM",
            "JO": "#/components/schemas/AccountLocation_Group0",
            "JP": "#/components/schemas/AccountLocation_JP",
            "KE": "#/components/schemas/AccountLocation_Group0",
            "KG": "#/components/schemas/AccountLocation_Group0",
            "KH": "#/components/schemas/AccountLocation_Group0",
            "KI": "#/components/schemas/AccountLocation_Group5",
            "KM": "#/components/schemas/AccountLocation_Group2",
            "KN": "#/components/schemas/AccountLocation_KN",
            "KR": "#/components/schemas/AccountLocation_KR",
            "KW": "#/components/schemas/AccountLocation_Group0",
            "KY": "#/components/schemas/AccountLocation_KY",
            "KZ": "#/components/schemas/AccountLocation_Group3",
            "LA": "#/components/schemas/AccountLocation_Group0",
            "LB": "#/components/schemas/AccountLocation_Group0",
            "LC": "#/components/schemas/AccountLocation_Group2",
            "LI": "#/components/schemas/AccountLocation_Group4",
            "LK": "#/components/schemas/AccountLocation_Group0",
            "LR": "#/components/schemas/AccountLocation_Group0",
            "LS": "#/components/schemas/AccountLocation_Group0",
            "LT": "#/components/schemas/AccountLocation_Group0",
            "LU": "#/components/schemas/AccountLocation_Group4",
            "LV": "#/components/schemas/AccountLocation_Group0",
            "LY": "#/components/schemas/AccountLocation_Group2",
            "MA": "#/components/schemas/AccountLocation_Group0",
            "MC": "#/components/schemas/AccountLocation_MC",
            "MD": "#/components/schemas/AccountLocation_Group0",
            "ME": "#/components/schemas/AccountLocation_Group0",
            "MF": "#/components/schemas/AccountLocation_Group8",
            "MG": "#/components/schemas/AccountLocation_Group0",
            "MH": "#/components/schemas/AccountLocation_Group1",
            "MK": "#/components/schemas/AccountLocation_Group0",
            "ML": "#/components/schemas/AccountLocation_Group2",
            "MM": "#/components/schemas/AccountLocation_Group0",
            "MN": "#/components/schemas/AccountLocation_Group3",
            "MO": "#/components/schemas/AccountLocation_MO",
            "MP": "#/components/schemas/AccountLocation_Group1",
            "MQ": "#/components/schemas/AccountLocation_Group8",
            "MR": "#/components/schemas/AccountLocation_Group2",
            "MS": "#/components/schemas/AccountLocation_Group2",
            "MT": "#/components/schemas/AccountLocation_Group0",
            "MU": "#/components/schemas/AccountLocation_Group0",
            "MV": "#/components/schemas/AccountLocation_Group0",
            "MW": "#/components/schemas/AccountLocation_Group6",
            "MX": "#/components/schemas/AccountLocation_Group11",
            "MY": "#/components/schemas/AccountLocation_Group11",
            "MZ": "#/components/schemas/AccountLocation_Group0",
            "NA": "#/components/schemas/AccountLocation_Group2",
            "NC": "#/components/schemas/AccountLocation_Group8",
            "NE": "#/components/schemas/AccountLocation_Group0",
            "NF": "#/components/schemas/AccountLocation_Group3",
            "NG": "#/components/schemas/AccountLocation_NG",
            "NI": "#/components/schemas/AccountLocation_NI",
            "NL": "#/components/schemas/AccountLocation_Group4",
            "NO": "#/components/schemas/AccountLocation_Group4",
            "NP": "#/components/schemas/AccountLocation_Group0",
            "NR": "#/components/schemas/AccountLocation_NR",
            "NU": "#/components/schemas/AccountLocation_Group2",
            "NZ": "#/components/schemas/AccountLocation_Group12",
            "OM": "#/components/schemas/AccountLocation_Group0",
            "PA": "#/components/schemas/AccountLocation_Group13",
            "PE": "#/components/schemas/AccountLocation_Group3",
            "PF": "#/components/schemas/AccountLocation_PF",
            "PG": "#/components/schemas/AccountLocation_Group7",
            "PH": "#/components/schemas/AccountLocation_Group9",
            "PK": "#/components/schemas/AccountLocation_Group0",
            "PL": "#/components/schemas/AccountLocation_Group4",
            "PM": "#/components/schemas/AccountLocation_Group8",
            "PN": "#/components/schemas/AccountLocation_Group4",
            "PR": "#/components/schemas/AccountLocation_Group4",
            "PS": "#/components/schemas/AccountLocation_Group2",
            "PT": "#/components/schemas/AccountLocation_Group4",
            "PW": "#/components/schemas/AccountLocation_Group1",
            "PY": "#/components/schemas/AccountLocation_Group0",
            "QA": "#/components/schemas/AccountLocation_Group2",
            "RE": "#/components/schemas/AccountLocation_Group8",
            "RO": "#/components/schemas/AccountLocation_Group0",
            "RS": "#/components/schemas/AccountLocation_Group0",
            "RU": "#/components/schemas/AccountLocation_Group14",
            "RW": "#/components/schemas/AccountLocation_Group2",
            "SA": "#/components/schemas/AccountLocation_Group0",
            "SB": "#/components/schemas/AccountLocation_Group2",
            "SC": "#/components/schemas/AccountLocation_Group5",
            "SE": "#/components/schemas/AccountLocation_Group4",
            "SG": "#/components/schemas/AccountLocation_SG",
            "SH": "#/components/schemas/AccountLocation_Group4",
            "SI": "#/components/schemas/AccountLocation_Group0",
            "SJ": "#/components/schemas/AccountLocation_Group4",
            "SK": "#/components/schemas/AccountLocation_Group0",
            "SL": "#/components/schemas/AccountLocation_Group2",
            "SM": "#/components/schemas/AccountLocation_SM",
            "SN": "#/components/schemas/AccountLocation_Group0",
            "SO": "#/components/schemas/AccountLocation_Group7",
            "SR": "#/components/schemas/AccountLocation_Group13",
            "ST": "#/components/schemas/AccountLocation_Group2",
            "SV": "#/components/schemas/AccountLocation_Group7",
            "SZ": "#/components/schemas/AccountLocation_Group0",
            "TC": "#/components/schemas/AccountLocation_Group4",
            "TD": "#/components/schemas/AccountLocation_Group2",
            "TF": "#/components/schemas/AccountLocation_Group2",
            "TG": "#/components/schemas/AccountLocation_Group2",
            "TH": "#/components/schemas/AccountLocation_Group9",
            "TJ": "#/components/schemas/AccountLocation_Group0",
            "TK": "#/components/schemas/AccountLocation_Group2",
            "TL": "#/components/schemas/AccountLocation_Group2",
            "TM": "#/components/schemas/AccountLocation_Group0",
            "TN": "#/components/schemas/AccountLocation_Group0",
            "TO": "#/components/schemas/AccountLocation_Group2",
            "TR": "#/components/schemas/AccountLocation_TR",
            "TT": "#/components/schemas/AccountLocation_Group2",
            "TV": "#/components/schemas/AccountLocation_Group5",
            "TW": "#/components/schemas/AccountLocation_TW",
            "TZ": "#/components/schemas/AccountLocation_Group0",
            "UA": "#/components/schemas/AccountLocation_Group14",
            "UG": "#/components/schemas/AccountLocation_Group2",
            "UM": "#/components/schemas/AccountLocation_Group15",
            "US": "#/components/schemas/AccountLocation_US",
            "UY": "#/components/schemas/AccountLocation_Group3",
            "UZ": "#/components/schemas/AccountLocation_Group3",
            "VA": "#/components/schemas/AccountLocation_Group0",
            "VC": "#/components/schemas/AccountLocation_Group0",
            "VE": "#/components/schemas/AccountLocation_Group15",
            "VG": "#/components/schemas/AccountLocation_VG",
            "VI": "#/components/schemas/AccountLocation_Group1",
            "VN": "#/components/schemas/AccountLocation_Group3",
            "VU": "#/components/schemas/AccountLocation_Group2",
            "WF": "#/components/schemas/AccountLocation_Group8",
            "WS": "#/components/schemas/AccountLocation_Group2",
            "YE": "#/components/schemas/AccountLocation_Group2",
            "YT": "#/components/schemas/AccountLocation_Group8",
            "ZA": "#/components/schemas/AccountLocation_Group12",
            "ZM": "#/components/schemas/AccountLocation_Group0",
            "ZW": "#/components/schemas/AccountLocation_Group2"
          },
          "propertyName": "country"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AccountLocation_AE"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_AG"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_BB"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_BR"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_CA"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_CN"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_CO"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_CV"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_FR"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_GI"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group0"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group1"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group10"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group11"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group12"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group13"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group14"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group15"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group2"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group3"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group4"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group5"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group6"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group7"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group8"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_Group9"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_HK"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_ID"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_IE"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_JM"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_JP"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_KN"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_KR"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_KY"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_MC"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_MO"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_NG"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_NI"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_NR"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_PF"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_SG"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_SM"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_TR"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_TW"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_US"
          },
          {
            "$ref": "#/components/schemas/AccountLocation_VG"
          }
        ],
        "title": "Account location"
      },
      "AccountLocationData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AccountLocation"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "AccountLocation_AE": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AE"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "emirate": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The emirate of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Emirate",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "emirate"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_AG": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_BB": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "BB"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "parish": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The parish of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Parish",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_BR": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "BR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_CA": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "CA"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "County",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_CN": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "CN"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_CO": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "CO"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "department": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The department of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Department",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "department"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_CV": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "CV"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_FR": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "CEDEX": {
            "description": "The CEDEX bureau of the location's address. Only applicable in certain countries.",
            "maxLength": 2,
            "nullable": true,
            "title": "CEDEX",
            "type": "string"
          },
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "FR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_GI": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "GI"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group0": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AD",
              "AF",
              "AI",
              "AL",
              "AZ",
              "BA",
              "BD",
              "BG",
              "BH",
              "BM",
              "BN",
              "BT",
              "CY",
              "CZ",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EH",
              "ET",
              "FO",
              "GE",
              "GN",
              "GT",
              "GW",
              "HR",
              "HT",
              "IL",
              "IS",
              "JO",
              "KE",
              "KG",
              "KH",
              "KW",
              "LA",
              "LB",
              "LK",
              "LR",
              "LS",
              "LT",
              "LV",
              "MA",
              "MD",
              "ME",
              "MG",
              "MK",
              "MM",
              "MT",
              "MU",
              "MV",
              "MZ",
              "NE",
              "NP",
              "OM",
              "PK",
              "PY",
              "RO",
              "RS",
              "SA",
              "SI",
              "SK",
              "SN",
              "SZ",
              "TJ",
              "TM",
              "TN",
              "TZ",
              "VA",
              "VC",
              "ZM"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group1": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AS",
              "AU",
              "FM",
              "GU",
              "IN",
              "MH",
              "MP",
              "PW",
              "VI"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group10": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "ES",
              "IT"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group11": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "MX",
              "MY"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group12": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "NZ",
              "ZA"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group13": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "PA",
              "SR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group14": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "RU",
              "UA"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "oblast": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The oblast of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Oblast",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "oblast",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group15": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "UM",
              "VE"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "state"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group2": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AO",
              "AQ",
              "AW",
              "BI",
              "BJ",
              "BO",
              "BV",
              "BW",
              "BZ",
              "CD",
              "CF",
              "CG",
              "CK",
              "CM",
              "DJ",
              "DM",
              "ER",
              "FJ",
              "GA",
              "GD",
              "GH",
              "GM",
              "GQ",
              "GY",
              "KM",
              "LC",
              "LY",
              "ML",
              "MR",
              "MS",
              "NA",
              "NU",
              "PS",
              "QA",
              "RW",
              "SB",
              "SL",
              "ST",
              "TD",
              "TF",
              "TG",
              "TK",
              "TL",
              "TO",
              "TT",
              "UG",
              "VU",
              "WS",
              "YE",
              "ZW"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group3": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AM",
              "AR",
              "BY",
              "CC",
              "CL",
              "CX",
              "EG",
              "HM",
              "KZ",
              "MN",
              "NF",
              "PE",
              "UY",
              "UZ",
              "VN"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group4": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AT",
              "BE",
              "CH",
              "DE",
              "DK",
              "FI",
              "FK",
              "GB",
              "GL",
              "GR",
              "GS",
              "HU",
              "IO",
              "LI",
              "LU",
              "NL",
              "NO",
              "PL",
              "PN",
              "PR",
              "PT",
              "SE",
              "SH",
              "SJ",
              "TC"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group5": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "BS",
              "KI",
              "SC",
              "TV"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group6": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "BF",
              "CI",
              "MW"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group7": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "CR",
              "HN",
              "IQ",
              "PG",
              "SO",
              "SV"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "province"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group8": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "BL",
              "GF",
              "GP",
              "MF",
              "MQ",
              "NC",
              "PM",
              "RE",
              "WF",
              "YT"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_Group9": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "IR",
              "PH",
              "TH"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_HK": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "area": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The area of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Area",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "HK"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "area"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_ID": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "ID"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "province"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_IE": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "IE"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "County",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_JM": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "JM"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "parish": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The parish of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Parish",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "parish"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_JP": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine1Kanji": {
            "description": "The kanji version of the first line of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1 kanji",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine2Kanji": {
            "description": "The kanji version of the second line of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2 kanji",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "cityKanji": {
            "description": "The kanji version of the city of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City kanji",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "JP"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "prefecture": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The prefecture of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Prefecture",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "prefecture"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_KN": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "KN"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "island"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_KR": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "KR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "do_si",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_KY": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "KY"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "island"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_MC": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "CEDEX": {
            "description": "The CEDEX bureau of the location's address. Only applicable in certain countries.",
            "maxLength": 2,
            "nullable": true,
            "title": "CEDEX",
            "type": "string"
          },
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "MC"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_MO": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "MO"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_NG": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "NG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_NI": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "NI"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "department": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The department of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Department",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_NR": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "NR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "district"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_PF": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "PF"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "island",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_SG": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "SG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_SM": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "SM"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_TR": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "TR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_TW": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "TW"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "County",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "county",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_US": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "US"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "County",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "AccountLocation_VG": {
        "description": "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
        "properties": {
          "active": {
            "description": "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions.",
            "title": "Active",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the location's address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "VG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "locationCode": {
            "description": "A code assigned to this location by the insurer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location code",
            "type": "string"
          },
          "locationName": {
            "description": "A shorthand name for this location",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Location name",
            "type": "string"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this account",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "nonSpecific": {
            "description": "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
            "title": "Non-specific",
            "type": "boolean",
            "x-gw-createOnly": true
          },
          "phone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "A phone number for the location",
            "nullable": true,
            "title": "Phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          }
        },
        "title": "Account location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1"
        ],
        "x-gw-sortable": [
          "locationName",
          "locationNum"
        ]
      },
      "Activity": {
        "description": "An `Activity` is an assignable item that represents a task to be done, a decision to be made, or information to be aware of",
        "properties": {
          "activityPattern": {
            "description": "The code of the `ActivityPattern` used to create this activity and set its initial values",
            "maxLength": 60,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Activity pattern",
            "type": "string",
            "x-gw-createOnly": true
          },
          "activityType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of this activity, such as `general` or `approval`",
            "readOnly": true,
            "title": "Activity type",
            "x-gw-typelist": "ActivityType"
          },
          "approvalIssue": {
            "description": "The reason approval is needed. Only applicable to activities with an `activityType` of `approval`.",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Approval issue",
            "type": "string"
          },
          "approvalRationale": {
            "description": "Rationale for approving or rejecting this activity. Only applicable to activities with an `activityType` of `approval`.",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Approval rationale",
            "type": "string"
          },
          "approved": {
            "description": "This field is `true` if this activity has been approved, `false` if this activity has been rejected, and omitted otherwise. Only applicable to activities with an `activityType` of `approval`.",
            "readOnly": true,
            "title": "Approved",
            "type": "boolean"
          },
          "assignedByUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `User` who last assigned or re-assigned this activity",
            "readOnly": true,
            "title": "Assigned by user",
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "assignedGroup": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Group` that this activity is currently assigned to",
            "readOnly": true,
            "title": "Assigned group"
          },
          "assignedQueue": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Queue` that this activity is currently assigned to",
            "readOnly": true,
            "title": "Assigned queue"
          },
          "assignedUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `User` that this activity is currently assigned to",
            "readOnly": true,
            "title": "Assigned user",
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "assignmentStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The current assignment status of this activity, such as `assigned` or `unassigned`",
            "readOnly": true,
            "title": "Assignment status",
            "x-gw-typelist": "AssignmentStatus"
          },
          "associatedRole": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The role on the parent element that this activity is assigned to. For example, if this activity was created for a job, the activity might be assigned to the `Creator` or `Underwriter` role for that job.",
            "readOnly": true,
            "title": "Associated role",
            "x-gw-typelist": "UserRole"
          },
          "closeDate": {
            "description": "The date and time when this activity was completed, skipped, approved, or rejected",
            "format": "date-time",
            "readOnly": true,
            "title": "Close date",
            "type": "string"
          },
          "closeUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `User` that completed, skipped, approved, or rejected this activity",
            "readOnly": true,
            "title": "Close user",
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "createTime": {
            "description": "The date and time when this `Activity` was created (Since 1.1.0)",
            "format": "date-time",
            "readOnly": true,
            "title": "Create time",
            "type": "string",
            "x-gw-sinceVersion": "1.1.0"
          },
          "description": {
            "description": "The description of this activity",
            "maxLength": 1333,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "dueDate": {
            "description": "Date and time by which a person should complete the activity. If not completed by this time, the activity is considered overdue. Not applicable to activities that represent events rather than tasks.",
            "format": "date-time",
            "nullable": true,
            "title": "Due date",
            "type": "string"
          },
          "endDate": {
            "description": "Date and time at which the activity is expected to end. Only applicable to activities that represent events.",
            "format": "date-time",
            "nullable": true,
            "title": "End date",
            "type": "string"
          },
          "escalated": {
            "description": "A `true` value for this field indicates that the activity has been escalated",
            "readOnly": true,
            "title": "Escalated",
            "type": "boolean"
          },
          "escalationDate": {
            "description": "Date and time at which this activity will be escalated if it has not yet been completed",
            "format": "date-time",
            "nullable": true,
            "title": "Escalation date",
            "type": "string"
          },
          "externallyOwned": {
            "description": "A `true` value for this field indicates that the activity is owned by a user or group outside of the insurer",
            "title": "Externally owned",
            "type": "boolean"
          },
          "id": {
            "description": "The unique identifier of this `Activity`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "initialAssignment": {
            "$ref": "#/components/schemas/Assignee",
            "description": "The `Assignee` that this activity should be assigned to when it is first created",
            "title": "Initial assignment",
            "x-gw-createOnly": true
          },
          "mandatory": {
            "description": "A `true` value for this field indicates that the activity is mandatory and cannot be skipped",
            "title": "Mandatory",
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The priority of this activity",
            "title": "Priority",
            "x-gw-typelist": "Priority"
          },
          "recurring": {
            "description": "A `true` value indicates that this activity is recurring",
            "title": "Recurring",
            "type": "boolean"
          },
          "startDate": {
            "description": "Date and time at which the activity is scheduled to begin. Only applicable to activities that represent events.",
            "format": "date-time",
            "nullable": true,
            "title": "Start date",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The status of this activity, such as `open` or `complete`",
            "readOnly": true,
            "title": "Status",
            "x-gw-typelist": "ActivityStatus"
          },
          "subject": {
            "description": "A brief title for the activity",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Subject",
            "type": "string"
          }
        },
        "title": "Activity",
        "type": "object",
        "x-gw-filterable": [
          "closeDate",
          "dueDate",
          "escalated",
          "externallyOwned",
          "priority",
          "status",
          "subject"
        ],
        "x-gw-sortable": [
          "assignedUser",
          "dueDate",
          "escalated",
          "priority",
          "status",
          "subject"
        ]
      },
      "ActivityData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Activity"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ActivityList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ActivityData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ActivityResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ActivityPattern": {
        "description": "An `ActivityPattern` is a template for an activity, and is used to create a new activity and set defaults for some of its fields",
        "properties": {
          "activityClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The class of activity that this activity pattern creates, such as `task` or `event`",
            "title": "Activity class",
            "x-gw-typelist": "ActivityClass"
          },
          "activityType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of activity that this activity pattern creates, such as `general` or `approval`",
            "title": "Activity type",
            "x-gw-typelist": "ActivityType"
          },
          "category": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The category of the activity pattern. Used to help organize `ActivityPatterns` when presenting them to a user.",
            "title": "Category",
            "x-gw-filterBy": [
              "activityType"
            ],
            "x-gw-typelist": "ActivityCategory"
          },
          "code": {
            "description": "The code that uniquely identifies this `ActivityPattern`",
            "maxLength": 60,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Code",
            "type": "string",
            "x-gw-createOnly": true
          },
          "description": {
            "description": "The default `description` for activities created from this activity pattern",
            "maxLength": 1333,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Description",
            "type": "string"
          },
          "dueDate": {
            "description": "The default `dueDate` for activities created from this activity pattern, calculated based on the current date and time",
            "format": "date-time",
            "title": "Due date",
            "type": "string"
          },
          "escalationDate": {
            "description": "The default `escalationDate` for activities created from this activity pattern, calculated based on the current date and time",
            "format": "date-time",
            "title": "Escalation date",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `ActivityPattern`",
            "title": "ID",
            "type": "string"
          },
          "mandatory": {
            "description": "The default `mandatory` value for activities created from this activity pattern",
            "title": "Mandatory",
            "type": "boolean"
          },
          "patternLevel": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of parent element, such as `Job` or `Account`, that this activity pattern applies to",
            "title": "Pattern level",
            "x-gw-typelist": "ActivityPatternLevel"
          },
          "priority": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The default `priority` for activities created from this activity pattern",
            "title": "Priority",
            "x-gw-typelist": "Priority"
          },
          "recurring": {
            "description": "The default `recurring` value for activities created from this activity pattern",
            "title": "Recurring",
            "type": "boolean"
          },
          "subject": {
            "description": "The default `subject` for activities created from this activity pattern",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Subject",
            "type": "string"
          }
        },
        "title": "Activity pattern",
        "type": "object",
        "x-gw-filterable": [
          "activityClass",
          "activityType",
          "category"
        ],
        "x-gw-sortable": [
          "category",
          "code",
          "priority"
        ]
      },
      "ActivityPatternData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ActivityPattern"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ActivityPatternList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ActivityPatternData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ActivityRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ActivityData"
          },
          "included": {
            "$ref": "#/components/schemas/ActivityRequestInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ActivityRequestInclusions": {
        "properties": {
          "Note": {
            "items": {
              "$ref": "#/components/schemas/NoteData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ActivityResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ActivityData"
          },
          "included": {
            "$ref": "#/components/schemas/ActivityResponseInclusions"
          }
        },
        "type": "object"
      },
      "ActivityResponseInclusions": {
        "properties": {
          "Assignee": {
            "items": {
              "$ref": "#/components/schemas/AssigneeData"
            },
            "type": "array"
          },
          "Note": {
            "items": {
              "$ref": "#/components/schemas/NoteData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AdditionalNamedInsured": {
        "description": "Additional named insured for the policy (Since 1.4.0)",
        "properties": {
          "accountContact": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `AccountContact` that represents the person or company to add as an additional named insured",
            "title": "Account contact",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountContact",
            "x-gw-referenceType": "AccountContact"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "relationship": {
            "description": "The relationship to the primary named insured",
            "maxLength": 1333,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Relationship",
            "type": "string"
          }
        },
        "title": "Additional named insured",
        "type": "object",
        "x-gw-requiredForCreate": [
          "accountContact"
        ],
        "x-gw-sinceVersion": "1.4.0"
      },
      "AdditionalNamedInsuredData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdditionalNamedInsured"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "AdditionalNamedInsuredList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/AdditionalNamedInsuredData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AdditionalNamedInsuredRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdditionalNamedInsuredData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "AdditionalNamedInsuredResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdditionalNamedInsuredData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "Address": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "discriminator": {
          "mapping": {
            "AD": "#/components/schemas/Address_Group0",
            "AE": "#/components/schemas/Address_AE",
            "AF": "#/components/schemas/Address_Group0",
            "AG": "#/components/schemas/Address_AG",
            "AI": "#/components/schemas/Address_Group0",
            "AL": "#/components/schemas/Address_Group0",
            "AM": "#/components/schemas/Address_Group3",
            "AO": "#/components/schemas/Address_Group2",
            "AQ": "#/components/schemas/Address_Group2",
            "AR": "#/components/schemas/Address_Group3",
            "AS": "#/components/schemas/Address_Group1",
            "AT": "#/components/schemas/Address_Group4",
            "AU": "#/components/schemas/Address_Group1",
            "AW": "#/components/schemas/Address_Group2",
            "AZ": "#/components/schemas/Address_Group0",
            "BA": "#/components/schemas/Address_Group0",
            "BB": "#/components/schemas/Address_BB",
            "BD": "#/components/schemas/Address_Group0",
            "BE": "#/components/schemas/Address_Group4",
            "BF": "#/components/schemas/Address_Group6",
            "BG": "#/components/schemas/Address_Group0",
            "BH": "#/components/schemas/Address_Group0",
            "BI": "#/components/schemas/Address_Group2",
            "BJ": "#/components/schemas/Address_Group2",
            "BL": "#/components/schemas/Address_Group8",
            "BM": "#/components/schemas/Address_Group0",
            "BN": "#/components/schemas/Address_Group0",
            "BO": "#/components/schemas/Address_Group2",
            "BR": "#/components/schemas/Address_BR",
            "BS": "#/components/schemas/Address_Group5",
            "BT": "#/components/schemas/Address_Group0",
            "BV": "#/components/schemas/Address_Group2",
            "BW": "#/components/schemas/Address_Group2",
            "BY": "#/components/schemas/Address_Group3",
            "BZ": "#/components/schemas/Address_Group2",
            "CA": "#/components/schemas/Address_CA",
            "CC": "#/components/schemas/Address_Group3",
            "CD": "#/components/schemas/Address_Group2",
            "CF": "#/components/schemas/Address_Group2",
            "CG": "#/components/schemas/Address_Group2",
            "CH": "#/components/schemas/Address_Group4",
            "CI": "#/components/schemas/Address_Group6",
            "CK": "#/components/schemas/Address_Group2",
            "CL": "#/components/schemas/Address_Group3",
            "CM": "#/components/schemas/Address_Group2",
            "CN": "#/components/schemas/Address_CN",
            "CO": "#/components/schemas/Address_CO",
            "CR": "#/components/schemas/Address_Group7",
            "CV": "#/components/schemas/Address_CV",
            "CX": "#/components/schemas/Address_Group3",
            "CY": "#/components/schemas/Address_Group0",
            "CZ": "#/components/schemas/Address_Group0",
            "DE": "#/components/schemas/Address_Group4",
            "DJ": "#/components/schemas/Address_Group2",
            "DK": "#/components/schemas/Address_Group4",
            "DM": "#/components/schemas/Address_Group2",
            "DO": "#/components/schemas/Address_Group0",
            "DZ": "#/components/schemas/Address_Group0",
            "EC": "#/components/schemas/Address_Group0",
            "EE": "#/components/schemas/Address_Group0",
            "EG": "#/components/schemas/Address_Group3",
            "EH": "#/components/schemas/Address_Group0",
            "ER": "#/components/schemas/Address_Group2",
            "ES": "#/components/schemas/Address_Group10",
            "ET": "#/components/schemas/Address_Group0",
            "FI": "#/components/schemas/Address_Group4",
            "FJ": "#/components/schemas/Address_Group2",
            "FK": "#/components/schemas/Address_Group4",
            "FM": "#/components/schemas/Address_Group1",
            "FO": "#/components/schemas/Address_Group0",
            "FR": "#/components/schemas/Address_FR",
            "GA": "#/components/schemas/Address_Group2",
            "GB": "#/components/schemas/Address_Group4",
            "GD": "#/components/schemas/Address_Group2",
            "GE": "#/components/schemas/Address_Group0",
            "GF": "#/components/schemas/Address_Group8",
            "GH": "#/components/schemas/Address_Group2",
            "GI": "#/components/schemas/Address_GI",
            "GL": "#/components/schemas/Address_Group4",
            "GM": "#/components/schemas/Address_Group2",
            "GN": "#/components/schemas/Address_Group0",
            "GP": "#/components/schemas/Address_Group8",
            "GQ": "#/components/schemas/Address_Group2",
            "GR": "#/components/schemas/Address_Group4",
            "GS": "#/components/schemas/Address_Group4",
            "GT": "#/components/schemas/Address_Group0",
            "GU": "#/components/schemas/Address_Group1",
            "GW": "#/components/schemas/Address_Group0",
            "GY": "#/components/schemas/Address_Group2",
            "HK": "#/components/schemas/Address_HK",
            "HM": "#/components/schemas/Address_Group3",
            "HN": "#/components/schemas/Address_Group7",
            "HR": "#/components/schemas/Address_Group0",
            "HT": "#/components/schemas/Address_Group0",
            "HU": "#/components/schemas/Address_Group4",
            "ID": "#/components/schemas/Address_ID",
            "IE": "#/components/schemas/Address_IE",
            "IL": "#/components/schemas/Address_Group0",
            "IN": "#/components/schemas/Address_Group1",
            "IO": "#/components/schemas/Address_Group4",
            "IQ": "#/components/schemas/Address_Group7",
            "IR": "#/components/schemas/Address_Group9",
            "IS": "#/components/schemas/Address_Group0",
            "IT": "#/components/schemas/Address_Group10",
            "JM": "#/components/schemas/Address_JM",
            "JO": "#/components/schemas/Address_Group0",
            "JP": "#/components/schemas/Address_JP",
            "KE": "#/components/schemas/Address_Group0",
            "KG": "#/components/schemas/Address_Group0",
            "KH": "#/components/schemas/Address_Group0",
            "KI": "#/components/schemas/Address_Group5",
            "KM": "#/components/schemas/Address_Group2",
            "KN": "#/components/schemas/Address_KN",
            "KR": "#/components/schemas/Address_KR",
            "KW": "#/components/schemas/Address_Group0",
            "KY": "#/components/schemas/Address_KY",
            "KZ": "#/components/schemas/Address_Group3",
            "LA": "#/components/schemas/Address_Group0",
            "LB": "#/components/schemas/Address_Group0",
            "LC": "#/components/schemas/Address_Group2",
            "LI": "#/components/schemas/Address_Group4",
            "LK": "#/components/schemas/Address_Group0",
            "LR": "#/components/schemas/Address_Group0",
            "LS": "#/components/schemas/Address_Group0",
            "LT": "#/components/schemas/Address_Group0",
            "LU": "#/components/schemas/Address_Group4",
            "LV": "#/components/schemas/Address_Group0",
            "LY": "#/components/schemas/Address_Group2",
            "MA": "#/components/schemas/Address_Group0",
            "MC": "#/components/schemas/Address_MC",
            "MD": "#/components/schemas/Address_Group0",
            "ME": "#/components/schemas/Address_Group0",
            "MF": "#/components/schemas/Address_Group8",
            "MG": "#/components/schemas/Address_Group0",
            "MH": "#/components/schemas/Address_Group1",
            "MK": "#/components/schemas/Address_Group0",
            "ML": "#/components/schemas/Address_Group2",
            "MM": "#/components/schemas/Address_Group0",
            "MN": "#/components/schemas/Address_Group3",
            "MO": "#/components/schemas/Address_MO",
            "MP": "#/components/schemas/Address_Group1",
            "MQ": "#/components/schemas/Address_Group8",
            "MR": "#/components/schemas/Address_Group2",
            "MS": "#/components/schemas/Address_Group2",
            "MT": "#/components/schemas/Address_Group0",
            "MU": "#/components/schemas/Address_Group0",
            "MV": "#/components/schemas/Address_Group0",
            "MW": "#/components/schemas/Address_Group6",
            "MX": "#/components/schemas/Address_Group11",
            "MY": "#/components/schemas/Address_Group11",
            "MZ": "#/components/schemas/Address_Group0",
            "NA": "#/components/schemas/Address_Group2",
            "NC": "#/components/schemas/Address_Group8",
            "NE": "#/components/schemas/Address_Group0",
            "NF": "#/components/schemas/Address_Group3",
            "NG": "#/components/schemas/Address_NG",
            "NI": "#/components/schemas/Address_NI",
            "NL": "#/components/schemas/Address_Group4",
            "NO": "#/components/schemas/Address_Group4",
            "NP": "#/components/schemas/Address_Group0",
            "NR": "#/components/schemas/Address_NR",
            "NU": "#/components/schemas/Address_Group2",
            "NZ": "#/components/schemas/Address_Group12",
            "OM": "#/components/schemas/Address_Group0",
            "PA": "#/components/schemas/Address_Group13",
            "PE": "#/components/schemas/Address_Group3",
            "PF": "#/components/schemas/Address_PF",
            "PG": "#/components/schemas/Address_Group7",
            "PH": "#/components/schemas/Address_Group9",
            "PK": "#/components/schemas/Address_Group0",
            "PL": "#/components/schemas/Address_Group4",
            "PM": "#/components/schemas/Address_Group8",
            "PN": "#/components/schemas/Address_Group4",
            "PR": "#/components/schemas/Address_Group4",
            "PS": "#/components/schemas/Address_Group2",
            "PT": "#/components/schemas/Address_Group4",
            "PW": "#/components/schemas/Address_Group1",
            "PY": "#/components/schemas/Address_Group0",
            "QA": "#/components/schemas/Address_Group2",
            "RE": "#/components/schemas/Address_Group8",
            "RO": "#/components/schemas/Address_Group0",
            "RS": "#/components/schemas/Address_Group0",
            "RU": "#/components/schemas/Address_Group14",
            "RW": "#/components/schemas/Address_Group2",
            "SA": "#/components/schemas/Address_Group0",
            "SB": "#/components/schemas/Address_Group2",
            "SC": "#/components/schemas/Address_Group5",
            "SE": "#/components/schemas/Address_Group4",
            "SG": "#/components/schemas/Address_SG",
            "SH": "#/components/schemas/Address_Group4",
            "SI": "#/components/schemas/Address_Group0",
            "SJ": "#/components/schemas/Address_Group4",
            "SK": "#/components/schemas/Address_Group0",
            "SL": "#/components/schemas/Address_Group2",
            "SM": "#/components/schemas/Address_SM",
            "SN": "#/components/schemas/Address_Group0",
            "SO": "#/components/schemas/Address_Group7",
            "SR": "#/components/schemas/Address_Group13",
            "ST": "#/components/schemas/Address_Group2",
            "SV": "#/components/schemas/Address_Group7",
            "SZ": "#/components/schemas/Address_Group0",
            "TC": "#/components/schemas/Address_Group4",
            "TD": "#/components/schemas/Address_Group2",
            "TF": "#/components/schemas/Address_Group2",
            "TG": "#/components/schemas/Address_Group2",
            "TH": "#/components/schemas/Address_Group9",
            "TJ": "#/components/schemas/Address_Group0",
            "TK": "#/components/schemas/Address_Group2",
            "TL": "#/components/schemas/Address_Group2",
            "TM": "#/components/schemas/Address_Group0",
            "TN": "#/components/schemas/Address_Group0",
            "TO": "#/components/schemas/Address_Group2",
            "TR": "#/components/schemas/Address_TR",
            "TT": "#/components/schemas/Address_Group2",
            "TV": "#/components/schemas/Address_Group5",
            "TW": "#/components/schemas/Address_TW",
            "TZ": "#/components/schemas/Address_Group0",
            "UA": "#/components/schemas/Address_Group14",
            "UG": "#/components/schemas/Address_Group2",
            "UM": "#/components/schemas/Address_Group15",
            "US": "#/components/schemas/Address_US",
            "UY": "#/components/schemas/Address_Group3",
            "UZ": "#/components/schemas/Address_Group3",
            "VA": "#/components/schemas/Address_Group0",
            "VC": "#/components/schemas/Address_Group0",
            "VE": "#/components/schemas/Address_Group15",
            "VG": "#/components/schemas/Address_VG",
            "VI": "#/components/schemas/Address_Group1",
            "VN": "#/components/schemas/Address_Group3",
            "VU": "#/components/schemas/Address_Group2",
            "WF": "#/components/schemas/Address_Group8",
            "WS": "#/components/schemas/Address_Group2",
            "YE": "#/components/schemas/Address_Group2",
            "YT": "#/components/schemas/Address_Group8",
            "ZA": "#/components/schemas/Address_Group12",
            "ZM": "#/components/schemas/Address_Group0",
            "ZW": "#/components/schemas/Address_Group2"
          },
          "propertyName": "country"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/Address_AE"
          },
          {
            "$ref": "#/components/schemas/Address_AG"
          },
          {
            "$ref": "#/components/schemas/Address_BB"
          },
          {
            "$ref": "#/components/schemas/Address_BR"
          },
          {
            "$ref": "#/components/schemas/Address_CA"
          },
          {
            "$ref": "#/components/schemas/Address_CN"
          },
          {
            "$ref": "#/components/schemas/Address_CO"
          },
          {
            "$ref": "#/components/schemas/Address_CV"
          },
          {
            "$ref": "#/components/schemas/Address_FR"
          },
          {
            "$ref": "#/components/schemas/Address_GI"
          },
          {
            "$ref": "#/components/schemas/Address_Group0"
          },
          {
            "$ref": "#/components/schemas/Address_Group1"
          },
          {
            "$ref": "#/components/schemas/Address_Group10"
          },
          {
            "$ref": "#/components/schemas/Address_Group11"
          },
          {
            "$ref": "#/components/schemas/Address_Group12"
          },
          {
            "$ref": "#/components/schemas/Address_Group13"
          },
          {
            "$ref": "#/components/schemas/Address_Group14"
          },
          {
            "$ref": "#/components/schemas/Address_Group15"
          },
          {
            "$ref": "#/components/schemas/Address_Group2"
          },
          {
            "$ref": "#/components/schemas/Address_Group3"
          },
          {
            "$ref": "#/components/schemas/Address_Group4"
          },
          {
            "$ref": "#/components/schemas/Address_Group5"
          },
          {
            "$ref": "#/components/schemas/Address_Group6"
          },
          {
            "$ref": "#/components/schemas/Address_Group7"
          },
          {
            "$ref": "#/components/schemas/Address_Group8"
          },
          {
            "$ref": "#/components/schemas/Address_Group9"
          },
          {
            "$ref": "#/components/schemas/Address_HK"
          },
          {
            "$ref": "#/components/schemas/Address_ID"
          },
          {
            "$ref": "#/components/schemas/Address_IE"
          },
          {
            "$ref": "#/components/schemas/Address_JM"
          },
          {
            "$ref": "#/components/schemas/Address_JP"
          },
          {
            "$ref": "#/components/schemas/Address_KN"
          },
          {
            "$ref": "#/components/schemas/Address_KR"
          },
          {
            "$ref": "#/components/schemas/Address_KY"
          },
          {
            "$ref": "#/components/schemas/Address_MC"
          },
          {
            "$ref": "#/components/schemas/Address_MO"
          },
          {
            "$ref": "#/components/schemas/Address_NG"
          },
          {
            "$ref": "#/components/schemas/Address_NI"
          },
          {
            "$ref": "#/components/schemas/Address_NR"
          },
          {
            "$ref": "#/components/schemas/Address_PF"
          },
          {
            "$ref": "#/components/schemas/Address_SG"
          },
          {
            "$ref": "#/components/schemas/Address_SM"
          },
          {
            "$ref": "#/components/schemas/Address_TR"
          },
          {
            "$ref": "#/components/schemas/Address_TW"
          },
          {
            "$ref": "#/components/schemas/Address_US"
          },
          {
            "$ref": "#/components/schemas/Address_VG"
          }
        ],
        "title": "Address"
      },
      "Address_AE": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "AE"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "emirate": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The emirate of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Emirate",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "emirate"
        ]
      },
      "Address_AG": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "AG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "Address_BB": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "BB"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "parish": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The parish of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Parish",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_BR": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "BR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ]
      },
      "Address_CA": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "CA"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "County",
            "type": "string"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ]
      },
      "Address_CN": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "CN"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ]
      },
      "Address_CO": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "CO"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "department": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The department of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Department",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "department"
        ]
      },
      "Address_CV": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "CV"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_FR": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "CEDEX": {
            "description": "The CEDEX bureau of the address. Only applicable in certain countries.",
            "maxLength": 2,
            "nullable": true,
            "title": "CEDEX",
            "type": "string"
          },
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "FR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_GI": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "GI"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "Address_Group0": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "AD",
              "AF",
              "AI",
              "AL",
              "AZ",
              "BA",
              "BD",
              "BG",
              "BH",
              "BM",
              "BN",
              "BT",
              "CY",
              "CZ",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EH",
              "ET",
              "FO",
              "GE",
              "GN",
              "GT",
              "GW",
              "HR",
              "HT",
              "IL",
              "IS",
              "JO",
              "KE",
              "KG",
              "KH",
              "KW",
              "LA",
              "LB",
              "LK",
              "LR",
              "LS",
              "LT",
              "LV",
              "MA",
              "MD",
              "ME",
              "MG",
              "MK",
              "MM",
              "MT",
              "MU",
              "MV",
              "MZ",
              "NE",
              "NP",
              "OM",
              "PK",
              "PY",
              "RO",
              "RS",
              "SA",
              "SI",
              "SK",
              "SN",
              "SZ",
              "TJ",
              "TM",
              "TN",
              "TZ",
              "VA",
              "VC",
              "ZM"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group1": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "AS",
              "AU",
              "FM",
              "GU",
              "IN",
              "MH",
              "MP",
              "PW",
              "VI"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ]
      },
      "Address_Group10": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "ES",
              "IT"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ]
      },
      "Address_Group11": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "MX",
              "MY"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_Group12": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "NZ",
              "ZA"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_Group13": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "PA",
              "SR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group14": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "RU",
              "UA"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "oblast": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The oblast of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Oblast",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "oblast",
          "postalCode"
        ]
      },
      "Address_Group15": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "UM",
              "VE"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "state"
        ]
      },
      "Address_Group2": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "AO",
              "AQ",
              "AW",
              "BI",
              "BJ",
              "BO",
              "BV",
              "BW",
              "BZ",
              "CD",
              "CF",
              "CG",
              "CK",
              "CM",
              "DJ",
              "DM",
              "ER",
              "FJ",
              "GA",
              "GD",
              "GH",
              "GM",
              "GQ",
              "GY",
              "KM",
              "LC",
              "LY",
              "ML",
              "MR",
              "MS",
              "NA",
              "NU",
              "PS",
              "QA",
              "RW",
              "SB",
              "SL",
              "ST",
              "TD",
              "TF",
              "TG",
              "TK",
              "TL",
              "TO",
              "TT",
              "UG",
              "VU",
              "WS",
              "YE",
              "ZW"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group3": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "AM",
              "AR",
              "BY",
              "CC",
              "CL",
              "CX",
              "EG",
              "HM",
              "KZ",
              "MN",
              "NF",
              "PE",
              "UY",
              "UZ",
              "VN"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group4": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "AT",
              "BE",
              "CH",
              "DE",
              "DK",
              "FI",
              "FK",
              "GB",
              "GL",
              "GR",
              "GS",
              "HU",
              "IO",
              "LI",
              "LU",
              "NL",
              "NO",
              "PL",
              "PN",
              "PR",
              "PT",
              "SE",
              "SH",
              "SJ",
              "TC"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_Group5": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "BS",
              "KI",
              "SC",
              "TV"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group6": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "BF",
              "CI",
              "MW"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group7": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "CR",
              "HN",
              "IQ",
              "PG",
              "SO",
              "SV"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "province"
        ]
      },
      "Address_Group8": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "BL",
              "GF",
              "GP",
              "MF",
              "MQ",
              "NC",
              "PM",
              "RE",
              "WF",
              "YT"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_Group9": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "IR",
              "PH",
              "TH"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_HK": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "area": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The area of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Area",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "HK"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "area"
        ]
      },
      "Address_ID": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "ID"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "province"
        ]
      },
      "Address_IE": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "IE"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "County",
            "type": "string"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_JM": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "JM"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "parish": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The parish of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Parish",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "parish"
        ]
      },
      "Address_JP": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine1Kanji": {
            "description": "The kanji version of the first line of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1 kanji",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine2Kanji": {
            "description": "The kanji version of the second line of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2 kanji",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "cityKanji": {
            "description": "The kanji version of the city of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City kanji",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "JP"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "prefecture": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The prefecture of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Prefecture",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "prefecture"
        ]
      },
      "Address_KN": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "KN"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "island"
        ]
      },
      "Address_KR": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "KR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "do_si",
          "postalCode"
        ]
      },
      "Address_KY": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "KY"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "island"
        ]
      },
      "Address_MC": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "CEDEX": {
            "description": "The CEDEX bureau of the address. Only applicable in certain countries.",
            "maxLength": 2,
            "nullable": true,
            "title": "CEDEX",
            "type": "string"
          },
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "MC"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_MO": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "MO"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "Address_NG": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "NG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_NI": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "NI"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "department": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The department of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Department",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_NR": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "NR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "district"
        ]
      },
      "Address_PF": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "PF"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "island",
          "postalCode"
        ]
      },
      "Address_SG": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "SG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "postalCode"
        ]
      },
      "Address_SM": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "SM"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "postalCode"
        ]
      },
      "Address_TR": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "TR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_TW": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "TW"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "County",
            "type": "string"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "county",
          "postalCode"
        ]
      },
      "Address_US": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "US"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "County",
            "type": "string"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ]
      },
      "Address_VG": {
        "description": "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 2",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Address line 3",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the address (Since 1.2.0)",
            "nullable": true,
            "title": "Address type",
            "x-gw-sinceVersion": "1.2.0",
            "x-gw-typelist": "AddressType"
          },
          "city": {
            "description": "The city of the address",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
            "enum": [
              "VG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "The description of the address (Since 1.2.0)",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "displayName": {
            "description": "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this `Address`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code of the address. Only applicable in certain countries.",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Postal code",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "description": "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
            "nullable": true,
            "title": "Spatial point",
            "x-gw-sinceVersion": "1.2.0"
          },
          "validUntil": {
            "description": "The date and time that the address is valid until (Since 1.2.0)",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          }
        },
        "title": "Address",
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "AssessmentSummary": {
        "description": "Assessment summary (Since 1.5.0)",
        "properties": {
          "assessedEntity": {
            "$ref": "#/components/schemas/GenericRelation",
            "description": "A reference to the specific entity associated with this assessment, if any",
            "maxLength": 256,
            "title": "Assessed entity",
            "x-gw-createOnly": true
          },
          "category": {
            "description": "The categorization of the score. For example, a fraud system may use low_risk, medium_risk, high_risk. A total loss evaluation system may use repairable, total_loss.",
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Category",
            "type": "string",
            "x-gw-createOnly": true
          },
          "conclusionCode": {
            "description": "The external system may provide a conclusion code, which summarizes the assessment conclusion. The conclusion code is intended to be used in business rules.",
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Conclusion code",
            "type": "string",
            "x-gw-createOnly": true
          },
          "conclusionDescription": {
            "description": "A human readable description of the conclusion code",
            "maxLength": 1333,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Conclusion description",
            "type": "string",
            "x-gw-createOnly": true
          },
          "estimate": {
            "description": "The estimate relating to the assessment. The meaning of the estimate depends on the type of assessment.",
            "format": "gw-bigdecimal",
            "title": "Estimate",
            "type": "string",
            "x-gw-createOnly": true
          },
          "flexistoreDocumentId": {
            "description": "The Flexistore identifier for this assessment summary (Since 1.6.0)",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Document id",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-sinceVersion": "1.6.0"
          },
          "flexistorePoolId": {
            "description": "The Flexistore pool identifier for this assessment summary (Since 1.6.0)",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Pool id",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-sinceVersion": "1.6.0"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "normalizedScore": {
            "description": "The raw score mapped into the range 0-100. For example, a raw score of 320 out of 400 could map on a normalized score of 80.",
            "format": "gw-bigdecimal",
            "title": "Normalized score",
            "type": "string",
            "x-gw-createOnly": true
          },
          "recommendedActionCode": {
            "description": "The external system may provide a recommended action code that should be triggered in PolicyCenter. This code could be used in business rules.",
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Recommended action code",
            "type": "string",
            "x-gw-createOnly": true
          },
          "recommendedActionDescription": {
            "description": "A human readable description of the recommended action",
            "maxLength": 1333,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Recommended action description",
            "type": "string",
            "x-gw-createOnly": true
          },
          "recommendedValue": {
            "description": "Recommended actions may be optionally parameterized. For example, if there is a rate increase, the `recommendedValue` would provide the factor for the increase.",
            "format": "gw-bigdecimal",
            "title": "Recommended value",
            "type": "string",
            "x-gw-createOnly": true
          },
          "score": {
            "description": "The score relating to the assessment. The meaning of a score depends on the type of assessment.",
            "format": "gw-bigdecimal",
            "title": "Score",
            "type": "string",
            "x-gw-createOnly": true
          },
          "scoreDate": {
            "description": "The date and time the external system scored the assessed entity",
            "format": "date-time",
            "title": "Score date",
            "type": "string",
            "x-gw-createOnly": true
          },
          "scorePercentile": {
            "description": "A value corresponding to where the score lies in the distribution of scores, as determined by the external system",
            "format": "gw-bigdecimal",
            "title": "score percentile",
            "type": "string",
            "x-gw-createOnly": true
          },
          "tapId": {
            "description": "The assessment provider name",
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "title": "TAP ID",
            "type": "string",
            "x-gw-createOnly": true
          },
          "tapSubtypeId": {
            "description": "Designation to differentiate between distinct types of assessments",
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "title": "TAP subtype ID",
            "type": "string",
            "x-gw-createOnly": true
          }
        },
        "title": "Assessment summary",
        "type": "object",
        "x-gw-filterable": [
          "category",
          "conclusionCode",
          "conclusionDescription",
          "estimate",
          "flexistoreDocumentId",
          "flexistorePoolId",
          "normalizedScore",
          "recommendedActionCode",
          "recommendedActionDescription",
          "recommendedValue",
          "score",
          "scoreDate",
          "scorePercentile",
          "tapId",
          "tapSubtypeId"
        ],
        "x-gw-requiredForCreate": [
          "category",
          "scoreDate",
          "tapId",
          "tapSubtypeId"
        ],
        "x-gw-sinceVersion": "1.5.0",
        "x-gw-sortable": [
          "category",
          "conclusionCode",
          "conclusionDescription",
          "estimate",
          "flexistoreDocumentId",
          "flexistorePoolId",
          "normalizedScore",
          "recommendedActionCode",
          "recommendedActionDescription",
          "recommendedValue",
          "score",
          "scoreDate",
          "scorePercentile",
          "tapId",
          "tapSubtypeId"
        ]
      },
      "AssessmentSummaryData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AssessmentSummary"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "AssessmentSummaryList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/AssessmentSummaryData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AssessmentSummaryRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AssessmentSummaryData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "AssessmentSummaryResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AssessmentSummaryData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "AssignJobRoleRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JobRoleData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "Assignee": {
        "description": "An `Assignee` represents the target of an assignment action, such as a user/group combination, assignment queue, or automatic rule-based assignment",
        "properties": {
          "assigneeId": {
            "description": "Unique ID to reference this `Assignee` for includes (Since 1.4.0)",
            "readOnly": true,
            "title": "Assignee ID",
            "type": "string",
            "x-gw-sinceVersion": "1.4.0"
          },
          "autoAssign": {
            "description": "Set to `true` to indicate the assignment should be done automatically by the system. Cannot be combined with any other fields.",
            "title": "Auto assign",
            "type": "boolean"
          },
          "groupId": {
            "description": "The ID of the `Group` that the resource should be assigned to. If specified without the `userId` field, the `User` within the `Group` is selected by assignment rules. If specified along with the `userId` field, that specific `User` is assigned the element.",
            "title": "Group ID",
            "type": "string"
          },
          "name": {
            "description": "A human-readable name for the type of assignment that this `Assignee` represents",
            "readOnly": true,
            "title": "Name",
            "type": "string"
          },
          "queueId": {
            "description": "The ID of the `Queue` that the resource should be assigned to. Cannot be combined with any other fields.",
            "title": "Queue ID",
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "Requests assignment of the element to the user that has the specified role on the element or its parent. Cannot be combined with any other fields.",
            "title": "Role",
            "x-gw-typelist": "UserRole"
          },
          "userId": {
            "description": "The ID of the `User` that the resource should be assigned to. The `groupId` field must also be specified if the `userId` field is specified, and the `User` must be a member of that `Group` and have permission to be assigned the element.",
            "title": "User ID",
            "type": "string"
          }
        },
        "title": "Assignee",
        "type": "object"
      },
      "AssigneeData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Assignee"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "AssigneeList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/AssigneeData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchRequest": {
        "description": "The body of a batch request",
        "properties": {
          "requests": {
            "description": "The array of subrequests",
            "items": {
              "$ref": "#/components/schemas/BatchSubRequest"
            },
            "title": "Requests",
            "type": "array"
          }
        },
        "required": [
          "requests"
        ],
        "title": "Batch request",
        "type": "object"
      },
      "BatchResponse": {
        "description": "The body of a response to a batch request. The `responses` field will have one element for every entry in the `requests` field on the request, and responses will appear in the same order.",
        "properties": {
          "responses": {
            "description": "The list of subresponses, appearing in the same order as the elements in the `requests` field of the request",
            "items": {
              "$ref": "#/components/schemas/BatchSubResponse"
            },
            "title": "Responses",
            "type": "array"
          }
        },
        "title": "Batch response",
        "type": "object"
      },
      "BatchSubRequest": {
        "description": "An individual subrequest within a batch request",
        "properties": {
          "body": {
            "description": "The body of the subrequest",
            "title": "Body",
            "type": "object"
          },
          "headers": {
            "description": "Headers that will be included as part of the subrequest. Any headers defined using this field will override header values inherited from the main request. Any headers present on the main request that are not defined in this list will be inherited when the subrequest is made, with the exception of the `GW-Checksum` header.",
            "items": {
              "$ref": "#/components/schemas/Header"
            },
            "title": "Headers",
            "type": "array"
          },
          "method": {
            "description": "The HTTP method for the subrequest",
            "enum": [
              "delete",
              "head",
              "get",
              "options",
              "patch",
              "post",
              "put"
            ],
            "title": "Method",
            "type": "string"
          },
          "onFail": {
            "description": "Controls whether or not subsequent subrequests are processed if this subrequest fails. The default behavior is to continue processing subrequests. The `abort` option specifies that all subsequent subrequests will be skipped.",
            "enum": [
              "abort",
              "continue"
            ],
            "title": "On fail",
            "type": "string"
          },
          "path": {
            "description": "The path for the subrequest. This path is relative to the root of the API hosting the batch endpoint. For example, if the batch endpoint is `<servlet>/rest/common/v1/batch`, then a path of `/activities` will mean a request against `<servlet>/rest/common/v1/activities`. The path must start with `/` and cannot contain whitespace.",
            "minLength": 1,
            "pattern": "^/[\\S]*$",
            "title": "Path",
            "type": "string"
          },
          "query": {
            "description": "The query string to use for the subrequest",
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "method",
          "path"
        ],
        "title": "Batch subrequest",
        "type": "object"
      },
      "BatchSubResponse": {
        "description": "A subresponse to a batch subrequest",
        "properties": {
          "body": {
            "description": "The body of the subresponse",
            "title": "Body",
            "type": "object"
          },
          "code": {
            "description": "The HTTP status code for the subresponse",
            "title": "Code",
            "type": "integer"
          },
          "headers": {
            "description": "The headers returned for the subresponse",
            "items": {
              "$ref": "#/components/schemas/Header"
            },
            "title": "Headers",
            "type": "array"
          },
          "skipped": {
            "description": "A `true` value indicates that the corresponding subrequest was not processed due to a prior failed request that specified the `onFail` field with the `abort` option",
            "title": "Skipped",
            "type": "boolean"
          }
        },
        "title": "Batch subresponse",
        "type": "object"
      },
      "ChangeJobEffectiveDateAttributes": {
        "description": "Details of the request to change a job's effective date (Since 1.3.0)",
        "properties": {
          "jobEffectiveDate": {
            "description": "The date on which the job takes effect",
            "format": "date",
            "title": "Job effective date",
            "type": "string"
          }
        },
        "required": [
          "jobEffectiveDate"
        ],
        "title": "Change job effective date attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.3.0"
      },
      "ChangeJobEffectiveDateData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ChangeJobEffectiveDateAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ChangeJobEffectiveDateRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ChangeJobEffectiveDateData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ChangeJobVersionAttributes": {
        "description": "The new selected version for the job",
        "properties": {
          "selectedVersion": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference object that contains the `id` of the `JobVersion` that should become the new selected version for the job",
            "title": "Selected version"
          }
        },
        "required": [
          "selectedVersion"
        ],
        "title": "Change job version attributes",
        "type": "object"
      },
      "ChangeJobVersionData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ChangeJobVersionAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ChangeJobVersionRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ChangeJobVersionData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "Contingency": {
        "description": "A `Contingency` indicates that some additional work is still remaining on the policy, such as additional documentation that the insured needs to provide. If the underlying issue is not resolved by the `actionStartDate`, then the `action` will automatically be started by the system, such as initiating a policy change or cancellation. (Since 1.3.0)",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The action that will be taken if the underlying issue is not resolved successfully, such as changing or canceling the policy",
            "title": "Action",
            "x-gw-createOnly": true,
            "x-gw-typelist": "ContingencyAction"
          },
          "actionStartDate": {
            "description": "The date on which the action specified in the `action` field will be initiated if the underlying issue is still unresolved. This value is calculated from the `action` type and the `dueDate` in order to ensure that the action can completed by the due date.",
            "format": "date-time",
            "readOnly": true,
            "title": "Action start date",
            "type": "string"
          },
          "actionStarted": {
            "description": "A `true` value for this field indicates that the action specified in the `action` field has started",
            "readOnly": true,
            "title": "Action started",
            "type": "boolean"
          },
          "closeDate": {
            "description": "The date and time when this `Contingency` was closed",
            "format": "date-time",
            "readOnly": true,
            "title": "Close date",
            "type": "string"
          },
          "closeUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The user or service that closed this `Contingency`",
            "readOnly": true,
            "title": "Close user",
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "createDate": {
            "description": "The date and time when this `Contingency` was created",
            "format": "date-time",
            "readOnly": true,
            "title": "Create date",
            "type": "string"
          },
          "createUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The user or service who created this `Contingency`",
            "readOnly": true,
            "title": "Create user",
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "description": {
            "description": "The details of the underlying issue",
            "minLength": 1,
            "pattern": "\\S",
            "title": "Description",
            "type": "string",
            "x-gw-createOnly": true
          },
          "dueDate": {
            "description": "The date and time by which the underlying issue must be resolved",
            "format": "date-time",
            "title": "Due date",
            "type": "string",
            "x-gw-createOnly": true
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The status of this `Contingency`",
            "readOnly": true,
            "title": "Status",
            "x-gw-typelist": "ContingencyStatus"
          },
          "title": {
            "description": "A short summary of the underlying issue",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Title",
            "type": "string",
            "x-gw-createOnly": true
          }
        },
        "title": "Contingency",
        "type": "object",
        "x-gw-filterable": [
          "action",
          "status",
          "title"
        ],
        "x-gw-requiredForCreate": [
          "action",
          "description",
          "dueDate",
          "title"
        ],
        "x-gw-sinceVersion": "1.3.0",
        "x-gw-sortable": [
          "action",
          "actionStartDate",
          "closeDate",
          "createDate",
          "dueDate",
          "status"
        ]
      },
      "ContingencyData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Contingency"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ContingencyList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ContingencyData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ContingencyRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContingencyData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ContingencyResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContingencyData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "Cost": {
        "description": "A `Cost` represents a unit of price over a period of time",
        "properties": {
          "adjustedRate": {
            "description": "The adjusted rate, after any modification factors have been applied, for the cost over the rated term",
            "format": "gw-bigdecimal",
            "readOnly": true,
            "title": "Adjusted rate",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The current amount of this cost for the period of time between the `effectiveDate` and the `expirationDate`",
            "readOnly": true,
            "title": "Amount"
          },
          "baseRate": {
            "description": "The base rate, before any modification factors have been applied, for the cost over the rated term",
            "format": "gw-bigdecimal",
            "readOnly": true,
            "title": "Base rate",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "basis": {
            "description": "The basis for this cost for the period of time between the `effectiveDate` and the `expirationDate`",
            "format": "gw-bigdecimal",
            "readOnly": true,
            "title": "Basis",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "basisScalable": {
            "description": "A `true` value for this field indicates that the `amount` of the cost will be scaled based on the `basis` of the cost if the effective length of the period is altered (Since 1.2.0)",
            "readOnly": true,
            "title": "Basis scalable",
            "type": "boolean",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.2.0"
          },
          "chargeGroup": {
            "description": "A custom group name that can be used to group related charges",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Charge group",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "chargePattern": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of charge that this cost represents, such as premium or taxes",
            "readOnly": true,
            "title": "Charge pattern",
            "x-gw-typelist": "ChargePattern"
          },
          "costCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The `CostCode` associated with this `Cost`",
            "readOnly": true,
            "title": "Cost code"
          },
          "coverable": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `Coverable` that this cost applies to",
            "readOnly": true,
            "title": "Coverable"
          },
          "coverage": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `Coverage` that this cost applies to",
            "readOnly": true,
            "title": "Coverage"
          },
          "effectiveDate": {
            "description": "The start date and time for the period of time that this cost covers",
            "format": "date-time",
            "readOnly": true,
            "title": "Effective date",
            "type": "string"
          },
          "expirationDate": {
            "description": "The end date and time for the period of time that this cost covers",
            "format": "date-time",
            "readOnly": true,
            "title": "Expiration date",
            "type": "string"
          },
          "exposure": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `Exposure` that this cost applies to (Since 1.2.0)",
            "readOnly": true,
            "title": "Coverage",
            "x-gw-sinceVersion": "1.2.0"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "jurisdiction": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The jurisdiction that this cost applies to",
            "readOnly": true,
            "title": "Jurisdiction",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-typelist": "Jurisdiction"
          },
          "numDaysInRatedTerm": {
            "description": "The number of days in the policy term that were used when calculating the amounts in this cost",
            "exclusiveMinimum": true,
            "minimum": 0,
            "readOnly": true,
            "title": "Number of days in rated term",
            "type": "integer",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "overridable": {
            "description": "A `true` value for this field indicates that overrides are allowed on this cost",
            "readOnly": true,
            "title": "Overridable",
            "type": "boolean",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "overrideAdjustedRate": {
            "description": "An override value that will be used as the `adjustedRate` for this cost instead of the `standardAdjustedRate` when calculating the `termAmount`",
            "format": "gw-bigdecimal",
            "readOnly": true,
            "title": "Override adjusted rate",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "overrideAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "An override value that will be used as the `amount` for this cost instead of the `standardAmount`",
            "readOnly": true,
            "title": "Override amount",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "overrideBaseRate": {
            "description": "An override value that will be used as the `baseRate` for this cost instead of the `standardBaseRate` when calculating the `adjustedRate`",
            "format": "gw-bigdecimal",
            "readOnly": true,
            "title": "Override base rate",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "overrideReason": {
            "description": "The reason for setting one of the override fields",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Override reason",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "overrideSource": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The source that set one of the override fields",
            "readOnly": true,
            "title": "Override source",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-typelist": "OverrideSourceType"
          },
          "overrideTermAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "An override value that will be used as the `termAmount` for this cost instead of the `standardTermAmount` when calculating the `amount`",
            "readOnly": true,
            "title": "Override term amount",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "policyLine": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `PolicyLine` that this cost applies to",
            "readOnly": true,
            "title": "Policy line",
            "x-gw-reference-schema": "PolicyLine",
            "x-gw-referenceType": "PolicyLine"
          },
          "prorationMethod": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The proration method used to calculate the `amount` from the `termAmount`",
            "readOnly": true,
            "title": "Proration method",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-typelist": "ProrationMethod"
          },
          "rateAmountType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of credit or debit that this cost represents",
            "readOnly": true,
            "title": "Rate amount type",
            "x-gw-typelist": "RateAmountType"
          },
          "rateRoutine": {
            "description": "The rate routine that produced this cost",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Rate routine",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "raterId": {
            "description": "The ID of the `Rater` that produced this cost",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Rater ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "roundingLevel": {
            "description": "The number of decimal places that this cost was rounded to during proration",
            "readOnly": true,
            "title": "Rounding level",
            "type": "integer",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "roundingMode": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The rounding mode, such as half up or half even, that was used during proration",
            "readOnly": true,
            "title": "Rounding mode",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-typelist": "RoundingModeType"
          },
          "standardAdjustedRate": {
            "description": "The standard value for the `adjustedRate` field, as calculated based on the `standardBaseRate`. This field can be used as a reference value if this cost has been overridden.",
            "format": "gw-bigdecimal",
            "readOnly": true,
            "title": "Standard adjusted rate",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "standardAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The standard value for the `amount` field, as calculated based on the `standardTermAmount`. This field can be used as a reference value if this cost has been overridden.",
            "readOnly": true,
            "title": "Standard amount",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "standardBaseRate": {
            "description": "The standard value for the `baseRate` field. This field can be used as a reference value if this cost has been overridden.",
            "format": "gw-bigdecimal",
            "readOnly": true,
            "title": "Standard base rate",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "standardTermAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The standard value for the `termAmount` field, as calculated based on the `standardAdjustedRate`. This field can be used as a reference value if this cost has been overridden.",
            "readOnly": true,
            "title": "Standard term amount",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "subjectToReporting": {
            "description": "A `true` value indicates that this cost is subject to reporting",
            "readOnly": true,
            "title": "Subject to reporting",
            "type": "boolean",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "termAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The amount of this cost over the full term of the policy. This amount is prorated to arrive at the `amount` if this cost does not cover the entire policy term.",
            "readOnly": true,
            "title": "Term amount"
          }
        },
        "title": "Cost",
        "type": "object",
        "x-gw-filterable": [
          "chargePattern"
        ],
        "x-gw-sortable": [
          "chargePattern"
        ]
      },
      "CostData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Cost"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "CostList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/CostData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CreateSubmissionAttributes": {
        "description": "Details of the `Submission` job to create",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Account` that the policy is being created for",
            "title": "Account"
          },
          "baseState": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state or jurisdiction that the policy is based on",
            "title": "Base state",
            "x-gw-typelist": "Jurisdiction"
          },
          "dateQuoteNeeded": {
            "description": "The date that a quote for this submission is needed by",
            "format": "date",
            "nullable": true,
            "title": "Date quote needed",
            "type": "string"
          },
          "description": {
            "description": "An extended description of this job. Can be used to describe the reason why this job was created. (Since 1.1.0)",
            "title": "Description",
            "type": "string",
            "x-gw-sinceVersion": "1.1.0"
          },
          "jobEffectiveDate": {
            "description": "The date on which the new policy will become effective",
            "format": "date",
            "title": "Job effective date",
            "type": "string"
          },
          "periodEnd": {
            "description": "The end date and time for this policy term. When setting this value, use a date-only value such as '2021-10-25', as the system will assign the appropriate time component automatically. If a date-time value is sent in as input, the time component on the input value will be ignored. (Since 1.6.0)",
            "format": "date-time",
            "title": "Period end",
            "type": "string",
            "x-gw-sinceVersion": "1.6.0"
          },
          "producerCode": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `ProducerCode` that the new policy will be assigned to",
            "title": "Producer code"
          },
          "product": {
            "$ref": "#/components/schemas/ProductModelReference",
            "description": "A reference to the `Product` that represents the insurance product that the new policy is for",
            "title": "Product"
          },
          "quoteType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of quote that is requested",
            "title": "Quote type",
            "x-gw-typelist": "QuoteType"
          },
          "termType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of term for the new policy, such as annual or half year. Must be one of the allowed term types for the requested product. If not specified, the default will be based on the insurance product's default term type.",
            "title": "Term type",
            "x-gw-typelist": "TermType"
          },
          "uwCompany": {
            "$ref": "#/components/schemas/UWCompanyReference",
            "description": "A reference to the `UWCompany` that issues this policy (Since 1.3.0)",
            "title": "Underwriting company",
            "x-gw-sinceVersion": "1.3.0"
          }
        },
        "required": [
          "account",
          "baseState",
          "jobEffectiveDate",
          "producerCode",
          "product"
        ],
        "title": "Create submission attributes",
        "type": "object"
      },
      "CreateSubmissionData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateSubmissionAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "CreateSubmissionRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateSubmissionData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "DeclineAttributes": {
        "description": "Details of the decision to decline the submission",
        "properties": {
          "rejectReason": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The reason for declining the submission",
            "title": "Reject reason",
            "x-gw-typelist": "ReasonCode"
          },
          "rejectReasonText": {
            "description": "A more detailed explanation for why the submission was declined",
            "nullable": true,
            "title": "Reject reason text",
            "type": "string"
          }
        },
        "required": [
          "rejectReason"
        ],
        "title": "Decline attributes",
        "type": "object"
      },
      "DeclineData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/DeclineAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "DeclineRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeclineData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "DiffTreeNode": {
        "description": "A node in the tree of differences between two policy periods (Since 1.4.0)",
        "properties": {
          "changeType": {
            "description": "The type of diff change - Add or Remove or Change or Window - associated with this difference tree node",
            "title": "Change type",
            "type": "string"
          },
          "children": {
            "description": "A collection of children for this difference tree node",
            "items": {
              "$ref": "#/components/schemas/DiffTreeNode"
            },
            "title": "Children",
            "type": "array"
          },
          "entity": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The element that has the differing values and/or child diffs",
            "title": "Entity"
          },
          "field": {
            "description": "The field that this diff tree node corresponds to, if any",
            "title": "Field",
            "type": "string"
          },
          "label": {
            "description": "A descriptive label for this diff tree node",
            "title": "Label",
            "type": "string"
          },
          "value1": {
            "description": "The first value of the difference. This could be the old value or value on the first job, depending on the context of the difference.",
            "title": "First value",
            "type": "string"
          },
          "value2": {
            "description": "The second value of the difference. This could be the new value or the value on the second job, depending on the context of the difference.",
            "title": "Second value",
            "type": "string"
          }
        },
        "title": "Diff tree node",
        "type": "object",
        "x-gw-sinceVersion": "1.4.0"
      },
      "Document": {
        "description": "A `Document` represents a document within the application, which can have additional metadata such as the author of the document or a specific security level. The actual contents of the document are generally stored in a separate document management system that this application is linked to. (Since 1.1.0)",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Account` that this document is associated with (Since 1.2.0)",
            "readOnly": true,
            "title": "Account",
            "x-gw-reference-schema": "Account",
            "x-gw-referenceType": "Account",
            "x-gw-sinceVersion": "1.2.0"
          },
          "author": {
            "description": "The name of the person who created this document",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Author",
            "type": "string"
          },
          "contingency": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Contingency` that this document is associated with (Since 1.3.0)",
            "readOnly": true,
            "title": "Contingency",
            "x-gw-reference-schema": "Contingency",
            "x-gw-referenceType": "Contingency",
            "x-gw-sinceVersion": "1.3.0"
          },
          "dateModified": {
            "description": "The date and time that this `Document` was most recently updated",
            "format": "date-time",
            "readOnly": true,
            "title": "Date modified",
            "type": "string"
          },
          "description": {
            "description": "A description of this document",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string"
          },
          "docUID": {
            "description": "The unique identifier for this `Document` in the linked document management system. The exact format of the identifier depends upon the specifics of the document management system the application is linked to.",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Document UID",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "id": {
            "description": "The unique identifier of this `Document`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "inbound": {
            "description": "This field indicates whether this document is considered to be inbound, outbound, or neither",
            "nullable": true,
            "title": "Inbound",
            "type": "boolean"
          },
          "job": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Job` that this document is associated with (Since 1.2.0)",
            "readOnly": true,
            "title": "Job",
            "x-gw-reference-schema": "Job",
            "x-gw-referenceType": "Job",
            "x-gw-sinceVersion": "1.2.0"
          },
          "language": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The language in which this document was produced",
            "nullable": true,
            "title": "Language",
            "x-gw-typelist": "LanguageType"
          },
          "mimeType": {
            "description": "The MIME type of this document, such as `application/msword` for a Microsoft Word document",
            "maxLength": 80,
            "minLength": 1,
            "pattern": "\\S",
            "title": "MIME type",
            "type": "string"
          },
          "name": {
            "description": "The name of this document",
            "maxLength": 80,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Name",
            "type": "string"
          },
          "obsolete": {
            "description": "Setting this field to `true` indicates that the information in this document can no longer be relied upon to be current and relevant. This is often used instead of deletion to preserve history.",
            "nullable": true,
            "title": "Obsolete",
            "type": "boolean"
          },
          "policy": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Policy` that this document is associated with (Since 1.2.0)",
            "readOnly": true,
            "title": "Policy",
            "x-gw-reference-schema": "Policy",
            "x-gw-referenceType": "Policy",
            "x-gw-sinceVersion": "1.2.0"
          },
          "recipient": {
            "description": "The name of the intended recipient of this document",
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Recipient",
            "type": "string"
          },
          "section": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The section to which this document belongs",
            "nullable": true,
            "title": "Section",
            "x-gw-typelist": "DocumentSection"
          },
          "securityType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The security level that has been assigned to this document",
            "nullable": true,
            "title": "Security type",
            "x-gw-typelist": "DocumentSecurityType"
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The current status of this document, such as `draft` or `approved`",
            "title": "Status",
            "x-gw-typelist": "DocumentStatusType"
          },
          "type": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The specific type of document",
            "title": "Type",
            "x-gw-typelist": "DocumentType"
          }
        },
        "title": "Document",
        "type": "object",
        "x-gw-filterable": [
          "name",
          "section",
          "status",
          "type"
        ],
        "x-gw-requiredForCreate": [
          "name",
          "status",
          "type"
        ],
        "x-gw-sinceVersion": "1.1.0",
        "x-gw-sortable": [
          "dateModified",
          "name"
        ]
      },
      "DocumentContent": {
        "description": "The contents of a `Document` (Since 1.1.0)",
        "properties": {
          "contents": {
            "description": "The contents of this document as a Base64-encoded string",
            "format": "byte",
            "readOnly": true,
            "title": "Contents",
            "type": "string"
          },
          "responseMimeType": {
            "description": "The MIME type of this document's contents, such as `application/msword` for a Microsoft Word document",
            "readOnly": true,
            "title": "Response MIME type",
            "type": "string"
          },
          "url": {
            "description": "The URL of this document within the linked document management system",
            "readOnly": true,
            "title": "URL",
            "type": "string"
          }
        },
        "title": "Document content",
        "type": "object",
        "x-gw-sinceVersion": "1.1.0"
      },
      "DocumentContentData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/DocumentContent"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "DocumentData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Document"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "DocumentList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/DocumentData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/DocumentResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DocumentRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DocumentData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "DocumentResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DocumentData"
          },
          "included": {
            "$ref": "#/components/schemas/DocumentResponseInclusions"
          }
        },
        "type": "object"
      },
      "DocumentResponseInclusions": {
        "properties": {
          "DocumentContent": {
            "items": {
              "$ref": "#/components/schemas/DocumentContentData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ExclusiveStateSet": {
        "description": "A set of states that can be used either as an inclusive set or an exclusive set (Since 1.2.0)",
        "properties": {
          "inclusionType": {
            "description": "Whether the set of states is inclusive or exclusive",
            "enum": [
              "exclusive",
              "inclusive"
            ],
            "title": "Inclusion type",
            "type": "string"
          },
          "states": {
            "description": "The states that comprise the set",
            "items": {
              "type": "string",
              "x-gw-type": "typekey.State"
            },
            "minItems": 1,
            "title": "States",
            "type": "array"
          }
        },
        "required": [
          "inclusionType",
          "states"
        ],
        "title": "Exclusive state set",
        "type": "object",
        "x-gw-sinceVersion": "1.2.0"
      },
      "FieldDiff": {
        "description": "A field representing a diff or change between two policy periods (Since 1.3.0)",
        "properties": {
          "changedValue": {
            "description": "The value of the diff field in the policy period that was changed",
            "title": "Changed value",
            "type": "string"
          },
          "entity": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The element that has diff value",
            "title": "Entity"
          },
          "existingValue": {
            "description": "The value of the diff field on this job",
            "title": "Existing value",
            "type": "string"
          },
          "field": {
            "description": "The label of the diff field on this job",
            "title": "field",
            "type": "string"
          }
        },
        "title": "Field diff",
        "type": "object",
        "x-gw-sinceVersion": "1.3.0"
      },
      "GenericRelation": {
        "description": "A reference to a related element",
        "properties": {
          "displayName": {
            "description": "The formatted name of the referenced element",
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the referenced element",
            "title": "ID",
            "type": "string"
          },
          "jsonPath": {
            "description": "The path to the referenced element within the overall JSON document",
            "readOnly": true,
            "title": "JSON path",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "type": {
            "description": "The type of the referenced element",
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The canonical URI for the referenced element",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Generic relation",
        "type": "object",
        "x-gw-resourceReference": true
      },
      "Header": {
        "description": "An HTTP request or response header",
        "properties": {
          "name": {
            "description": "The header name",
            "title": "Name",
            "type": "string"
          },
          "value": {
            "description": "The header value",
            "title": "Value",
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "title": "Header",
        "type": "object"
      },
      "Job": {
        "description": "A `Job` represents a policy transaction that creates or alters an insurance policy. Each specific type of job is represented by a different `jobType` that represents the specific type of transaction, such as a `Submission` to create a new policy or a `Renewal` to renew the policy.",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Account` that the policy belongs to",
            "readOnly": true,
            "title": "Account",
            "x-gw-reference-schema": "Account",
            "x-gw-referenceType": "Account"
          },
          "additionalNamedInsureds": {
            "description": "The list of additional named insureds on the policy (Since 1.4.0)",
            "items": {
              "$ref": "#/components/schemas/AdditionalNamedInsured"
            },
            "title": "Additional named insureds",
            "type": "array",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.4.0"
          },
          "affinityGroup": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The affinity group assigned to this term (Since 1.5.0)",
            "nullable": true,
            "title": "Affinity group",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-reference-schema": "AffinityGroup",
            "x-gw-referenceType": "AffinityGroup",
            "x-gw-sinceVersion": "1.5.0"
          },
          "baseState": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The jurisdiction that the policy is based in",
            "title": "Base state",
            "x-gw-typelist": "Jurisdiction"
          },
          "calculationMethod": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The method used to calculate the refund owed as a result of the cancellation. Only applicable to `Cancellation` jobs.",
            "readOnly": true,
            "title": "Calculation method",
            "x-gw-typelist": "CalculationMethod"
          },
          "cancelProcessDate": {
            "description": "The date and time when the cancellation should be processed by an external system. Only applicable to `Cancellation` jobs. (Since 1.1.0)",
            "format": "date-time",
            "readOnly": true,
            "title": "Cancel process date",
            "type": "string",
            "x-gw-sinceVersion": "1.1.0"
          },
          "cancellationReasonCode": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The reason for the cancellation. Only applicable to `Cancellation` jobs.",
            "readOnly": true,
            "title": "Cancellation reason code",
            "x-gw-filterBy": [
              "cancellationSource"
            ],
            "x-gw-typelist": "ReasonCode"
          },
          "cancellationSource": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The party that initiated the cancellation, typically either the insurer or the insured. Only applicable to `Cancellation` jobs.",
            "readOnly": true,
            "title": "Cancellation source",
            "x-gw-typelist": "CancellationSource"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "changePolicyNumber": {
            "description": "A `true` value for this field indicates that a new policy number will be generated when the policy is rewritten. Only applicable to `Rewrite` jobs.",
            "readOnly": true,
            "title": "Change policy number",
            "type": "boolean"
          },
          "closeDate": {
            "description": "The date and time when this job was closed",
            "format": "date-time",
            "readOnly": true,
            "title": "Close date",
            "type": "string"
          },
          "createdDate": {
            "description": "The date and time that this element was created",
            "format": "date-time",
            "readOnly": true,
            "title": "Created date",
            "type": "string"
          },
          "dateQuoteNeeded": {
            "description": "The date that a quote for this submission is needed by. Only applicable to `Submission` jobs.",
            "format": "date",
            "nullable": true,
            "title": "Date quote needed",
            "type": "string"
          },
          "depositAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The current deposit amount of the policy (Since 1.5.0)",
            "nullable": true,
            "readOnly": true,
            "title": "Deposit amount",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "depositOverridePercentage": {
            "description": "Override of the default reporting deposit percentage of the reporting pattern chosen (Since 1.5.0)",
            "format": "gw-bigdecimal",
            "nullable": true,
            "readOnly": true,
            "title": "Deposit override percentage",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "description": {
            "description": "An extended description of this job. Can be used to describe the reason why this job was created.",
            "maxLength": 1333,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string"
          },
          "editLocked": {
            "description": "A `true` value for this field indicates that this `Job` is locked from being edited by users without special permission to override the lock (Since 1.2.0)",
            "readOnly": true,
            "title": "Edit locked",
            "type": "boolean",
            "x-gw-sinceVersion": "1.2.0"
          },
          "escalateAfterHoldReleased": {
            "description": "Indicates whether a renewal job should be escalated to manual processing if a policy hold no longer affects it. If `true`, creates an activity for the producer to re-examine the renewal. If `false`, the previously-held renewal is dropped back into automated processing. Defaults to `false`. (Since 1.6.0)",
            "title": "Escalate after hold released",
            "type": "boolean",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.6.0"
          },
          "finalAuditOption": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "Indicates whether a final audit will be scheduled and/or started. A value of `Yes` will cause a final audit to be scheduled and started, a value of `Rules` indicates a final audit will be scheduled but business rules will decide when to start it, and a value of `No` will not schedule a final audit. Only applicable to auditable policies. (Since 1.5.0)",
            "readOnly": true,
            "title": "Final audit option",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0",
            "x-gw-typelist": "FinalAuditOption"
          },
          "id": {
            "description": "The unique identifier of this element",
            "title": "ID",
            "type": "string"
          },
          "isOOSJob": {
            "description": "A `true` value for this field indicates that this job is considered to be out-of-sequence, meaning that there are already bound changes that occur at a later effective date within this term (Since 1.2.0)",
            "readOnly": true,
            "title": "Is an out-of-sequence job",
            "type": "boolean",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.2.0"
          },
          "isPreempted": {
            "description": "A `true` value for this field indicates that this job has been preempted. A job is considered preempted when another job for the same policy has been bound after this job was created. (Since 1.2.0)",
            "readOnly": true,
            "title": "Is preempted",
            "type": "boolean",
            "x-gw-sinceVersion": "1.2.0"
          },
          "jobEffectiveDate": {
            "description": "The date and time when this job will become effective. The exact meaning depends upon the `jobType` of this job. For example, for a `Submission` job, this will be the start date for the new policy, while for a `Cancellation` job this will be the date the policy is cancelled.",
            "format": "date-time",
            "readOnly": true,
            "title": "Job effective date",
            "type": "string"
          },
          "jobNumber": {
            "description": "A number assigned automatically to this job",
            "maxLength": 60,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Job number",
            "type": "string"
          },
          "jobStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The current status of this job",
            "readOnly": true,
            "title": "Job status",
            "x-gw-typelist": "PolicyPeriodStatus"
          },
          "jobType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The specific type of this job, such as `Submission` or `PolicyChange`",
            "readOnly": true,
            "title": "Job type",
            "x-gw-typelist": "Job"
          },
          "nonRenewalCode": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The reason why this policy is not being renewed. Only applicable to `Renewal` jobs.",
            "readOnly": true,
            "title": "Non-renewal code",
            "x-gw-typelist": "NonRenewalCode"
          },
          "nonRenewalNotificationDate": {
            "description": "The date and time when a non-renewal notification was sent. Only applicable to `Renewal` jobs. (Since 1.1.0)",
            "format": "date-time",
            "readOnly": true,
            "title": "Non-renewal notification date",
            "type": "string",
            "x-gw-sinceVersion": "1.1.0"
          },
          "organization": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Organization` that this policy's producer of record belongs to",
            "readOnly": true,
            "title": "Organization",
            "x-gw-reference-schema": "Organization",
            "x-gw-referenceType": "Organization"
          },
          "organizationOfService": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Organization` that this policy's producer of service belongs to (Since 1.4.0)",
            "readOnly": true,
            "title": "Organization",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-reference-schema": "Organization",
            "x-gw-referenceType": "Organization",
            "x-gw-sinceVersion": "1.4.0"
          },
          "periodEnd": {
            "description": "The end date and time for this policy term. When updating this value, use a date-only value such as '2021-10-25', as the system will assign the appropriate time component automatically. If a date-time value is sent in as input, the time component on the input value will be ignored.",
            "format": "date-time",
            "title": "Period end",
            "type": "string"
          },
          "periodStart": {
            "description": "The start date and time for this policy term",
            "format": "date-time",
            "readOnly": true,
            "title": "Period start",
            "type": "string"
          },
          "policy": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Policy` that this job creates or modifies",
            "readOnly": true,
            "title": "Policy",
            "x-gw-reference-schema": "Policy",
            "x-gw-referenceType": "Policy"
          },
          "policyNumber": {
            "description": "The number assigned to this policy",
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Policy number",
            "type": "string"
          },
          "preferredCoverageCurrency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The preferred currency used for defining coverages on policies for this policy term. Only editable if the application is configured to support multiple currencies. Changing the coverage currency will reset any rating override values previously set. (Since 1.3.0)",
            "title": "Preferred coverage currency",
            "x-gw-sinceVersion": "1.3.0",
            "x-gw-typelist": "Currency"
          },
          "primaryInsured": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The primary insured party for this policy",
            "readOnly": true,
            "title": "Primary insured",
            "x-gw-reference-schema": "PolicyContact",
            "x-gw-referenceType": "PolicyContact"
          },
          "primaryLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The primary location for this policy (Since 1.2.0)",
            "title": "Primary location",
            "x-gw-reference-schema": "PolicyLocation",
            "x-gw-referenceType": "PolicyLocation",
            "x-gw-sinceVersion": "1.2.0"
          },
          "producerCode": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of record for this policy. The producer of record is the producer who initially created this policy term and receives commissions for it.",
            "readOnly": true,
            "title": "Producer code",
            "x-gw-reference-schema": "ProducerCode",
            "x-gw-referenceType": "ProducerCode"
          },
          "producerCodeOfService": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of service for this policy. The producer of service is the producer managing this policy. (Since 1.4.0)",
            "title": "Producer code of service",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-reference-schema": "ProducerCode",
            "x-gw-referenceType": "ProducerCode",
            "x-gw-sinceVersion": "1.4.0"
          },
          "product": {
            "$ref": "#/components/schemas/ProductModelReference",
            "description": "A reference to the `Product` that defines the insurance product for this policy",
            "readOnly": true,
            "title": "Product"
          },
          "quoteType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of quote that this `Submission` is requesting. Only applicable to `Submission` jobs.",
            "readOnly": true,
            "title": "Quote type",
            "x-gw-typelist": "QuoteType"
          },
          "reinstateCode": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The reason that the policy is being reinstated. Only applicable to `Reinstatement` jobs.",
            "readOnly": true,
            "title": "Reinstate code",
            "x-gw-typelist": "ReinstateCode"
          },
          "rejectReason": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The reason that this submission was declined or not taken. Only applicable to `Submission` jobs.",
            "readOnly": true,
            "title": "Reject reason",
            "x-gw-typelist": "ReasonCode"
          },
          "rejectReasonText": {
            "description": "A more detailed explanation of why this submission was declined or not taken. Only applicable to `Submission` jobs.",
            "maxLength": 65000,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Reject reason text",
            "type": "string"
          },
          "renewalCode": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The reason why this policy is being renewed. Only applicable to `Renewal` jobs.",
            "readOnly": true,
            "title": "Renewal code",
            "x-gw-typelist": "RenewalCode"
          },
          "renewalNotificationDate": {
            "description": "The date and time when a renewal notification was sent. Only applicable to `Renewal` jobs. (Since 1.1.0)",
            "format": "date-time",
            "readOnly": true,
            "title": "Renewal notification date",
            "type": "string",
            "x-gw-sinceVersion": "1.1.0"
          },
          "rescindNotificationDate": {
            "description": "The date and time when a rescind cancellation notification was sent. Only applicable to `Cancellation` jobs. (Since 1.1.0)",
            "format": "date-time",
            "readOnly": true,
            "title": "Rescind notification date",
            "type": "string",
            "x-gw-sinceVersion": "1.1.0"
          },
          "rewriteType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The way in which the policy should be rewritten, such as generating a new policy term versus rewriting the remainder of the existing term. Only applicable to `Cancellation` jobs.",
            "readOnly": true,
            "title": "Rewrite type",
            "x-gw-typelist": "RewriteType"
          },
          "selectedVersion": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The version that is currently selected for this job",
            "readOnly": true,
            "title": "Selected version",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-reference-schema": "JobVersion",
            "x-gw-referenceType": "JobVersion"
          },
          "sourceAccount": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the original `Account` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
            "readOnly": true,
            "title": "Source account",
            "x-gw-reference-schema": "Account",
            "x-gw-referenceType": "Account",
            "x-gw-sinceVersion": "1.1.0"
          },
          "sourcePolicy": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the original `Policy` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
            "readOnly": true,
            "title": "Source policy",
            "x-gw-reference-schema": "Policy",
            "x-gw-referenceType": "Policy",
            "x-gw-sinceVersion": "1.1.0"
          },
          "targetAccount": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Account` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
            "readOnly": true,
            "title": "Target account",
            "x-gw-reference-schema": "Account",
            "x-gw-referenceType": "Account",
            "x-gw-sinceVersion": "1.1.0"
          },
          "targetPolicy": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Policy` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
            "readOnly": true,
            "title": "Target policy",
            "x-gw-reference-schema": "Policy",
            "x-gw-referenceType": "Policy",
            "x-gw-sinceVersion": "1.1.0"
          },
          "taxesAndSurcharges": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The sum of all taxes and surcharges for the policy term",
            "readOnly": true,
            "title": "Taxes and surcharges"
          },
          "termType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of term for the policy, such as annual or half year. Must be one of the allowed term types for the policy's product. Updating this value will automatically change the `periodEnd` value as well.",
            "title": "Term type",
            "x-gw-typelist": "TermType"
          },
          "totalCost": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The sum of all costs for the policy term",
            "readOnly": true,
            "title": "Total cost"
          },
          "totalPremium": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The sum of all premium costs for the policy term",
            "readOnly": true,
            "title": "Total premium"
          },
          "uwCompany": {
            "$ref": "#/components/schemas/UWCompanyReference",
            "description": "A reference to the `UWCompany` that issues this policy (Since 1.3.0)",
            "title": "Underwriting company",
            "x-gw-sinceVersion": "1.3.0"
          }
        },
        "title": "Job",
        "type": "object",
        "x-gw-filterable": [
          "jobNumber",
          "jobType"
        ],
        "x-gw-sortable": [
          "createdDate",
          "jobNumber",
          "jobType"
        ]
      },
      "JobData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Job"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "JobDiffs": {
        "description": "A list of diff fields representing the set of changes in a job (Since 1.3.0)",
        "properties": {
          "diffs": {
            "description": "The list of diff fields",
            "items": {
              "$ref": "#/components/schemas/FieldDiff"
            },
            "title": "Diffs",
            "type": "array"
          },
          "job": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Job` that this diff is associated with",
            "readOnly": true,
            "title": "Job",
            "x-gw-reference-schema": "Job",
            "x-gw-referenceType": "Job"
          },
          "jobEffectiveDate": {
            "description": "The date and time when this job becomes effective",
            "format": "date-time",
            "readOnly": true,
            "title": "Job effective date",
            "type": "string"
          },
          "jobNumber": {
            "description": "The `jobNumber` of the job",
            "maxLength": 60,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Job number",
            "type": "string"
          },
          "jobType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The specific type of this job, such as `Submission` or `PolicyChange`",
            "readOnly": true,
            "title": "Job type",
            "x-gw-typelist": "Job"
          }
        },
        "title": "Job diffs",
        "type": "object",
        "x-gw-sinceVersion": "1.3.0"
      },
      "JobDiffsData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/JobDiffs"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "JobList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/JobData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "JobPreemptionConflicts": {
        "description": "The job created as a result of handling preemptions and conflicting diff changes, if any, for the job (Since 1.3.0)",
        "properties": {
          "conflicts": {
            "$ref": "#/components/schemas/JobDiffs",
            "description": "The list of conflicting diffs that could not be applied",
            "title": "Conflicts"
          },
          "job": {
            "$ref": "#/components/schemas/Job",
            "description": "The new job created as a result of handling preemptions",
            "title": "Job"
          }
        },
        "title": "Job preemption conflicts",
        "type": "object",
        "x-gw-sinceVersion": "1.3.0"
      },
      "JobPreemptionConflictsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JobPreemptionConflictsResponseData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "JobPreemptionConflictsResponseData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/JobPreemptionConflicts"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobPreemptionsResponse": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/JobDiffsData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "JobRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JobData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "JobResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JobData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "JobReviewDiffs": {
        "description": "A comparison between the current job and the job that it was based on (Since 1.4.0)",
        "properties": {
          "basedOnJob": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Job` that the current job is based on",
            "readOnly": true,
            "title": "Based-on job",
            "x-gw-reference-schema": "Job",
            "x-gw-referenceType": "Job"
          },
          "diffTree": {
            "$ref": "#/components/schemas/DiffTreeNode",
            "description": "The root of the tree of differences between the current job and the job it is based on",
            "title": "Diff tree"
          }
        },
        "title": "Job review diffs",
        "type": "object",
        "x-gw-sinceVersion": "1.4.0"
      },
      "JobRole": {
        "description": "An assignment of a role on a `Job` to a user",
        "properties": {
          "group": {
            "description": "The `id` of the `Group` that has been assigned the role",
            "title": "Group",
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The role that this `JobRole` represents, such as the creator of the job or the assigned underwriter",
            "title": "Role",
            "x-gw-typelist": "UserRole"
          },
          "user": {
            "description": "The `id` of the `User` that has been assigned the role",
            "title": "User",
            "type": "string"
          }
        },
        "title": "Job role",
        "type": "object"
      },
      "JobRoleData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/JobRole"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "JobRoles": {
        "description": "A list of `JobRole` elements",
        "properties": {
          "roles": {
            "description": "A list of `JobRole` elements",
            "items": {
              "$ref": "#/components/schemas/JobRole"
            },
            "title": "Roles",
            "type": "array"
          }
        },
        "title": "Job roles",
        "type": "object"
      },
      "JobRolesData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/JobRoles"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "JobRolesRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JobRolesData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "JobRolesResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JobRolesData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "JobSearchRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JobSearchRequestData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "JobSearchRequestAttributes": {
        "description": "Details of the job to search for",
        "properties": {
          "city": {
            "description": "The `city` of the `primaryAddress` on the `primaryInsured`",
            "title": "City",
            "type": "string"
          },
          "companyName": {
            "description": "The `companyName` of the `primaryInsured`",
            "title": "Company name",
            "type": "string"
          },
          "country": {
            "description": "The `country` of the `primaryAddress` on the `primaryInsured` (Since 1.4.0)",
            "title": "Country",
            "type": "string",
            "x-gw-sinceVersion": "1.4.0",
            "x-gw-type": "typekey.Country"
          },
          "firstName": {
            "description": "The `firstName` of the `primaryInsured`",
            "title": "First name",
            "type": "string"
          },
          "jobNumber": {
            "description": "The `jobNumber` of the job",
            "title": "Job number",
            "type": "string"
          },
          "jobType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The `jobType` of the job",
            "title": "Job type",
            "x-gw-typelist": "Job"
          },
          "jurisdiction": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The `baseState` of the policy",
            "title": "Jurisdiction",
            "x-gw-typelist": "Jurisdiction"
          },
          "lastName": {
            "description": "The `lastName` of the `primaryInsured`",
            "title": "Last name",
            "type": "string"
          },
          "officialId": {
            "description": "The `value` of an `OfficialID` on the `primaryInsured`",
            "title": "Official ID",
            "type": "string"
          },
          "phone": {
            "description": "The `workPhone` of the `primaryInsured`",
            "title": "Phone",
            "type": "string"
          },
          "policyNumber": {
            "description": "The `policyNumber` for the policy",
            "title": "Policy number",
            "type": "string"
          },
          "postalCode": {
            "description": "The `postalCode` of the `primaryAddress` on the `primaryInsured`",
            "title": "Postal code",
            "type": "string"
          },
          "producerCode": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `ProducerCode` that is either the producer of service or producer of record for the policy",
            "title": "Producer code"
          },
          "product": {
            "$ref": "#/components/schemas/ProductModelReference",
            "description": "The `ProductPattern` for the policy",
            "title": "Product"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The `state` of the `primaryAddress` on the `primaryInsured`",
            "title": "State",
            "x-gw-typelist": "State"
          },
          "street": {
            "description": "Part of the street address of the `primaryAddress` on the `primaryInsured`",
            "title": "Street",
            "type": "string"
          }
        },
        "required": [
          "jobType"
        ],
        "title": "Job search request attributes",
        "type": "object"
      },
      "JobSearchRequestData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/JobSearchRequestAttributes"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "JobSearchResult": {
        "description": "An element returned from a search for `Job` elements",
        "properties": {
          "accountNumber": {
            "description": "The `accountNumber` on the account for this policy",
            "readOnly": true,
            "title": "Account number",
            "type": "string"
          },
          "editEffectiveDate": {
            "description": "The date and time when the job becomes effective",
            "format": "date-time",
            "readOnly": true,
            "title": "Edit effective date",
            "type": "string"
          },
          "effectiveDate": {
            "description": "The date on which this particular period became effective",
            "format": "date-time",
            "readOnly": true,
            "title": "Effective date",
            "type": "string"
          },
          "expirationDate": {
            "description": "The date on which this particular period ceased being in effect",
            "format": "date-time",
            "readOnly": true,
            "title": "Expiration date",
            "type": "string"
          },
          "insuredName": {
            "description": "The name of the primary named insured for this policy",
            "readOnly": true,
            "title": "Insured name",
            "type": "string"
          },
          "jobId": {
            "description": "The `id` of the `Job`",
            "readOnly": true,
            "title": "Job ID",
            "type": "string"
          },
          "jobNumber": {
            "description": "The automatically assigned number for the job",
            "readOnly": true,
            "title": "Job number",
            "type": "string"
          },
          "jobStatus": {
            "description": "The current status of the job",
            "readOnly": true,
            "title": "Status",
            "type": "string"
          },
          "jobType": {
            "description": "The type of job, such as `Submission` or `Cancellation`",
            "readOnly": true,
            "title": "Job type",
            "type": "string"
          },
          "policyAddress": {
            "description": "The formatted address of the primary location for this policy",
            "readOnly": true,
            "title": "Policy address",
            "type": "string"
          },
          "policyNumber": {
            "description": "The assigned number for this policy",
            "readOnly": true,
            "title": "Policy number",
            "type": "string"
          },
          "producerOfRecordName": {
            "description": "The name of the `ProducerCode` assigned as the producer of record for this policy",
            "readOnly": true,
            "title": "Producer of record name",
            "type": "string"
          },
          "producerOfServiceName": {
            "description": "The name of the `ProducerCode` assigned as the producer of service for this policy",
            "readOnly": true,
            "title": "Producer of service name",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProductModelReference",
            "description": "A reference to the `Product` that defines the insurance product for this policy",
            "readOnly": true,
            "title": "Product"
          }
        },
        "title": "Job search result",
        "type": "object"
      },
      "JobSearchResultData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/JobSearchResult"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "JobSearchResultList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/JobSearchResultData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "JobVersion": {
        "description": "A `JobVersion` represents a version of a job. Some job types support having multiple versions, one of which can be selected. Different versions of the same job can have different contents.",
        "properties": {
          "id": {
            "description": "The unique identifier of this element",
            "title": "ID",
            "type": "string"
          },
          "name": {
            "description": "A human-readable name for this version",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Name",
            "type": "string"
          },
          "number": {
            "description": "The automatically assigned number of this version",
            "readOnly": true,
            "title": "Number",
            "type": "integer"
          },
          "selected": {
            "description": "A `true` value for this field indicates that this is the version that is currently selected for the job",
            "readOnly": true,
            "title": "Selected",
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The current status of this version",
            "readOnly": true,
            "title": "Status",
            "x-gw-typelist": "PolicyPeriodStatus"
          }
        },
        "title": "Job version",
        "type": "object",
        "x-gw-filterable": [
          "name",
          "number",
          "status"
        ],
        "x-gw-sortable": [
          "name",
          "number",
          "status"
        ]
      },
      "JobVersionData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/JobVersion"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "JobVersionList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/JobVersionData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "JobVersionRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JobVersionData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "JobVersionResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JobVersionData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "LinkObject": {
        "description": "A standard HTTP link",
        "properties": {
          "href": {
            "description": "The URL of the link",
            "title": "HREF",
            "type": "string"
          },
          "methods": {
            "description": "An array of HTTP method names that can be used with the link URL",
            "items": {
              "type": "string"
            },
            "title": "Methods",
            "type": "array"
          }
        },
        "title": "Linked object",
        "type": "object"
      },
      "Links": {
        "additionalProperties": {
          "$ref": "#/components/schemas/LinkObject",
          "description": "A set of named links. Each key represents the name of the link, such as a child of the current element, an action that can be taken on it, or a navigation option.",
          "title": "Links"
        },
        "description": "A set of named links",
        "title": "Links",
        "type": "object"
      },
      "LossHistory": {
        "description": "`LossHistory` has the `lossHistoryType` and any fields specific to that type. Attached documents or prior loss details must be included separately. (Since 1.5.0)",
        "properties": {
          "lossHistoryType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "How the loss history is described for this policy. Defaults to `nol`.",
            "title": "Loss history type",
            "x-gw-typelist": "LossHistoryType"
          },
          "numPriorLosses": {
            "description": "The number of prior losses. Only applicable if `lossHistoryType` is `att`.",
            "exclusiveMinimum": false,
            "minimum": 0,
            "title": "Number of prior losses",
            "type": "integer"
          },
          "priorTotalIncurred": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The prior total incurred. Only applicable if `lossHistoryType` is `att`.",
            "title": "Prior total incurred"
          }
        },
        "title": "Loss history",
        "type": "object",
        "x-gw-filterable": [
          "lossHistoryType"
        ],
        "x-gw-sinceVersion": "1.5.0",
        "x-gw-sortable": [
          "lossHistoryType"
        ]
      },
      "LossHistoryData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/LossHistory"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "LossHistoryRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LossHistoryData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "LossHistoryResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LossHistoryData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "MonetaryAmount": {
        "description": "A monetary amount that combines a decimal amount with a currency",
        "properties": {
          "amount": {
            "description": "The decimal amount",
            "format": "gw-bigdecimal",
            "title": "Amount",
            "type": "string"
          },
          "currency": {
            "description": "The currency for the amount",
            "title": "Currency",
            "type": "string",
            "x-gw-type": "typekey.Currency"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "title": "Monetary amount",
        "type": "object"
      },
      "NonRenewalExplanation": {
        "description": "An explanation for a non-renewal directon on a policy (Since 1.3.0)",
        "properties": {
          "body": {
            "description": "The explanation for the non-renewal",
            "maxLength": 65000,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Body",
            "type": "string"
          },
          "code": {
            "description": "The code of the non-renewal explanation pattern",
            "maxLength": 60,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Code",
            "type": "string"
          }
        },
        "required": [
          "body",
          "code"
        ],
        "title": "Non-renewal explanation",
        "type": "object",
        "x-gw-sinceVersion": "1.3.0"
      },
      "NotTakeAttributes": {
        "description": "Details of the decision to not take the submission",
        "properties": {
          "rejectReason": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The reason for not taking the submission",
            "title": "Reject reason",
            "x-gw-typelist": "ReasonCode"
          },
          "rejectReasonText": {
            "description": "A more detailed explanation for why the submission is not being taken",
            "nullable": true,
            "title": "Reject reason text",
            "type": "string"
          }
        },
        "required": [
          "rejectReason"
        ],
        "title": "Not take attributes",
        "type": "object"
      },
      "NotTakeData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/NotTakeAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "NotTakeRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NotTakeData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "Note": {
        "description": "A `Note` is used to capture any sort of additional text that needs to be associated with another business object. A `Note` consists of a `body` that contains the actual text of the note, along with other fields the represent additional metadata about the note.",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Account` that this note is associated with (Since 1.3.0)",
            "readOnly": true,
            "title": "Account",
            "x-gw-reference-schema": "Account",
            "x-gw-referenceType": "Account",
            "x-gw-sinceVersion": "1.3.0"
          },
          "author": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `User` who authored this note",
            "readOnly": true,
            "title": "Author",
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "body": {
            "description": "The text of this note",
            "maxLength": 65000,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Body",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "bodySummary": {
            "description": "A shorter summary of this note's `body` field, more suitable for displaying in a list of notes",
            "readOnly": true,
            "title": "Body summary",
            "type": "string",
            "x-gw-defaultViews": [
              "summary"
            ]
          },
          "confidential": {
            "description": "A `true` value for this field indicates that the note contains confidential information",
            "title": "Confidential",
            "type": "boolean"
          },
          "contingency": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Contingency` that this note is associated with (Since 1.3.0)",
            "readOnly": true,
            "title": "Contingency",
            "x-gw-reference-schema": "Contingency",
            "x-gw-referenceType": "Contingency",
            "x-gw-sinceVersion": "1.3.0"
          },
          "createdDate": {
            "description": "The date and time that this `Note` was created",
            "format": "date-time",
            "readOnly": true,
            "title": "Created date",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of this `Note`",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "job": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Job` that this note is associated with (Since 1.3.0)",
            "readOnly": true,
            "title": "Job",
            "x-gw-reference-schema": "Job",
            "x-gw-referenceType": "Job",
            "x-gw-sinceVersion": "1.3.0"
          },
          "policy": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Policy` that this note is associated with (Since 1.3.0)",
            "readOnly": true,
            "title": "Policy",
            "x-gw-reference-schema": "Policy",
            "x-gw-referenceType": "Policy",
            "x-gw-sinceVersion": "1.3.0"
          },
          "securityType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The security level that has been assigned to this note",
            "nullable": true,
            "title": "Security type",
            "x-gw-typelist": "NoteSecurityType"
          },
          "subject": {
            "description": "The subject of this note",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Subject",
            "type": "string"
          },
          "topic": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The topic of this note",
            "title": "Topic",
            "x-gw-typelist": "NoteTopicType"
          },
          "updateTime": {
            "description": "The date and time when this `Note` was most recently updated",
            "format": "date-time",
            "readOnly": true,
            "title": "Update time",
            "type": "string"
          }
        },
        "title": "Note",
        "type": "object",
        "x-gw-filterable": [
          "body",
          "subject",
          "topic"
        ],
        "x-gw-requiredForCreate": [
          "body"
        ],
        "x-gw-sortable": [
          "subject",
          "topic",
          "updateTime"
        ]
      },
      "NoteData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Note"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "NoteList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/NoteData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NoteRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NoteData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "NoteResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NoteData"
          }
        },
        "type": "object"
      },
      "OOSConflict": {
        "description": "An out-of-sequence conflict represents a value that has been changed by the current job in a way that conflicts with a change made in the same policy term at a later effective date (Since 1.2.0)",
        "properties": {
          "conflictValues": {
            "description": "The actual values and effective date that are conflicting",
            "items": {
              "$ref": "#/components/schemas/OOSConflictValue"
            },
            "title": "Conflict values",
            "type": "array"
          },
          "entity": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The element that has conflicting values",
            "title": "Entity"
          },
          "field": {
            "description": "The field that has conflicting values",
            "title": "Field",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "originalValue": {
            "description": "The original value of the conflicting field in the policy period that this job was based on",
            "title": "Original value",
            "type": "string"
          },
          "yourValue": {
            "description": "The current value of the conflicting field in this job",
            "title": "Your value",
            "type": "string"
          }
        },
        "title": "Out-of-sequence conflict",
        "type": "object",
        "x-gw-sinceVersion": "1.2.0"
      },
      "OOSConflictOverride": {
        "description": "The requested resolution of an out-of-sequence conflict (Since 1.2.0)",
        "properties": {
          "id": {
            "description": "The `id` of the `OOSConflict` that this resolution applies to",
            "title": "ID",
            "type": "string"
          },
          "resolution": {
            "description": "How the conflict should be resolved. `acceptYours` will take the current value from this job and use it to override the conflicting values at future effective dates. `discardYours` will retain the conflicting values at future effective dates.",
            "enum": [
              "acceptYours",
              "discardYours"
            ],
            "title": "Resolution",
            "type": "string"
          }
        },
        "required": [
          "id",
          "resolution"
        ],
        "title": "Out-of-sequence conflict override",
        "type": "object",
        "x-gw-sinceVersion": "1.2.0"
      },
      "OOSConflictValue": {
        "description": "The value and effective date of a single out-of-sequence conflict (Since 1.2.0)",
        "properties": {
          "displayValue": {
            "description": "The human-readable, formatted value on the conflicting date",
            "title": "Display value",
            "type": "string"
          },
          "effectiveDate": {
            "description": "The effective date of the conflicting value",
            "format": "date-time",
            "title": "Effective date",
            "type": "string"
          }
        },
        "title": "Out-of-sequence conflict value",
        "type": "object",
        "x-gw-sinceVersion": "1.2.0"
      },
      "OOSConflicts": {
        "description": "A list of out-of-sequence conflicts (Since 1.2.0)",
        "properties": {
          "conflicts": {
            "description": "The list of out-of-sequence conflicts",
            "items": {
              "$ref": "#/components/schemas/OOSConflict"
            },
            "title": "Conflicts",
            "type": "array"
          }
        },
        "title": "Out-of-sequence conflicts",
        "type": "object",
        "x-gw-sinceVersion": "1.2.0"
      },
      "OOSConflictsData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/OOSConflicts"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "OOSConflictsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OOSConflictsData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "OfficialID": {
        "description": "An `OfficialID` represents a pairing of a particular jurisdiction with some form of official identifier applicable to that jurisdiction, such as a driver's license number or state tax ID number",
        "properties": {
          "officialIDType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of identifier, such as `BureauID`",
            "readOnly": true,
            "title": "Official ID type",
            "x-gw-typelist": "OfficialIDType"
          },
          "officialIDValue": {
            "description": "The actual identifier value",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Official ID value",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The jurisdiction that this identifier applies to",
            "readOnly": true,
            "title": "State",
            "x-gw-typelist": "Jurisdiction"
          }
        },
        "title": "Official ID",
        "type": "object"
      },
      "OfficialIDMap": {
        "additionalProperties": {
          "$ref": "#/components/schemas/OfficialID",
          "description": "The identifier values. The property keys will be of the form `<code>-<state>` or `<code>-ALL` for values that do not have an assigned `state`.",
          "title": "IDs"
        },
        "description": "A map of `OfficialID` values for various jurisdictions and types of identifier. The keys in the map will be of the form `<code>-<state>` or `<code>-ALL` for values that do not have an assigned `state`.",
        "title": "Official ID map",
        "type": "object"
      },
      "OverrideCostAttributes": {
        "description": "Override values for a single cost. Only one of the `overrideAdjustedRate`, `overrideAmountBilling`, `overrideBaseRate`, or `overrideTermAmountBilling` fields should be sent. (Since 1.3.0)",
        "properties": {
          "costId": {
            "description": "The `id` of the `Cost` being overridden",
            "title": "Cost ID",
            "type": "string"
          },
          "overrideAdjustedRate": {
            "description": "An override of the `adjustedRate` on the cost, which will then be used to calculate the `termAmount` and `amount`",
            "format": "gw-bigdecimal",
            "nullable": true,
            "title": "Override adjusted rate",
            "type": "string"
          },
          "overrideAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "An override of the `amount` on the cost (Deprecated as of 1.4.0 - Convert to the settlement currency and use the `overrideAmountBilling` field instead to override the `amount` on the cost)",
            "nullable": true,
            "title": "Override amount"
          },
          "overrideAmountBilling": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "An override of the `amount` on the cost, converted to the settlement currency",
            "nullable": true,
            "title": "Override amount billing"
          },
          "overrideBaseRate": {
            "description": "An override of the `baseRate` on the cost, which will then be used to calculate the `adjustedRate`, `termAmount` and `amount`",
            "format": "gw-bigdecimal",
            "nullable": true,
            "title": "Override base rate",
            "type": "string"
          },
          "overrideReason": {
            "description": "The reason for the override",
            "title": "Override reason",
            "type": "string"
          },
          "overrideTermAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "An override of the `termAmount` on the cost (Deprecated as of 1.4.0 - Convert to the settlement currency and use the `overrideTermAmountBilling` field instead to override the `termAmount` on the cost)",
            "nullable": true,
            "title": "Override term amount"
          },
          "overrideTermAmountBilling": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "An override of the `termAmount` on the cost, converted to the settlement currency",
            "nullable": true,
            "title": "Override term amount billing"
          }
        },
        "required": [
          "costId"
        ],
        "title": "Override cost attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.3.0"
      },
      "OverrideCostsAttributes": {
        "properties": {
          "overrides": {
            "items": {
              "$ref": "#/components/schemas/OverrideCostAttributes"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-gw-sinceVersion": "1.3.0"
      },
      "OverrideCostsData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/OverrideCostsAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "OverrideCostsRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OverrideCostsData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "OverrideCostsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OverrideCostsResponseData"
          }
        },
        "type": "object"
      },
      "OverrideCostsResponseAttributes": {
        "description": "The values returned as the response to a request to override rating on a job (Since 1.3.0)",
        "properties": {
          "costs": {
            "description": "The new list of costs for the job. These costs will reflect the overridden values if `successfulRerate` is `true`.",
            "items": {
              "$ref": "#/components/schemas/Cost"
            },
            "title": "Costs",
            "type": "array"
          },
          "jobStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The new status of the job following the attempt to rerate it",
            "title": "Job status",
            "x-gw-typelist": "PolicyPeriodStatus"
          },
          "rerateError": {
            "description": "If rerating was unsuccessful, this field will contain the error that happened during rerating",
            "title": "Rerate error",
            "type": "object"
          },
          "successfulRerate": {
            "description": "A `true` value indicates that rerating was successful and that the `costs`, `taxesAndSurcharges`, and `totalPremium` fields reflect the applied overrides. If this field is not `true` the `rerateError` field will indicate what failed.",
            "title": "Successful rerate",
            "type": "boolean"
          },
          "taxesAndSurcharges": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The sum of all taxes and surcharges on the job. If `successfulRerate` is `true`, this value will represent the result of applying the cost overrides.",
            "title": "Taxes and surcharges"
          },
          "totalCost": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The sum of all costs for the job. If `successfulRerate` is `true`, this value will represent the result of applying the cost overrides.",
            "title": "Total cost"
          },
          "totalPremium": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The sum of all premium costs for the job. If `successfulRerate` is `true`, this value will represent the result of applying the cost overrides.",
            "title": "Total premium"
          }
        },
        "title": "Override costs response attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.3.0"
      },
      "OverrideCostsResponseData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/OverrideCostsResponseAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentInfo": {
        "description": "Information about how payment will be made for this policy",
        "properties": {
          "alternateBillingAccount": {
            "description": "The number of the alternate billing account",
            "nullable": true,
            "title": "Alternate billing account",
            "type": "string"
          },
          "billingContact": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The contact to use for billing purposes",
            "nullable": true,
            "title": "Billing contact",
            "x-gw-reference-schema": "PolicyContact",
            "x-gw-referenceType": "PolicyContact"
          },
          "billingMethod": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The billing method, such as agency billing or direct billing",
            "nullable": true,
            "title": "Billing method",
            "x-gw-typelist": "BillingMethod"
          },
          "depositOverridePercentage": {
            "description": "Override of the default reporting deposit percentage of the reporting pattern chosen (Since 1.5.0)",
            "format": "gw-bigdecimal",
            "nullable": true,
            "title": "Deposit override percentage",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "finalAuditOption": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "Indicates whether a final audit will be scheduled and/or started. A value of `Yes` will cause a final audit to be scheduled and started, a value of `Rules` indicates a final audit will be scheduled but business rules will decide when to start it, and a value of `No` will not schedule a final audit. Only applicable to auditable policies. (Since 1.5.0)",
            "title": "Final audit option",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0",
            "x-gw-typelist": "FinalAuditOption"
          },
          "selectedPaymentPlan": {
            "$ref": "#/components/schemas/PaymentPlan",
            "description": "Details of the selected payment plan",
            "nullable": true,
            "title": "Selected payment plan"
          }
        },
        "title": "Payment info",
        "type": "object"
      },
      "PaymentInfoData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PaymentInfo"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PaymentInfoRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaymentInfoData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PaymentInfoResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaymentInfoData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "PaymentPlan": {
        "description": "A plan for how the policy will be paid for",
        "properties": {
          "billingId": {
            "description": "The ID of this payment plan within the billing system",
            "title": "Billing ID",
            "type": "string"
          },
          "downPaymentAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The amount of the down payment",
            "readOnly": true,
            "title": "Down payment amount"
          },
          "fee": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The installment fee added to each installment payment. Only applicable to installment payment plans.",
            "readOnly": true,
            "title": "Fee"
          },
          "id": {
            "description": "The unique identifier of this element",
            "title": "ID",
            "type": "string"
          },
          "installmentAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The amount of each installment payment. Only applicable to installment payment plans.",
            "readOnly": true,
            "title": "Installment amount"
          },
          "invoicingFrequency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The frequency of invoicing, such as monthly or quarterly. Only applicable to installment payment plans.",
            "readOnly": true,
            "title": "Invoicing frequency",
            "x-gw-typelist": "BillingPeriodicity"
          },
          "notes": {
            "description": "Additional notes regarding this payment plan",
            "readOnly": true,
            "title": "Notes",
            "type": "string"
          },
          "planName": {
            "description": "The name of this payment plan",
            "readOnly": true,
            "title": "Plan name",
            "type": "string"
          },
          "reportingPatternCode": {
            "description": "The code of the pattern used to create and schedule premium reports. Only applicable to reporting payment plans.",
            "title": "Reporting pattern code",
            "type": "string"
          },
          "total": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The total of all installment payments, taxes, and fees. Only applicable to installment payment plans.",
            "readOnly": true,
            "title": "Total"
          }
        },
        "title": "Payment plan",
        "type": "object"
      },
      "PaymentPlanData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PaymentPlan"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PaymentPlanList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PaymentPlanData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaymentPlanResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaymentPlanData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "PendingCancelAttributes": {
        "description": "Details of the pending cancellation (Since 1.1.0)",
        "properties": {
          "processDate": {
            "description": "The date on which the cancellation should take place",
            "format": "date",
            "title": "Process date",
            "type": "string"
          }
        },
        "required": [
          "processDate"
        ],
        "title": "Pending cancel attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.1.0"
      },
      "PendingCancelData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PendingCancelAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PendingCancelRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PendingCancelData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PendingNonRenewAttributes": {
        "description": "Details of the pending non-renewal (Since 1.1.0)",
        "properties": {
          "nonRenewalCode": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The reason why this policy is not being renewed",
            "title": "Non-renewal code",
            "x-gw-typelist": "NonRenewalCode"
          }
        },
        "required": [
          "nonRenewalCode"
        ],
        "title": "Pending non-renew attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.1.0"
      },
      "PendingNonRenewData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PendingNonRenewAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PendingNonRenewRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PendingNonRenewData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PendingRenewAttributes": {
        "description": "Details of the pending renewal (Since 1.1.0)",
        "properties": {
          "renewalCode": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The reason why this policy is being renewed",
            "title": "Renewal code",
            "x-gw-typelist": "RenewalCode"
          }
        },
        "required": [
          "renewalCode"
        ],
        "title": "Pending renew attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.1.0"
      },
      "PendingRenewData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PendingRenewAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PendingRenewRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PendingRenewData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PhoneNumber": {
        "description": "A phone number, with different components of the number broken out as separate fields",
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The country code for the phone number",
            "title": "Country code",
            "x-gw-typelist": "PhoneCountryCode"
          },
          "displayName": {
            "description": "The phone number formatted in a standardized way",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "extension": {
            "description": "The extension for the phone number",
            "nullable": true,
            "title": "Extension",
            "type": "string"
          },
          "number": {
            "description": "The actual phone number, including area code, but excluding the country code and extension",
            "title": "Number",
            "type": "string"
          }
        },
        "required": [
          "countryCode",
          "number"
        ],
        "title": "Phone number",
        "type": "object"
      },
      "Policy": {
        "description": "An insurance policy",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Account` that the policy belongs to",
            "readOnly": true,
            "title": "Account",
            "x-gw-reference-schema": "Account",
            "x-gw-referenceType": "Account"
          },
          "additionalNamedInsureds": {
            "description": "The list of additional named insureds on the policy (Since 1.4.0)",
            "items": {
              "$ref": "#/components/schemas/AdditionalNamedInsured"
            },
            "title": "Additional named insureds",
            "type": "array",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.4.0"
          },
          "affinityGroup": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The affinity group assigned to this term (Since 1.5.0)",
            "nullable": true,
            "title": "Affinity group",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-reference-schema": "AffinityGroup",
            "x-gw-referenceType": "AffinityGroup",
            "x-gw-sinceVersion": "1.5.0"
          },
          "baseState": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The jurisdiction that the policy is based in",
            "title": "Base state",
            "x-gw-typelist": "Jurisdiction"
          },
          "cancellationDate": {
            "description": "The date and time at which this policy was cancelled (Since 1.2.0)",
            "format": "date-time",
            "readOnly": true,
            "title": "Cancellation date",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "claimSystemTotalIncurred": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "Total incurred amount retrieved from the claim system for loss ratio calculation (Since 1.5.0)",
            "nullable": true,
            "readOnly": true,
            "title": "Claim system total incurred",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "createdDate": {
            "description": "The date and time that this element was created",
            "format": "date-time",
            "readOnly": true,
            "title": "Created date",
            "type": "string"
          },
          "depositReleased": {
            "default": false,
            "description": "True if the deposit amount has been released (Since 1.5.0)",
            "readOnly": true,
            "title": "Deposit released",
            "type": "boolean",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "finalAuditOption": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "Indicates whether a final audit will be scheduled and/or started. A value of `Yes` will cause a final audit to be scheduled and started, a value of `Rules` indicates a final audit will be scheduled but business rules will decide when to start it, and a value of `No` will not schedule a final audit. Only applicable to auditable policies. (Since 1.5.0)",
            "readOnly": true,
            "title": "Final audit option",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0",
            "x-gw-typelist": "FinalAuditOption"
          },
          "id": {
            "description": "The unique identifier of this element",
            "title": "ID",
            "type": "string"
          },
          "lossRatioCalculationDate": {
            "description": "Date of the most recent loss ratio calculation (Since 1.5.0)",
            "format": "date",
            "nullable": true,
            "readOnly": true,
            "title": "Loss ratio calculation date",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "lossRatioEarnedPremium": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "Earned premium used for loss ratio calculation (Since 1.5.0)",
            "nullable": true,
            "readOnly": true,
            "title": "Loss ratio earned premium",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "mostRecentBoundDate": {
            "description": "The effective date and time of the most recent bound job for the most recent term on this policy (Since 1.2.0)",
            "format": "date-time",
            "readOnly": true,
            "title": "Most recent bound date",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.2.0"
          },
          "mostRecentTerm": {
            "default": false,
            "description": "Flags the future-most term for a policy (Since 1.5.0)",
            "readOnly": true,
            "title": "Most recent term",
            "type": "boolean",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "nextRenewalCheckDate": {
            "description": "The date to next evaluate this PolicyTerm for renewal, null indicates to check at the next opportunity (Since 1.5.0)",
            "format": "date",
            "nullable": true,
            "readOnly": true,
            "title": "Next renewal check date",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "nonRenewalAdditionalExplanation": {
            "description": "An explanation for advising a non-renewal (Since 1.3.0)",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Non-renewal reason additional explanation",
            "type": "string",
            "x-gw-sinceVersion": "1.3.0"
          },
          "nonRenewalExplanations": {
            "description": "Reasons for advising a non-renewal (Since 1.3.0)",
            "items": {
              "$ref": "#/components/schemas/NonRenewalExplanation"
            },
            "title": "Non-renewal reason explanations",
            "type": "array",
            "x-gw-sinceVersion": "1.3.0"
          },
          "nonRenewalReason": {
            "description": "The reason this policy has been marked for non-renewal (Since 1.3.0)",
            "readOnly": true,
            "title": "Non-renewal reason",
            "type": "string",
            "x-gw-sinceVersion": "1.3.0",
            "x-gw-type": "typekey.NonRenewalCode"
          },
          "organization": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Organization` that this policy's producer of record belongs to",
            "readOnly": true,
            "title": "Organization",
            "x-gw-reference-schema": "Organization",
            "x-gw-referenceType": "Organization"
          },
          "organizationOfService": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Organization` that this policy's producer of service belongs to (Since 1.4.0)",
            "readOnly": true,
            "title": "Organization",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-reference-schema": "Organization",
            "x-gw-referenceType": "Organization",
            "x-gw-sinceVersion": "1.4.0"
          },
          "periodEnd": {
            "description": "The end date and time for this policy term. When updating this value, use a date-only value such as '2021-10-25', as the system will assign the appropriate time component automatically. If a date-time value is sent in as input, the time component on the input value will be ignored.",
            "format": "date-time",
            "title": "Period end",
            "type": "string"
          },
          "periodStart": {
            "description": "The start date and time for this policy term",
            "format": "date-time",
            "readOnly": true,
            "title": "Period start",
            "type": "string"
          },
          "policyNumber": {
            "description": "The number assigned to this policy",
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Policy number",
            "type": "string"
          },
          "preRenewalDirection": {
            "description": "The recommended action to take on this policy when it comes up for renewal (Since 1.3.0)",
            "readOnly": true,
            "title": "Pre-renewal direction",
            "type": "string",
            "x-gw-sinceVersion": "1.3.0",
            "x-gw-type": "typekey.PreRenewalDirection"
          },
          "preRenewalOwner": {
            "$ref": "#/components/schemas/Assignee",
            "description": "The user and group that are assigned as the pre-renewal owner for this policy (Since 1.3.0)",
            "readOnly": true,
            "title": "Pre-renewal owner",
            "x-gw-sinceVersion": "1.3.0"
          },
          "preferredCoverageCurrency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The preferred currency used for defining coverages on policies for this policy term. Only editable if the application is configured to support multiple currencies. Changing the coverage currency will reset any rating override values previously set. (Since 1.3.0)",
            "title": "Preferred coverage currency",
            "x-gw-sinceVersion": "1.3.0",
            "x-gw-typelist": "Currency"
          },
          "primaryInsured": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The primary insured party for this policy",
            "readOnly": true,
            "title": "Primary insured",
            "x-gw-reference-schema": "PolicyContact",
            "x-gw-referenceType": "PolicyContact"
          },
          "primaryLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The primary location for this policy (Since 1.2.0)",
            "title": "Primary location",
            "x-gw-reference-schema": "PolicyLocation",
            "x-gw-referenceType": "PolicyLocation",
            "x-gw-sinceVersion": "1.2.0"
          },
          "producerCode": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of record for this policy. The producer of record is the producer who initially created this policy term and receives commissions for it.",
            "readOnly": true,
            "title": "Producer code",
            "x-gw-reference-schema": "ProducerCode",
            "x-gw-referenceType": "ProducerCode"
          },
          "producerCodeOfService": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of service for this policy. The producer of service is the producer managing this policy. (Since 1.4.0)",
            "title": "Producer code of service",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-reference-schema": "ProducerCode",
            "x-gw-referenceType": "ProducerCode",
            "x-gw-sinceVersion": "1.4.0"
          },
          "product": {
            "$ref": "#/components/schemas/ProductModelReference",
            "description": "A reference to the `Product` that defines the insurance product for this policy",
            "readOnly": true,
            "title": "Product"
          },
          "sourceAccount": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the original `Account` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
            "readOnly": true,
            "title": "Source account",
            "x-gw-reference-schema": "Account",
            "x-gw-referenceType": "Account",
            "x-gw-sinceVersion": "1.1.0"
          },
          "sourcePolicy": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the original `Policy` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
            "readOnly": true,
            "title": "Source policy",
            "x-gw-reference-schema": "Policy",
            "x-gw-referenceType": "Policy",
            "x-gw-sinceVersion": "1.1.0"
          },
          "targetAccount": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Account` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
            "readOnly": true,
            "title": "Target account",
            "x-gw-reference-schema": "Account",
            "x-gw-referenceType": "Account",
            "x-gw-sinceVersion": "1.1.0"
          },
          "targetPolicy": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `Policy` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
            "readOnly": true,
            "title": "Target policy",
            "x-gw-reference-schema": "Policy",
            "x-gw-referenceType": "Policy",
            "x-gw-sinceVersion": "1.1.0"
          },
          "taxesAndSurcharges": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The sum of all taxes and surcharges for the policy term",
            "readOnly": true,
            "title": "Taxes and surcharges"
          },
          "termType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of term for the policy, such as annual or half year. Must be one of the allowed term types for the policy's product. Updating this value will automatically change the `periodEnd` value as well.",
            "title": "Term type",
            "x-gw-typelist": "TermType"
          },
          "totalCost": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The sum of all costs for the policy term",
            "readOnly": true,
            "title": "Total cost"
          },
          "totalPremium": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The sum of all premium costs for the policy term",
            "readOnly": true,
            "title": "Total premium"
          },
          "uwCompany": {
            "$ref": "#/components/schemas/UWCompanyReference",
            "description": "A reference to the `UWCompany` that issues this policy (Since 1.3.0)",
            "title": "Underwriting company",
            "x-gw-sinceVersion": "1.3.0"
          }
        },
        "title": "Policy",
        "type": "object",
        "x-gw-sortable": [
          "createdDate"
        ]
      },
      "PolicyContact": {
        "description": "A `PolicyContact` represents a person or company that is referenced on an insurance policy. Each `PolicyContact` is linked to an `AccountContact` on the policy's account.",
        "discriminator": {
          "mapping": {
            "Adjudicator": "#/components/schemas/PolicyContact_Person",
            "Company": "#/components/schemas/PolicyContact_Company",
            "CompanyVendor": "#/components/schemas/PolicyContact_Company",
            "InsuranceCompany": "#/components/schemas/PolicyContact_Company",
            "LegalVenue": "#/components/schemas/PolicyContact_Place",
            "Person": "#/components/schemas/PolicyContact_Person",
            "PersonVendor": "#/components/schemas/PolicyContact_Person",
            "Place": "#/components/schemas/PolicyContact_Place",
            "UserContact": "#/components/schemas/PolicyContact_Person"
          },
          "propertyName": "contactSubtype"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PolicyContact_Company"
          },
          {
            "$ref": "#/components/schemas/PolicyContact_Person"
          },
          {
            "$ref": "#/components/schemas/PolicyContact_Place"
          }
        ],
        "title": "Policy contact"
      },
      "PolicyContactData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PolicyContact"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PolicyContactList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PolicyContactData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PolicyContactRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PolicyContactData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PolicyContactResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PolicyContactData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "PolicyContact_Company": {
        "description": "A `PolicyContact` represents a person or company that is referenced on an insurance policy. Each `PolicyContact` is linked to an `AccountContact` on the policy's account.",
        "properties": {
          "accountContact": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `AccountContact` linked to this `PolicyContact`. Edits to many fields on the `PolicyContact` write through to the linked `AccountContact`. For a bound policy, field values relevant to the policy contract are captured when the policy is bound, and will reflect those values rather than current `AccountContact` values.",
            "title": "Account contact",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountContact",
            "x-gw-referenceType": "AccountContact"
          },
          "addressBookUID": {
            "description": "The unique ID of this contact within the contact management system. This field is only set if the contact has been linked to a contact management system.",
            "nullable": true,
            "title": "Address book UID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "companyName": {
            "description": "The name of the company represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a company.",
            "title": "Company name",
            "type": "string"
          },
          "companyNameKanji": {
            "description": "The kanji version of the name of the company represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a company. (Since 1.2.0)",
            "nullable": true,
            "title": "Company name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "contactSubtype": {
            "description": "The specific type of contact represented by this `PolicyContact`, such as `Person` or `Company`",
            "enum": [
              "Company",
              "CompanyVendor",
              "InsuranceCompany"
            ],
            "title": "Contact subtype",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-type": "typekey.Contact"
          },
          "displayName": {
            "description": "A formatted representation of the full name for this `PolicyContact', including all applicable fields such as `firstName` or `lastName`",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "emailAddress1": {
            "description": "The contact's primary e-mail address",
            "nullable": true,
            "title": "E-mail address 1",
            "type": "string"
          },
          "emailAddress2": {
            "description": "The contact's secondary e-mail address",
            "nullable": true,
            "title": "E-mail address 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "externalId": {
            "description": "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
            "readOnly": true,
            "title": "External ID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "firstNameKanji": {
            "description": "The kanji version of the first name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
            "nullable": true,
            "title": "First name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The relevant industry code, if this contact represents a named insured on the policy. Only applicable for a named insured that represents a company. (Since 1.1.0)",
            "nullable": true,
            "title": "Named insured industry code",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.1.0"
          },
          "lastNameKanji": {
            "description": "The kanji version of the last name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
            "nullable": true,
            "title": "Last name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "officialIds": {
            "$ref": "#/components/schemas/OfficialIDMap",
            "description": "The contact's official identifiers in various jurisdictions",
            "title": "Official IDs"
          },
          "particle": {
            "description": "The particle portion of the name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
            "nullable": true,
            "title": "Particle",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "The contact's primary address",
            "title": "Primary address",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary language",
            "nullable": true,
            "title": "Primary language",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LanguageType"
          },
          "primaryLocale": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary locale",
            "nullable": true,
            "title": "Primary locale",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LocaleType"
          },
          "primaryPhone": {
            "description": "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
            "readOnly": true,
            "title": "Primary phone",
            "type": "string"
          },
          "taxId": {
            "description": "The contact's tax ID",
            "nullable": true,
            "title": "Tax ID",
            "type": "string"
          },
          "workPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "The contact's work phone number, if this `PolicyContact` represents a person, or the business's phone number, if this `PolicyContact` represents a company",
            "nullable": true,
            "title": "Work phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Policy contact",
        "type": "object",
        "x-gw-filterable": [
          "contactSubtype"
        ]
      },
      "PolicyContact_Person": {
        "description": "A `PolicyContact` represents a person or company that is referenced on an insurance policy. Each `PolicyContact` is linked to an `AccountContact` on the policy's account.",
        "properties": {
          "accountContact": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `AccountContact` linked to this `PolicyContact`. Edits to many fields on the `PolicyContact` write through to the linked `AccountContact`. For a bound policy, field values relevant to the policy contract are captured when the policy is bound, and will reflect those values rather than current `AccountContact` values.",
            "title": "Account contact",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountContact",
            "x-gw-referenceType": "AccountContact"
          },
          "addressBookUID": {
            "description": "The unique ID of this contact within the contact management system. This field is only set if the contact has been linked to a contact management system.",
            "nullable": true,
            "title": "Address book UID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "applicableGoodDriverDiscount": {
            "description": "A `true` value indicates that the person qualifies for a good driver discount and that discount applies to this policy. Only applicable for a `PolicyContact` that represents a person.",
            "nullable": true,
            "title": "Applicable good driver discount",
            "type": "boolean"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "cellPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "The person's mobile phone number. Only applicable for a `PolicyContact` that represents a person.",
            "nullable": true,
            "title": "Cell phone"
          },
          "companyNameKanji": {
            "description": "The kanji version of the name of the company represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a company. (Since 1.2.0)",
            "nullable": true,
            "title": "Company name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "contactSubtype": {
            "description": "The specific type of contact represented by this `PolicyContact`, such as `Person` or `Company`",
            "enum": [
              "Adjudicator",
              "Person",
              "PersonVendor",
              "UserContact"
            ],
            "title": "Contact subtype",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-type": "typekey.Contact"
          },
          "dateCompletedTrainingClass": {
            "description": "The date that the person completed a driver training class. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
            "format": "date",
            "nullable": true,
            "title": "Driver training class completion date",
            "type": "string",
            "x-gw-before": "now",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.1.0"
          },
          "dateOfBirth": {
            "description": "The person's date of birth. Only applicable for a `PolicyContact` that represents a person.",
            "format": "date",
            "nullable": true,
            "title": "Date of birth",
            "type": "string",
            "x-gw-before": "now"
          },
          "displayName": {
            "description": "A formatted representation of the full name for this `PolicyContact', including all applicable fields such as `firstName` or `lastName`",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "doNotOrderMVR": {
            "description": "If set to `true`, indicates that motor vehicle records should not be ordered for this driver. Only applicable for a `PolicyContact` that represents a person. (Since 1.4.0)",
            "nullable": true,
            "title": "Do not order motor vehicle record",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "emailAddress1": {
            "description": "The contact's primary e-mail address",
            "nullable": true,
            "title": "E-mail address 1",
            "type": "string"
          },
          "emailAddress2": {
            "description": "The contact's secondary e-mail address",
            "nullable": true,
            "title": "E-mail address 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "excludedDriver": {
            "description": "If set to `true`, indicates that this driver is explicitly not covered by this policy. Only applicable for a `PolicyContact` that represents a person. (Since 1.4.0)",
            "nullable": true,
            "title": "Excluded driver",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "externalId": {
            "description": "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
            "readOnly": true,
            "title": "External ID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "firstName": {
            "description": "The persons's first name. Only applicable for a `PolicyContact` that represents a person.",
            "title": "First name",
            "type": "string"
          },
          "firstNameKanji": {
            "description": "The kanji version of the first name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
            "nullable": true,
            "title": "First name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "goodDriverDiscount": {
            "description": "A `true` value indicates that the person qualifies for a good driver discount. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
            "nullable": true,
            "title": "Good driver discount",
            "type": "boolean",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.1.0"
          },
          "homePhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "The person's home phone number. Only applicable for a `PolicyContact` that represents a person.",
            "nullable": true,
            "title": "Home phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The relevant industry code, if this contact represents a named insured on the policy. Only applicable for a named insured that represents a company. (Since 1.1.0)",
            "nullable": true,
            "title": "Named insured industry code",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.1.0"
          },
          "lastName": {
            "description": "The person's last name. Only applicable for a `PolicyContact` that represents a person.",
            "title": "Last name",
            "type": "string"
          },
          "lastNameKanji": {
            "description": "The kanji version of the last name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
            "nullable": true,
            "title": "Last name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "licenseNumber": {
            "description": "The person's driver's license number. Only applicable for a `PolicyContact` that represents a person.",
            "nullable": true,
            "title": "Driver's license number",
            "type": "string"
          },
          "licenseState": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The person's driver's license state. Only applicable for a `PolicyContact` that represents a person.",
            "nullable": true,
            "title": "Driver's license state",
            "x-gw-typelist": "Jurisdiction"
          },
          "maritalStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The person's marital status. Only applicable for a `PolicyContact` that represents a person.",
            "nullable": true,
            "title": "Marital status",
            "x-gw-typelist": "MaritalStatus"
          },
          "numberOfAccidents": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The person's number of vehicular accidents, as stored on the linked `AccountContact`. Only applicable for a `PolicyContact` that represents a person.",
            "nullable": true,
            "title": "Number of accidents",
            "x-gw-typelist": "NumberOfAccidents"
          },
          "numberOfViolations": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The person's number of driving violations, as stored on the linked `AccountContact`. Only applicable for a `PolicyContact` that represents a person.",
            "nullable": true,
            "title": "Number of violations",
            "x-gw-typelist": "NumberOfAccidents"
          },
          "officialIds": {
            "$ref": "#/components/schemas/OfficialIDMap",
            "description": "The contact's official identifiers in various jurisdictions",
            "title": "Official IDs"
          },
          "particle": {
            "description": "The particle portion of the name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
            "nullable": true,
            "title": "Particle",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "policyNumberOfAccidents": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The person's number of vehicular accidents. Only applies to this policy and not stored on the linked `AccountContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
            "nullable": true,
            "title": "Policy number of accidents",
            "x-gw-sinceVersion": "1.1.0",
            "x-gw-typelist": "NumberOfAccidents"
          },
          "policyNumberOfViolations": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The person's number of driving violations. Only applies to this policy and not stored on the linked `AccountContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
            "nullable": true,
            "title": "Policy number of violations",
            "x-gw-sinceVersion": "1.1.0",
            "x-gw-typelist": "NumberOfAccidents"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "The contact's primary address",
            "title": "Primary address",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary language",
            "nullable": true,
            "title": "Primary language",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LanguageType"
          },
          "primaryLocale": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary locale",
            "nullable": true,
            "title": "Primary locale",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LocaleType"
          },
          "primaryPhone": {
            "description": "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
            "readOnly": true,
            "title": "Primary phone",
            "type": "string"
          },
          "primaryPhoneType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for a `PolicyContact` that represents a person.",
            "nullable": true,
            "title": "Primary phone type",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "PrimaryPhoneType"
          },
          "relationshipTitle": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The relationship this person has to the insured company, if this person is an owner or officer for the company. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
            "nullable": true,
            "title": "Owner/officer relationship title",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.1.0",
            "x-gw-typelist": "Relationship"
          },
          "student": {
            "description": "A `true` value indicates that the person qualifies as a student. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
            "nullable": true,
            "title": "Student",
            "type": "boolean",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.1.0"
          },
          "taxId": {
            "description": "The contact's tax ID",
            "nullable": true,
            "title": "Tax ID",
            "type": "string"
          },
          "trainingClassType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of driver training class completed. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
            "nullable": true,
            "title": "Driver training class type",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.1.0",
            "x-gw-typelist": "TrainingClassType"
          },
          "workPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "The contact's work phone number, if this `PolicyContact` represents a person, or the business's phone number, if this `PolicyContact` represents a company",
            "nullable": true,
            "title": "Work phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "yearLicensed": {
            "description": "The year that the person first acquired a driver's license. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
            "nullable": true,
            "title": "Year licensed",
            "type": "integer",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.1.0"
          }
        },
        "title": "Policy contact",
        "type": "object",
        "x-gw-filterable": [
          "contactSubtype"
        ]
      },
      "PolicyContact_Place": {
        "description": "A `PolicyContact` represents a person or company that is referenced on an insurance policy. Each `PolicyContact` is linked to an `AccountContact` on the policy's account.",
        "properties": {
          "accountContact": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `AccountContact` linked to this `PolicyContact`. Edits to many fields on the `PolicyContact` write through to the linked `AccountContact`. For a bound policy, field values relevant to the policy contract are captured when the policy is bound, and will reflect those values rather than current `AccountContact` values.",
            "title": "Account contact",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountContact",
            "x-gw-referenceType": "AccountContact"
          },
          "addressBookUID": {
            "description": "The unique ID of this contact within the contact management system. This field is only set if the contact has been linked to a contact management system.",
            "nullable": true,
            "title": "Address book UID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "companyNameKanji": {
            "description": "The kanji version of the name of the company represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a company. (Since 1.2.0)",
            "nullable": true,
            "title": "Company name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "contactSubtype": {
            "description": "The specific type of contact represented by this `PolicyContact`, such as `Person` or `Company`",
            "enum": [
              "LegalVenue",
              "Place"
            ],
            "title": "Contact subtype",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-type": "typekey.Contact"
          },
          "displayName": {
            "description": "A formatted representation of the full name for this `PolicyContact', including all applicable fields such as `firstName` or `lastName`",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "emailAddress1": {
            "description": "The contact's primary e-mail address",
            "nullable": true,
            "title": "E-mail address 1",
            "type": "string"
          },
          "emailAddress2": {
            "description": "The contact's secondary e-mail address",
            "nullable": true,
            "title": "E-mail address 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "externalId": {
            "description": "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
            "readOnly": true,
            "title": "External ID",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "firstNameKanji": {
            "description": "The kanji version of the first name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
            "nullable": true,
            "title": "First name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The relevant industry code, if this contact represents a named insured on the policy. Only applicable for a named insured that represents a company. (Since 1.1.0)",
            "nullable": true,
            "title": "Named insured industry code",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.1.0"
          },
          "lastNameKanji": {
            "description": "The kanji version of the last name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
            "nullable": true,
            "title": "Last name kanji",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "officialIds": {
            "$ref": "#/components/schemas/OfficialIDMap",
            "description": "The contact's official identifiers in various jurisdictions",
            "title": "Official IDs"
          },
          "particle": {
            "description": "The particle portion of the name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
            "nullable": true,
            "title": "Particle",
            "type": "string",
            "x-gw-sinceVersion": "1.2.0"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "The contact's primary address",
            "title": "Primary address",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary language",
            "nullable": true,
            "title": "Primary language",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LanguageType"
          },
          "primaryLocale": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The contact's primary locale",
            "nullable": true,
            "title": "Primary locale",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-typelist": "LocaleType"
          },
          "primaryPhone": {
            "description": "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
            "readOnly": true,
            "title": "Primary phone",
            "type": "string"
          },
          "taxId": {
            "description": "The contact's tax ID",
            "nullable": true,
            "title": "Tax ID",
            "type": "string"
          },
          "workPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "description": "The contact's work phone number, if this `PolicyContact` represents a person, or the business's phone number, if this `PolicyContact` represents a company",
            "nullable": true,
            "title": "Work phone",
            "x-gw-defaultViews": [
              "detail"
            ]
          }
        },
        "title": "Policy contact",
        "type": "object",
        "x-gw-filterable": [
          "contactSubtype"
        ]
      },
      "PolicyData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Policy"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PolicyLine": {
        "description": "A `PolicyLine` represents the information about a single line of business on an insurance policy",
        "properties": {
          "displayName": {
            "description": "The human-readable name for this `PolicyLine`",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this element",
            "title": "ID",
            "type": "string"
          },
          "numAddInsured": {
            "description": "The number of additional insureds for this line. Used for quick quotes where the number can be specified, but actual details of the additional insureds are not entered.",
            "title": "Number of additional insureds",
            "type": "integer"
          },
          "pattern": {
            "$ref": "#/components/schemas/ProductModelReference",
            "description": "The `PolicyLinePattern` that defines this `PolicyLine`",
            "title": "Pattern",
            "x-gw-createOnly": true
          },
          "patternCode": {
            "description": "The `id` for the `PolicyLinePattern` that defines this `PolicyLine`",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Pattern code",
            "type": "string"
          }
        },
        "title": "Policy line",
        "type": "object",
        "x-gw-requiredForCreate": [
          "pattern"
        ]
      },
      "PolicyLineData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PolicyLine"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PolicyLineList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PolicyLineData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PolicyLineRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PolicyLineData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PolicyLineResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PolicyLineData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "PolicyLocation": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "discriminator": {
          "mapping": {
            "AD": "#/components/schemas/PolicyLocation_Group0",
            "AE": "#/components/schemas/PolicyLocation_AE",
            "AF": "#/components/schemas/PolicyLocation_Group0",
            "AG": "#/components/schemas/PolicyLocation_AG",
            "AI": "#/components/schemas/PolicyLocation_Group0",
            "AL": "#/components/schemas/PolicyLocation_Group0",
            "AM": "#/components/schemas/PolicyLocation_Group3",
            "AO": "#/components/schemas/PolicyLocation_Group2",
            "AQ": "#/components/schemas/PolicyLocation_Group2",
            "AR": "#/components/schemas/PolicyLocation_Group3",
            "AS": "#/components/schemas/PolicyLocation_Group1",
            "AT": "#/components/schemas/PolicyLocation_Group4",
            "AU": "#/components/schemas/PolicyLocation_Group1",
            "AW": "#/components/schemas/PolicyLocation_Group2",
            "AZ": "#/components/schemas/PolicyLocation_Group0",
            "BA": "#/components/schemas/PolicyLocation_Group0",
            "BB": "#/components/schemas/PolicyLocation_BB",
            "BD": "#/components/schemas/PolicyLocation_Group0",
            "BE": "#/components/schemas/PolicyLocation_Group4",
            "BF": "#/components/schemas/PolicyLocation_Group6",
            "BG": "#/components/schemas/PolicyLocation_Group0",
            "BH": "#/components/schemas/PolicyLocation_Group0",
            "BI": "#/components/schemas/PolicyLocation_Group2",
            "BJ": "#/components/schemas/PolicyLocation_Group2",
            "BL": "#/components/schemas/PolicyLocation_Group8",
            "BM": "#/components/schemas/PolicyLocation_Group0",
            "BN": "#/components/schemas/PolicyLocation_Group0",
            "BO": "#/components/schemas/PolicyLocation_Group2",
            "BR": "#/components/schemas/PolicyLocation_BR",
            "BS": "#/components/schemas/PolicyLocation_Group5",
            "BT": "#/components/schemas/PolicyLocation_Group0",
            "BV": "#/components/schemas/PolicyLocation_Group2",
            "BW": "#/components/schemas/PolicyLocation_Group2",
            "BY": "#/components/schemas/PolicyLocation_Group3",
            "BZ": "#/components/schemas/PolicyLocation_Group2",
            "CA": "#/components/schemas/PolicyLocation_CA",
            "CC": "#/components/schemas/PolicyLocation_Group3",
            "CD": "#/components/schemas/PolicyLocation_Group2",
            "CF": "#/components/schemas/PolicyLocation_Group2",
            "CG": "#/components/schemas/PolicyLocation_Group2",
            "CH": "#/components/schemas/PolicyLocation_Group4",
            "CI": "#/components/schemas/PolicyLocation_Group6",
            "CK": "#/components/schemas/PolicyLocation_Group2",
            "CL": "#/components/schemas/PolicyLocation_Group3",
            "CM": "#/components/schemas/PolicyLocation_Group2",
            "CN": "#/components/schemas/PolicyLocation_CN",
            "CO": "#/components/schemas/PolicyLocation_CO",
            "CR": "#/components/schemas/PolicyLocation_Group7",
            "CV": "#/components/schemas/PolicyLocation_CV",
            "CX": "#/components/schemas/PolicyLocation_Group3",
            "CY": "#/components/schemas/PolicyLocation_Group0",
            "CZ": "#/components/schemas/PolicyLocation_Group0",
            "DE": "#/components/schemas/PolicyLocation_Group4",
            "DJ": "#/components/schemas/PolicyLocation_Group2",
            "DK": "#/components/schemas/PolicyLocation_Group4",
            "DM": "#/components/schemas/PolicyLocation_Group2",
            "DO": "#/components/schemas/PolicyLocation_Group0",
            "DZ": "#/components/schemas/PolicyLocation_Group0",
            "EC": "#/components/schemas/PolicyLocation_Group0",
            "EE": "#/components/schemas/PolicyLocation_Group0",
            "EG": "#/components/schemas/PolicyLocation_Group3",
            "EH": "#/components/schemas/PolicyLocation_Group0",
            "ER": "#/components/schemas/PolicyLocation_Group2",
            "ES": "#/components/schemas/PolicyLocation_Group10",
            "ET": "#/components/schemas/PolicyLocation_Group0",
            "FI": "#/components/schemas/PolicyLocation_Group4",
            "FJ": "#/components/schemas/PolicyLocation_Group2",
            "FK": "#/components/schemas/PolicyLocation_Group4",
            "FM": "#/components/schemas/PolicyLocation_Group1",
            "FO": "#/components/schemas/PolicyLocation_Group0",
            "FR": "#/components/schemas/PolicyLocation_FR",
            "GA": "#/components/schemas/PolicyLocation_Group2",
            "GB": "#/components/schemas/PolicyLocation_Group4",
            "GD": "#/components/schemas/PolicyLocation_Group2",
            "GE": "#/components/schemas/PolicyLocation_Group0",
            "GF": "#/components/schemas/PolicyLocation_Group8",
            "GH": "#/components/schemas/PolicyLocation_Group2",
            "GI": "#/components/schemas/PolicyLocation_GI",
            "GL": "#/components/schemas/PolicyLocation_Group4",
            "GM": "#/components/schemas/PolicyLocation_Group2",
            "GN": "#/components/schemas/PolicyLocation_Group0",
            "GP": "#/components/schemas/PolicyLocation_Group8",
            "GQ": "#/components/schemas/PolicyLocation_Group2",
            "GR": "#/components/schemas/PolicyLocation_Group4",
            "GS": "#/components/schemas/PolicyLocation_Group4",
            "GT": "#/components/schemas/PolicyLocation_Group0",
            "GU": "#/components/schemas/PolicyLocation_Group1",
            "GW": "#/components/schemas/PolicyLocation_Group0",
            "GY": "#/components/schemas/PolicyLocation_Group2",
            "HK": "#/components/schemas/PolicyLocation_HK",
            "HM": "#/components/schemas/PolicyLocation_Group3",
            "HN": "#/components/schemas/PolicyLocation_Group7",
            "HR": "#/components/schemas/PolicyLocation_Group0",
            "HT": "#/components/schemas/PolicyLocation_Group0",
            "HU": "#/components/schemas/PolicyLocation_Group4",
            "ID": "#/components/schemas/PolicyLocation_ID",
            "IE": "#/components/schemas/PolicyLocation_IE",
            "IL": "#/components/schemas/PolicyLocation_Group0",
            "IN": "#/components/schemas/PolicyLocation_Group1",
            "IO": "#/components/schemas/PolicyLocation_Group4",
            "IQ": "#/components/schemas/PolicyLocation_Group7",
            "IR": "#/components/schemas/PolicyLocation_Group9",
            "IS": "#/components/schemas/PolicyLocation_Group0",
            "IT": "#/components/schemas/PolicyLocation_Group10",
            "JM": "#/components/schemas/PolicyLocation_JM",
            "JO": "#/components/schemas/PolicyLocation_Group0",
            "JP": "#/components/schemas/PolicyLocation_JP",
            "KE": "#/components/schemas/PolicyLocation_Group0",
            "KG": "#/components/schemas/PolicyLocation_Group0",
            "KH": "#/components/schemas/PolicyLocation_Group0",
            "KI": "#/components/schemas/PolicyLocation_Group5",
            "KM": "#/components/schemas/PolicyLocation_Group2",
            "KN": "#/components/schemas/PolicyLocation_KN",
            "KR": "#/components/schemas/PolicyLocation_KR",
            "KW": "#/components/schemas/PolicyLocation_Group0",
            "KY": "#/components/schemas/PolicyLocation_KY",
            "KZ": "#/components/schemas/PolicyLocation_Group3",
            "LA": "#/components/schemas/PolicyLocation_Group0",
            "LB": "#/components/schemas/PolicyLocation_Group0",
            "LC": "#/components/schemas/PolicyLocation_Group2",
            "LI": "#/components/schemas/PolicyLocation_Group4",
            "LK": "#/components/schemas/PolicyLocation_Group0",
            "LR": "#/components/schemas/PolicyLocation_Group0",
            "LS": "#/components/schemas/PolicyLocation_Group0",
            "LT": "#/components/schemas/PolicyLocation_Group0",
            "LU": "#/components/schemas/PolicyLocation_Group4",
            "LV": "#/components/schemas/PolicyLocation_Group0",
            "LY": "#/components/schemas/PolicyLocation_Group2",
            "MA": "#/components/schemas/PolicyLocation_Group0",
            "MC": "#/components/schemas/PolicyLocation_MC",
            "MD": "#/components/schemas/PolicyLocation_Group0",
            "ME": "#/components/schemas/PolicyLocation_Group0",
            "MF": "#/components/schemas/PolicyLocation_Group8",
            "MG": "#/components/schemas/PolicyLocation_Group0",
            "MH": "#/components/schemas/PolicyLocation_Group1",
            "MK": "#/components/schemas/PolicyLocation_Group0",
            "ML": "#/components/schemas/PolicyLocation_Group2",
            "MM": "#/components/schemas/PolicyLocation_Group0",
            "MN": "#/components/schemas/PolicyLocation_Group3",
            "MO": "#/components/schemas/PolicyLocation_MO",
            "MP": "#/components/schemas/PolicyLocation_Group1",
            "MQ": "#/components/schemas/PolicyLocation_Group8",
            "MR": "#/components/schemas/PolicyLocation_Group2",
            "MS": "#/components/schemas/PolicyLocation_Group2",
            "MT": "#/components/schemas/PolicyLocation_Group0",
            "MU": "#/components/schemas/PolicyLocation_Group0",
            "MV": "#/components/schemas/PolicyLocation_Group0",
            "MW": "#/components/schemas/PolicyLocation_Group6",
            "MX": "#/components/schemas/PolicyLocation_Group11",
            "MY": "#/components/schemas/PolicyLocation_Group11",
            "MZ": "#/components/schemas/PolicyLocation_Group0",
            "NA": "#/components/schemas/PolicyLocation_Group2",
            "NC": "#/components/schemas/PolicyLocation_Group8",
            "NE": "#/components/schemas/PolicyLocation_Group0",
            "NF": "#/components/schemas/PolicyLocation_Group3",
            "NG": "#/components/schemas/PolicyLocation_NG",
            "NI": "#/components/schemas/PolicyLocation_NI",
            "NL": "#/components/schemas/PolicyLocation_Group4",
            "NO": "#/components/schemas/PolicyLocation_Group4",
            "NP": "#/components/schemas/PolicyLocation_Group0",
            "NR": "#/components/schemas/PolicyLocation_NR",
            "NU": "#/components/schemas/PolicyLocation_Group2",
            "NZ": "#/components/schemas/PolicyLocation_Group12",
            "OM": "#/components/schemas/PolicyLocation_Group0",
            "PA": "#/components/schemas/PolicyLocation_Group13",
            "PE": "#/components/schemas/PolicyLocation_Group3",
            "PF": "#/components/schemas/PolicyLocation_PF",
            "PG": "#/components/schemas/PolicyLocation_Group7",
            "PH": "#/components/schemas/PolicyLocation_Group9",
            "PK": "#/components/schemas/PolicyLocation_Group0",
            "PL": "#/components/schemas/PolicyLocation_Group4",
            "PM": "#/components/schemas/PolicyLocation_Group8",
            "PN": "#/components/schemas/PolicyLocation_Group4",
            "PR": "#/components/schemas/PolicyLocation_Group4",
            "PS": "#/components/schemas/PolicyLocation_Group2",
            "PT": "#/components/schemas/PolicyLocation_Group4",
            "PW": "#/components/schemas/PolicyLocation_Group1",
            "PY": "#/components/schemas/PolicyLocation_Group0",
            "QA": "#/components/schemas/PolicyLocation_Group2",
            "RE": "#/components/schemas/PolicyLocation_Group8",
            "RO": "#/components/schemas/PolicyLocation_Group0",
            "RS": "#/components/schemas/PolicyLocation_Group0",
            "RU": "#/components/schemas/PolicyLocation_Group14",
            "RW": "#/components/schemas/PolicyLocation_Group2",
            "SA": "#/components/schemas/PolicyLocation_Group0",
            "SB": "#/components/schemas/PolicyLocation_Group2",
            "SC": "#/components/schemas/PolicyLocation_Group5",
            "SE": "#/components/schemas/PolicyLocation_Group4",
            "SG": "#/components/schemas/PolicyLocation_SG",
            "SH": "#/components/schemas/PolicyLocation_Group4",
            "SI": "#/components/schemas/PolicyLocation_Group0",
            "SJ": "#/components/schemas/PolicyLocation_Group4",
            "SK": "#/components/schemas/PolicyLocation_Group0",
            "SL": "#/components/schemas/PolicyLocation_Group2",
            "SM": "#/components/schemas/PolicyLocation_SM",
            "SN": "#/components/schemas/PolicyLocation_Group0",
            "SO": "#/components/schemas/PolicyLocation_Group7",
            "SR": "#/components/schemas/PolicyLocation_Group13",
            "ST": "#/components/schemas/PolicyLocation_Group2",
            "SV": "#/components/schemas/PolicyLocation_Group7",
            "SZ": "#/components/schemas/PolicyLocation_Group0",
            "TC": "#/components/schemas/PolicyLocation_Group4",
            "TD": "#/components/schemas/PolicyLocation_Group2",
            "TF": "#/components/schemas/PolicyLocation_Group2",
            "TG": "#/components/schemas/PolicyLocation_Group2",
            "TH": "#/components/schemas/PolicyLocation_Group9",
            "TJ": "#/components/schemas/PolicyLocation_Group0",
            "TK": "#/components/schemas/PolicyLocation_Group2",
            "TL": "#/components/schemas/PolicyLocation_Group2",
            "TM": "#/components/schemas/PolicyLocation_Group0",
            "TN": "#/components/schemas/PolicyLocation_Group0",
            "TO": "#/components/schemas/PolicyLocation_Group2",
            "TR": "#/components/schemas/PolicyLocation_TR",
            "TT": "#/components/schemas/PolicyLocation_Group2",
            "TV": "#/components/schemas/PolicyLocation_Group5",
            "TW": "#/components/schemas/PolicyLocation_TW",
            "TZ": "#/components/schemas/PolicyLocation_Group0",
            "UA": "#/components/schemas/PolicyLocation_Group14",
            "UG": "#/components/schemas/PolicyLocation_Group2",
            "UM": "#/components/schemas/PolicyLocation_Group15",
            "US": "#/components/schemas/PolicyLocation_US",
            "UY": "#/components/schemas/PolicyLocation_Group3",
            "UZ": "#/components/schemas/PolicyLocation_Group3",
            "VA": "#/components/schemas/PolicyLocation_Group0",
            "VC": "#/components/schemas/PolicyLocation_Group0",
            "VE": "#/components/schemas/PolicyLocation_Group15",
            "VG": "#/components/schemas/PolicyLocation_VG",
            "VI": "#/components/schemas/PolicyLocation_Group1",
            "VN": "#/components/schemas/PolicyLocation_Group3",
            "VU": "#/components/schemas/PolicyLocation_Group2",
            "WF": "#/components/schemas/PolicyLocation_Group8",
            "WS": "#/components/schemas/PolicyLocation_Group2",
            "YE": "#/components/schemas/PolicyLocation_Group2",
            "YT": "#/components/schemas/PolicyLocation_Group8",
            "ZA": "#/components/schemas/PolicyLocation_Group12",
            "ZM": "#/components/schemas/PolicyLocation_Group0",
            "ZW": "#/components/schemas/PolicyLocation_Group2"
          },
          "propertyName": "country"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PolicyLocation_AE"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_AG"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_BB"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_BR"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_CA"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_CN"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_CO"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_CV"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_FR"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_GI"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group0"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group1"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group10"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group11"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group12"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group13"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group14"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group15"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group2"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group3"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group4"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group5"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group6"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group7"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group8"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_Group9"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_HK"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_ID"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_IE"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_JM"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_JP"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_KN"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_KR"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_KY"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_MC"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_MO"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_NG"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_NI"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_NR"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_PF"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_SG"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_SM"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_TR"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_TW"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_US"
          },
          {
            "$ref": "#/components/schemas/PolicyLocation_VG"
          }
        ],
        "title": "Policy location"
      },
      "PolicyLocationData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PolicyLocation"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PolicyLocationList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PolicyLocationData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PolicyLocationRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PolicyLocationData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PolicyLocationResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PolicyLocationData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "PolicyLocation_AE": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AE"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "emirate": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The emirate of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Emirate",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "emirate"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_AG": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_BB": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "BB"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "parish": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The parish of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Parish",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_BR": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "BR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_CA": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "CA"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "County",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_CN": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "CN"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_CO": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "CO"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "department": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The department of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Department",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "department"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_CV": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "CV"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_FR": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "CEDEX": {
            "description": "The CEDEX bureau of the location's address. Only applicable in certain countries.",
            "maxLength": 2,
            "nullable": true,
            "title": "CEDEX",
            "type": "string"
          },
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "FR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_GI": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "GI"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group0": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AD",
              "AF",
              "AI",
              "AL",
              "AZ",
              "BA",
              "BD",
              "BG",
              "BH",
              "BM",
              "BN",
              "BT",
              "CY",
              "CZ",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EH",
              "ET",
              "FO",
              "GE",
              "GN",
              "GT",
              "GW",
              "HR",
              "HT",
              "IL",
              "IS",
              "JO",
              "KE",
              "KG",
              "KH",
              "KW",
              "LA",
              "LB",
              "LK",
              "LR",
              "LS",
              "LT",
              "LV",
              "MA",
              "MD",
              "ME",
              "MG",
              "MK",
              "MM",
              "MT",
              "MU",
              "MV",
              "MZ",
              "NE",
              "NP",
              "OM",
              "PK",
              "PY",
              "RO",
              "RS",
              "SA",
              "SI",
              "SK",
              "SN",
              "SZ",
              "TJ",
              "TM",
              "TN",
              "TZ",
              "VA",
              "VC",
              "ZM"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group1": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AS",
              "AU",
              "FM",
              "GU",
              "IN",
              "MH",
              "MP",
              "PW",
              "VI"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group10": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "ES",
              "IT"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group11": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "MX",
              "MY"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group12": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "NZ",
              "ZA"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group13": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "PA",
              "SR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group14": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "RU",
              "UA"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "oblast": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The oblast of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Oblast",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "oblast",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group15": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "UM",
              "VE"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "state"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group2": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AO",
              "AQ",
              "AW",
              "BI",
              "BJ",
              "BO",
              "BV",
              "BW",
              "BZ",
              "CD",
              "CF",
              "CG",
              "CK",
              "CM",
              "DJ",
              "DM",
              "ER",
              "FJ",
              "GA",
              "GD",
              "GH",
              "GM",
              "GQ",
              "GY",
              "KM",
              "LC",
              "LY",
              "ML",
              "MR",
              "MS",
              "NA",
              "NU",
              "PS",
              "QA",
              "RW",
              "SB",
              "SL",
              "ST",
              "TD",
              "TF",
              "TG",
              "TK",
              "TL",
              "TO",
              "TT",
              "UG",
              "VU",
              "WS",
              "YE",
              "ZW"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group3": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AM",
              "AR",
              "BY",
              "CC",
              "CL",
              "CX",
              "EG",
              "HM",
              "KZ",
              "MN",
              "NF",
              "PE",
              "UY",
              "UZ",
              "VN"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group4": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "AT",
              "BE",
              "CH",
              "DE",
              "DK",
              "FI",
              "FK",
              "GB",
              "GL",
              "GR",
              "GS",
              "HU",
              "IO",
              "LI",
              "LU",
              "NL",
              "NO",
              "PL",
              "PN",
              "PR",
              "PT",
              "SE",
              "SH",
              "SJ",
              "TC"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group5": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "BS",
              "KI",
              "SC",
              "TV"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group6": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "BF",
              "CI",
              "MW"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group7": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "CR",
              "HN",
              "IQ",
              "PG",
              "SO",
              "SV"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "province"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group8": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "BL",
              "GF",
              "GP",
              "MF",
              "MQ",
              "NC",
              "PM",
              "RE",
              "WF",
              "YT"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_Group9": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "IR",
              "PH",
              "TH"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_HK": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "area": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The area of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Area",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "HK"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "area"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_ID": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "ID"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "province"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_IE": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "IE"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "County",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_JM": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "JM"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "parish": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The parish of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Parish",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "parish"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_JP": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine1Kanji": {
            "description": "The kanji version of the first line of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Address line 1 kanji",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine2Kanji": {
            "description": "The kanji version of the second line of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Address line 2 kanji",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "cityKanji": {
            "description": "The kanji version of the city of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "City kanji",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "JP"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "prefecture": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The prefecture of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Prefecture",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "prefecture"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_KN": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "KN"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "island"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_KR": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "KR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "do_si",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_KY": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "KY"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "island"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_MC": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "CEDEX": {
            "description": "The CEDEX bureau of the location's address. Only applicable in certain countries.",
            "maxLength": 2,
            "nullable": true,
            "title": "CEDEX",
            "type": "string"
          },
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "MC"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_MO": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "MO"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_NG": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "NG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_NI": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "NI"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "department": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The department of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Department",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_NR": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "NR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "district"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_PF": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "PF"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The island of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Island",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "island",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_SG": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "SG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_SM": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "SM"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_TR": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "TR"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The province of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Province",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_TW": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "TW"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "County",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "county",
          "postalCode"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_US": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "US"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "description": "The county of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "County",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The state of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "State",
            "x-gw-createOnly": true,
            "x-gw-typelist": "State"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyLocation_VG": {
        "description": "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
        "properties": {
          "accountLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
            "title": "Account location",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "AccountLocation",
            "x-gw-referenceType": "AccountLocation"
          },
          "addressLine1": {
            "description": "The first line of the location's address",
            "nullable": true,
            "title": "Address line 1",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the location's address",
            "nullable": true,
            "title": "Address line 2",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressLine3": {
            "description": "The third line of the location's address",
            "nullable": true,
            "title": "Address line 3",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "addressType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The type of the location's address",
            "title": "Address type",
            "x-gw-createOnly": true,
            "x-gw-typelist": "AddressType"
          },
          "ccPolicySystemId": {
            "description": "Integration ID for use in ClaimCenter (Since 1.5.0)",
            "readOnly": true,
            "title": "CC policy system ID",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "city": {
            "description": "The city of the location's address",
            "nullable": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
            "enum": [
              "VG"
            ],
            "nullable": true,
            "title": "Country",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-type": "typekey.Country"
          },
          "description": {
            "description": "A description of the location",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
            "readOnly": true,
            "title": "Display name",
            "type": "string"
          },
          "employeeCount": {
            "description": "The number of employees at this location",
            "nullable": true,
            "title": "Employee count",
            "type": "integer"
          },
          "fireProtectionClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The fire protection class of this location",
            "nullable": true,
            "title": "Fire protection class",
            "x-gw-typelist": "FireProtectClass"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/ReferenceTableEntry",
            "description": "The industry code that describes the type of work done at this location",
            "title": "Industry code",
            "x-gw-createOnly": true
          },
          "locationNum": {
            "description": "The number automatically assigned to this location in the context of this policy",
            "readOnly": true,
            "title": "Location number",
            "type": "integer"
          },
          "postalCode": {
            "description": "The postal code of the location's address. Only applicable in certain countries.",
            "nullable": true,
            "title": "Postal code",
            "type": "string"
          },
          "primary": {
            "description": "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
            "readOnly": true,
            "title": "If true then this policy location is the primary location on this policy",
            "type": "boolean",
            "x-gw-sinceVersion": "1.4.0"
          },
          "taxLocation": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
            "nullable": true,
            "title": "Tax location",
            "x-gw-referenceType": "TaxLocation"
          },
          "territoryCodes": {
            "$ref": "#/components/schemas/TerritoryCodesMap",
            "description": "The rating territory codes (Since 1.5.0)",
            "title": "Territory codes",
            "x-gw-defaultViews": [
              "detail"
            ],
            "x-gw-sinceVersion": "1.5.0"
          },
          "validUntil": {
            "description": "A date and time after which this information is no longer valid",
            "format": "date-time",
            "nullable": true,
            "title": "Valid until",
            "type": "string"
          }
        },
        "title": "Policy location",
        "type": "object",
        "x-gw-filterable": [
          "locationNum"
        ],
        "x-gw-requiredForValidation": [
          "addressLine1"
        ],
        "x-gw-sortable": [
          "locationNum"
        ]
      },
      "PolicyPeriodInclusions": {
        "properties": {
          "Account": {
            "items": {
              "$ref": "#/components/schemas/AccountData"
            },
            "type": "array"
          },
          "AccountContact": {
            "items": {
              "$ref": "#/components/schemas/AccountContactData"
            },
            "type": "array"
          },
          "AccountLocation": {
            "items": {
              "$ref": "#/components/schemas/AccountLocationData"
            },
            "type": "array"
          },
          "Activity": {
            "items": {
              "$ref": "#/components/schemas/ActivityData"
            },
            "type": "array"
          },
          "ActivityPattern": {
            "items": {
              "$ref": "#/components/schemas/ActivityPatternData"
            },
            "type": "array"
          },
          "AdditionalNamedInsured": {
            "items": {
              "$ref": "#/components/schemas/AdditionalNamedInsuredData"
            },
            "type": "array"
          },
          "AssessmentSummary": {
            "items": {
              "$ref": "#/components/schemas/AssessmentSummaryData"
            },
            "type": "array"
          },
          "Assignee": {
            "items": {
              "$ref": "#/components/schemas/AssigneeData"
            },
            "type": "array"
          },
          "Contingency": {
            "items": {
              "$ref": "#/components/schemas/ContingencyData"
            },
            "type": "array"
          },
          "Cost": {
            "items": {
              "$ref": "#/components/schemas/CostData"
            },
            "type": "array"
          },
          "Document": {
            "items": {
              "$ref": "#/components/schemas/DocumentData"
            },
            "type": "array"
          },
          "DocumentContent": {
            "items": {
              "$ref": "#/components/schemas/DocumentContentData"
            },
            "type": "array"
          },
          "Job": {
            "items": {
              "$ref": "#/components/schemas/JobData"
            },
            "type": "array"
          },
          "JobPreemption": {
            "items": {
              "$ref": "#/components/schemas/JobDiffsData"
            },
            "type": "array"
          },
          "JobRoles": {
            "items": {
              "$ref": "#/components/schemas/JobRolesData"
            },
            "type": "array"
          },
          "JobVersion": {
            "items": {
              "$ref": "#/components/schemas/JobVersionData"
            },
            "type": "array"
          },
          "LossHistory": {
            "items": {
              "$ref": "#/components/schemas/LossHistoryData"
            },
            "type": "array"
          },
          "Note": {
            "items": {
              "$ref": "#/components/schemas/NoteData"
            },
            "type": "array"
          },
          "OOSConflicts": {
            "items": {
              "$ref": "#/components/schemas/OOSConflictsData"
            },
            "type": "array"
          },
          "PaymentInfo": {
            "items": {
              "$ref": "#/components/schemas/PaymentInfoData"
            },
            "type": "array"
          },
          "PaymentPlan": {
            "items": {
              "$ref": "#/components/schemas/PaymentPlanData"
            },
            "type": "array"
          },
          "Policy": {
            "items": {
              "$ref": "#/components/schemas/PolicyData"
            },
            "type": "array"
          },
          "PolicyContact": {
            "items": {
              "$ref": "#/components/schemas/PolicyContactData"
            },
            "type": "array"
          },
          "PolicyLine": {
            "items": {
              "$ref": "#/components/schemas/PolicyLineData"
            },
            "type": "array"
          },
          "PolicyLocation": {
            "items": {
              "$ref": "#/components/schemas/PolicyLocationData"
            },
            "type": "array"
          },
          "PolicyLocationQuestions": {
            "items": {
              "$ref": "#/components/schemas/QuestionAnswersData"
            },
            "type": "array"
          },
          "PolicyQuestions": {
            "items": {
              "$ref": "#/components/schemas/QuestionAnswersData"
            },
            "type": "array"
          },
          "PriorLoss": {
            "items": {
              "$ref": "#/components/schemas/PriorLossData"
            },
            "type": "array"
          },
          "PriorPolicy": {
            "items": {
              "$ref": "#/components/schemas/PriorPolicyData"
            },
            "type": "array"
          },
          "UWIssue": {
            "items": {
              "$ref": "#/components/schemas/UWIssueData"
            },
            "type": "array"
          },
          "UWIssueHistory": {
            "items": {
              "$ref": "#/components/schemas/UWIssueHistoryData"
            },
            "type": "array"
          },
          "UWReferralReason": {
            "items": {
              "$ref": "#/components/schemas/UWReferralReasonData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PrimaryNamedInsuredAttributes": {
        "description": "The new `primaryNamedInsured` for the policy (Since 1.4.0)",
        "properties": {
          "primaryNamedInsured": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "A reference to the `AccountContact` that should be set as the new primary named insured for this policy",
            "title": "Primary named insured",
            "x-gw-reference-schema": "AccountContact",
            "x-gw-referenceType": "AccountContact"
          }
        },
        "required": [
          "primaryNamedInsured"
        ],
        "title": "Policy named insured attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.4.0"
      },
      "PrimaryNamedInsuredData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PrimaryNamedInsuredAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PrimaryNamedInsuredRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PrimaryNamedInsuredData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PriorLoss": {
        "description": "A manually-entered history of a prior loss for this policy. The `lossHistoryType` of a job or policy must be `man` to have prior loss details. (Since 1.5.0)",
        "properties": {
          "amountPaid": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The amount paid by the carrier",
            "nullable": true,
            "title": "Amount paid"
          },
          "description": {
            "description": "An extended description of this prior loss",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Description",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "lossStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The status of the claim",
            "nullable": true,
            "title": "Loss status",
            "x-gw-typelist": "LossEntryStatus"
          },
          "occurrenceDate": {
            "description": "The date of the loss event",
            "format": "date",
            "nullable": true,
            "title": "Occurrence date",
            "type": "string"
          },
          "openReserve": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The amount reserved by the carrier",
            "nullable": true,
            "title": "Open reserve"
          },
          "totalIncurred": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The total incurred amount",
            "nullable": true,
            "title": "Total incurred"
          }
        },
        "title": "Prior loss",
        "type": "object",
        "x-gw-sinceVersion": "1.5.0",
        "x-gw-sortable": [
          "occurrenceDate"
        ]
      },
      "PriorLossData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PriorLoss"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PriorLossList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PriorLossData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PriorLossRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PriorLossData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PriorLossResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PriorLossData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "PriorPolicy": {
        "description": "Details prior coverage information including policy term, carrier, premiums and losses (Since 1.5.0)",
        "properties": {
          "annualPremium": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "Last year's annual premium",
            "nullable": true,
            "title": "Annual premium"
          },
          "carrier": {
            "description": "Name of the carrier",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Carrier",
            "type": "string"
          },
          "effectiveDate": {
            "description": "The start effective date for this `PriorPolicy`",
            "format": "date",
            "title": "Effective date",
            "type": "string"
          },
          "expirationDate": {
            "description": "The end effective date for this `PriorPolicy`",
            "format": "date",
            "nullable": true,
            "title": "Expiration date",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "numLosses": {
            "description": "Number of losses in the last 3 years",
            "minimum": 0,
            "nullable": true,
            "title": "Number of losses",
            "type": "integer"
          },
          "policyLinePatternCode": {
            "description": "The `id` of the `PolicyLinePattern` associated with the prior policy",
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Policy line pattern code",
            "type": "string"
          },
          "policyNumber": {
            "description": "Policy number",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Policy number",
            "type": "string"
          },
          "totalLosses": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "Total losses in the last 3 years",
            "nullable": true,
            "title": "Total losses"
          },
          "totalPremium": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The total premium for prior coverage",
            "nullable": true,
            "title": "Total premium"
          }
        },
        "title": "Prior policy",
        "type": "object",
        "x-gw-sinceVersion": "1.5.0",
        "x-gw-sortable": [
          "carrier",
          "effectiveDate",
          "expirationDate",
          "numLosses"
        ]
      },
      "PriorPolicyData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PriorPolicy"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PriorPolicyList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PriorPolicyData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PriorPolicyRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PriorPolicyData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PriorPolicyResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PriorPolicyData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "ProductModelChoice": {
        "description": "A specific enumerated value available in the context of an option or package coverage term",
        "properties": {
          "code": {
            "description": "The unique code that identifies the choice",
            "minLength": 1,
            "title": "Code",
            "type": "string"
          },
          "name": {
            "description": "The name of the choice",
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "code"
        ],
        "title": "Product model choice",
        "type": "object"
      },
      "ProductModelReference": {
        "description": "A reference to some product model element, such as a `CoveragePattern` or `PolicyLinePattern`",
        "properties": {
          "displayName": {
            "description": "The formatted name of the referenced element",
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the referenced element",
            "minLength": 1,
            "title": "ID",
            "type": "string"
          },
          "type": {
            "description": "The type of the referenced element",
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "Product model reference",
        "type": "object"
      },
      "QuestionAnswer": {
        "description": "Contains the value of the answer to a single question",
        "properties": {
          "booleanValue": {
            "description": "The value of this answer as a Boolean. Only applicable if `questionType` is `Boolean`.",
            "nullable": true,
            "title": "Boolean value",
            "type": "boolean"
          },
          "choiceValue": {
            "$ref": "#/components/schemas/ProductModelChoice",
            "description": "The value of this answer as an enumerated choice value. Only applicable if `questionType` is `Choice`.",
            "nullable": true,
            "title": "Choice value"
          },
          "dateValue": {
            "description": "The value of this answer as a date-time value. Only applicable if `questionType` is `Date`.",
            "format": "date-time",
            "nullable": true,
            "title": "Date value",
            "type": "string"
          },
          "displayValue": {
            "description": "A formatted, read-only view of the value of this answer",
            "readOnly": true,
            "title": "Display value",
            "type": "string"
          },
          "integerValue": {
            "description": "The value of this answer as an integer. Only applicable if `questionType` is `Integer`.",
            "nullable": true,
            "title": "Integer value",
            "type": "integer"
          },
          "question": {
            "$ref": "#/components/schemas/ProductModelReference",
            "description": "A reference to the `QuestionPattern` that this answer applies to",
            "readOnly": true,
            "title": "Question"
          },
          "questionType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The data type of the question. This field affects which of the value fields is applicable.",
            "readOnly": true,
            "title": "Question type",
            "x-gw-typelist": "QuestionType"
          },
          "textValue": {
            "description": "The value of this answer as a string. Only applicable if `questionType` is `String`.",
            "maxLength": 1333,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Text value",
            "type": "string"
          }
        },
        "title": "Question answer",
        "type": "object"
      },
      "QuestionAnswers": {
        "description": "An object that contains answers to the questions on the containing object",
        "properties": {
          "answers": {
            "$ref": "#/components/schemas/QuestionAnswersMap",
            "description": "An object that maps each question on the containing object to its corresponding answer",
            "title": "Answers"
          }
        },
        "required": [
          "answers"
        ],
        "title": "Question answers",
        "type": "object"
      },
      "QuestionAnswersData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/QuestionAnswers"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "QuestionAnswersMap": {
        "additionalProperties": {
          "$ref": "#/components/schemas/QuestionAnswer",
          "description": "The answers to the questions on the containing element. Each property key is the `id` of a `QuestionPattern` pattern that the answer applies to.",
          "title": "Answers"
        },
        "description": "An object that contains answers to the questions on the containing element. The keys in this object are the `id` values for the `QuestionPattern` elements that apply to the containing element.",
        "title": "Question answers map",
        "type": "object"
      },
      "QuestionAnswersRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/QuestionAnswersData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "QuestionAnswersResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/QuestionAnswersData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "RecoverNewJobsRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RecoverNewJobsRequestData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "RecoverNewJobsRequestAttributes": {
        "description": "Recovery fields used to recover new non-complete jobs for an unauthenticated user (Since 1.6.0)",
        "title": "Recover new jobs request attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.6.0"
      },
      "RecoverNewJobsRequestData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RecoverNewJobsRequestAttributes"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ReferenceTableEntry": {
        "description": "A single element from a reference table. Reference tables typically represent things like standardized lists of codes.",
        "properties": {
          "code": {
            "description": "The code of the reference table entry",
            "title": "Code",
            "type": "string"
          },
          "description": {
            "description": "The description of the reference table entry",
            "title": "Description",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this element",
            "title": "ID",
            "type": "string"
          }
        },
        "title": "Reference table entry",
        "type": "object"
      },
      "RelatedCollection": {
        "description": "A set of element references that are related to the element in some way. Used to link elements with their relations when a request is made using the `include` query parameter.",
        "properties": {
          "count": {
            "description": "The number of elements included in the `data` array",
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "description": "The list of references to the related elements",
            "items": {
              "$ref": "#/components/schemas/SimpleReference"
            },
            "title": "Data",
            "type": "array"
          },
          "total": {
            "description": "The total number of elements in the related set of elements. Only present if the `includeTotal` query parameter is used to request that the total be calculated for an included collection.",
            "title": "Total",
            "type": "integer"
          }
        },
        "title": "Related collection",
        "type": "object"
      },
      "RelatedCollections": {
        "additionalProperties": {
          "$ref": "#/components/schemas/RelatedCollection",
          "description": "The related collections. Each key in this object will match the name of the inclusion requested via the `include` query parameter.",
          "title": "Related collections"
        },
        "description": "A set of `RelatedCollection` elements that contain references to elements included using the `include` query parameter on a request",
        "title": "Related collections",
        "type": "object"
      },
      "ReleaseEditLockAttributes": {
        "description": "Details of releasing an edit lock on a job (Since 1.3.0)",
        "properties": {
          "activity": {
            "$ref": "#/components/schemas/Activity",
            "description": "Optional details for the auto-generated approval activity",
            "title": "Activity"
          },
          "note": {
            "$ref": "#/components/schemas/Note",
            "description": "Optional note to create with the auto-generated approval activity",
            "title": "Note"
          }
        },
        "title": "Release edit lock attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.3.0"
      },
      "ReleaseEditLockData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ReleaseEditLockAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ReleaseEditLockRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReleaseEditLockData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "RequestApprovalAttributes": {
        "description": "Details of requesting approval on a job (Since 1.3.0)",
        "properties": {
          "activity": {
            "$ref": "#/components/schemas/Activity",
            "description": "Optional details for the auto-generated approval activity",
            "title": "Activity"
          },
          "note": {
            "$ref": "#/components/schemas/Note",
            "description": "Optional note to create with the auto-generated approval activity",
            "title": "Note"
          }
        },
        "title": "Request approval attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.3.0"
      },
      "RequestApprovalData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RequestApprovalAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "RequestApprovalRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RequestApprovalData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "RescheduleAttributes": {
        "description": "Details of rescheduling the cancellation (Since 1.1.0)",
        "properties": {
          "processDate": {
            "description": "The new date that the cancellation should be scheduled for",
            "format": "date",
            "title": "Process date",
            "type": "string"
          }
        },
        "required": [
          "processDate"
        ],
        "title": "Reschedule attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.1.0"
      },
      "RescheduleData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RescheduleAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "RescheduleRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RescheduleData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ResolveOOSConflictsAttributes": {
        "description": "Details of how the out-of-sequence conflicts should be resolved (Since 1.2.0)",
        "properties": {
          "overrides": {
            "description": "The list of `OOSConflictOverride` values that specify how out-of-sequence conflicts should be resolved",
            "items": {
              "$ref": "#/components/schemas/OOSConflictOverride"
            },
            "title": "Overrides",
            "type": "array"
          }
        },
        "required": [
          "overrides"
        ],
        "title": "Resolve out-of-sequence conflicts attributes",
        "type": "object",
        "x-gw-sinceVersion": "1.2.0"
      },
      "ResolveOOSConflictsData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ResolveOOSConflictsAttributes"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ResolveOOSConflictsRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResolveOOSConflictsData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ReviewJobDiffResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReviewJobDiffResponseData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "ReviewJobDiffResponseData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/JobReviewDiffs"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SimpleReference": {
        "description": "A reference to an element",
        "properties": {
          "displayName": {
            "description": "The formatted name of the element",
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the referenced element",
            "title": "ID",
            "type": "string"
          },
          "jsonPath": {
            "description": "The path to the referenced element within the overall JSON document (Since 1.2.0)",
            "readOnly": true,
            "title": "JSON path",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-sinceVersion": "1.2.0"
          },
          "refid": {
            "description": "A unique identifier given to the newly created element in the context of the current request",
            "title": "Reference ID",
            "type": "string"
          },
          "type": {
            "description": "The type of the referenced element",
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The canonical URI for the referenced element",
            "title": "URI",
            "type": "string"
          }
        },
        "title": "Simple reference",
        "type": "object",
        "x-gw-resourceReference": true
      },
      "SpatialPoint": {
        "description": "An object that combines a latitude with a longitude (Since 1.2.0)",
        "properties": {
          "latitude": {
            "description": "The latitude of the spatial point",
            "format": "gw-bigdecimal",
            "title": "Latitude",
            "type": "string"
          },
          "longitude": {
            "description": "The longitude of the spatial point",
            "format": "gw-bigdecimal",
            "title": "Longitude",
            "type": "string"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "title": "Spatial point",
        "type": "object",
        "x-gw-sinceVersion": "1.2.0"
      },
      "TerritoryCode": {
        "description": "The value of a `TerritoryCode` for a particular policy line (Since 1.5.0)",
        "properties": {
          "code": {
            "description": "The `code` of the territory code",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Code",
            "type": "string"
          }
        },
        "title": "Territory code",
        "type": "object",
        "x-gw-sinceVersion": "1.5.0"
      },
      "TerritoryCodesMap": {
        "additionalProperties": {
          "$ref": "#/components/schemas/TerritoryCode",
          "description": "A map of `TerritoryCode` values by policy line. The keys in this object are the `patternCode` value of the policy line that the territory code applies to.",
          "title": "Territory codes map"
        },
        "description": "Territory codes map (Since 1.5.0)",
        "title": "Territory codes map",
        "type": "object",
        "x-gw-sinceVersion": "1.5.0"
      },
      "TypeKeyReference": {
        "description": "A reference to a `TypeKey` element that defines an enumerated value from a `TypeList`",
        "properties": {
          "code": {
            "description": "The `code` of the `TypeKey`",
            "title": "Code",
            "type": "string"
          },
          "name": {
            "description": "The `name` of the `TypeKey`",
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "code"
        ],
        "title": "TypeKey reference",
        "type": "object"
      },
      "UWCompanyReference": {
        "description": "A reference to an underwriting company (Since 1.3.0)",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The `code` of the referenced underwriting company",
            "title": "Code",
            "x-gw-typelist": "UWCompanyCode"
          },
          "displayName": {
            "description": "The formatted name of the referenced element",
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the referenced element",
            "title": "ID",
            "type": "string"
          },
          "jsonPath": {
            "description": "The path to the referenced element within the overall JSON document",
            "readOnly": true,
            "title": "JSON path",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "refid": {
            "description": "A unique identifier given to the newly created element in the context of the current request",
            "title": "Reference ID",
            "type": "string"
          },
          "type": {
            "description": "The type of the referenced element",
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The canonical URI for the referenced element",
            "title": "URI",
            "type": "string"
          }
        },
        "title": "Underwriting company reference",
        "type": "object",
        "x-gw-resourceReference": true,
        "x-gw-sinceVersion": "1.3.0"
      },
      "UWIssue": {
        "description": "A `UWIssue` represents an issue identified as part of underwriting evaluation, either by automated rules or during manual review (Since 1.2.0)",
        "properties": {
          "active": {
            "description": "A `true` value indicates that the issue still applies to this policy. An issue will be marked inactive when it no longer applies to the policy, but can still be retained for historical purposes.",
            "readOnly": true,
            "title": "Active",
            "type": "boolean"
          },
          "approvalBlockingPoint": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The point in the policy lifecycle that the issue has been approved up to",
            "title": "Approval blocking point",
            "x-gw-typelist": "UWIssueBlockingPoint"
          },
          "approvalDurationType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "How long the approval is valid for",
            "title": "Approval duration type",
            "x-gw-typelist": "UWApprovalDurationType"
          },
          "approvalInvalidFrom": {
            "description": "The date on which the approval ceases to be valid. Only applicable if `approvalDurationType` is set to a value that specifies a particular amount of time, such as an approval that is valid for one year.",
            "format": "date-time",
            "readOnly": true,
            "title": "Approval invalid from",
            "type": "string"
          },
          "approvingUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The caller who approved the issue",
            "readOnly": true,
            "title": "Approving user",
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "autoApprovable": {
            "description": "A `true` value indicates that the issue will be automatically approved during appropriate lifecycle actions if the caller has sufficient authority. Issues that are not auto-approvable must be manually approved instead.",
            "readOnly": true,
            "title": "Auto-approvable",
            "type": "boolean"
          },
          "automaticApprovalCause": {
            "description": "An identifier for the specific policy transaction that automatically approved the issue",
            "readOnly": true,
            "title": "Automatic approval cause",
            "type": "string"
          },
          "blockingPoint": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The default blocking point for the issue's `UWIssueType`",
            "readOnly": true,
            "title": "Blocking point",
            "x-gw-typelist": "UWIssueBlockingPoint"
          },
          "canEditApprovalBeforeBind": {
            "description": "A `true` value indicates that this approval can still be edited before the containing `Job` is bound",
            "title": "Can edit approval before bind",
            "type": "boolean"
          },
          "comparator": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "Defines both the type of value for the issue and how the issue's value is compared to the approval value to determine if the approval is valid",
            "readOnly": true,
            "title": "Comparator",
            "x-gw-typelist": "ValueComparator"
          },
          "currentBlockingPoint": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The point in the policy lifecycle that this issue currently blocks",
            "readOnly": true,
            "title": "Current blocking point",
            "x-gw-typelist": "UWIssueBlockingPoint"
          },
          "decimalApprovalValue": {
            "description": "The value of the issue's approval as a decimal. Only applicable if `valueType` is `decimal`.",
            "format": "gw-bigdecimal",
            "title": "Decimal approval value",
            "type": "string"
          },
          "decimalValue": {
            "description": "The value of the issue as a decimal. Only applicable if `valueType` is `decimal`.",
            "format": "gw-bigdecimal",
            "title": "Decimal value",
            "type": "string",
            "x-gw-createOnly": true
          },
          "displayApprovalValue": {
            "description": "The formatted, read-only value of the issue's approval",
            "readOnly": true,
            "title": "Display approval value",
            "type": "string"
          },
          "displayValue": {
            "description": "The formatted, read-only value of the issue",
            "readOnly": true,
            "title": "Display value",
            "type": "string"
          },
          "hasApprovalOrRejection": {
            "description": "A `true` value indicates that the issue has been either approved or rejected",
            "readOnly": true,
            "title": "Has approval or rejection",
            "type": "boolean"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "integerApprovalValue": {
            "description": "The value of the issue's approval as an integer. Only applicable if `valueType` is `integer`.",
            "format": "gw-biginteger",
            "title": "Integer approval value",
            "type": "string"
          },
          "integerValue": {
            "description": "The value of the issue as an integer. Only applicable if `valueType` is `integer`.",
            "format": "gw-biginteger",
            "title": "Integer value",
            "type": "string",
            "x-gw-createOnly": true
          },
          "issueKey": {
            "description": "A unique identifier for this issue that combines the type of issue with the policy element the issue applies to, if any",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Issue key",
            "type": "string"
          },
          "issueType": {
            "$ref": "#/components/schemas/UWIssueTypeReference",
            "description": "A reference to the `UWIssueType` that defines the type of this issue",
            "title": "Issue type",
            "x-gw-createOnly": true
          },
          "longDescription": {
            "description": "A longer description of this issue",
            "maxLength": 1333,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Long description",
            "type": "string",
            "x-gw-createOnly": true
          },
          "moneyApprovalValue": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The value of the issue's approval as a monetary amount. Only applicable if `valueType` is `money`.",
            "title": "Money approval value"
          },
          "moneyValue": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The value of the issue as a monetary amount. Only applicable if `valueType` is `money`.",
            "title": "Money value",
            "x-gw-createOnly": true
          },
          "rejected": {
            "description": "A `true` value indicates that this issue has been rejected",
            "readOnly": true,
            "title": "Rejected",
            "type": "boolean"
          },
          "rejectingUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The caller that rejected this issue",
            "readOnly": true,
            "title": "Rejecting user",
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "shortDescription": {
            "description": "A short description of this issue",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "title": "Short description",
            "type": "string",
            "x-gw-createOnly": true
          },
          "stateSetApprovalValue": {
            "$ref": "#/components/schemas/ExclusiveStateSet",
            "description": "The value of the issue's approval as a set of states. Only applicable if `valueType` is `stateset`.",
            "title": "State set approval value"
          },
          "stateSetValue": {
            "$ref": "#/components/schemas/ExclusiveStateSet",
            "description": "The value of the issue as a set of states. Only applicable if `valueType` is `stateset`.",
            "title": "State set value",
            "x-gw-createOnly": true
          },
          "valueType": {
            "description": "The type of value for this issue and its approvals. This field will determine which of the value fields is applicable to this issue.",
            "readOnly": true,
            "title": "Value type",
            "type": "string"
          },
          "valueVariesAcrossSlices": {
            "description": "A `true` value for this field indicates that the value of the issue varies at different effective dates within the policy term",
            "readOnly": true,
            "title": "Value varies across slices",
            "type": "boolean"
          }
        },
        "title": "Underwriting issue",
        "type": "object",
        "x-gw-filterable": [
          "active",
          "currentBlockingPoint"
        ],
        "x-gw-sinceVersion": "1.2.0",
        "x-gw-sortable": [
          "currentBlockingPoint",
          "hasApprovalOrRejection",
          "issueKey"
        ]
      },
      "UWIssueData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/UWIssue"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "UWIssueHistory": {
        "description": "A historical record of the prior values of an underwriting issue (Since 1.2.0)",
        "properties": {
          "approvalBlockingPoint": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The point in the policy lifecycle that the issue has been approved up to",
            "title": "Approval blocking point",
            "x-gw-typelist": "UWIssueBlockingPoint"
          },
          "approvalDurationType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "How long the approval is valid for",
            "title": "Approval duration type",
            "x-gw-typelist": "UWApprovalDurationType"
          },
          "approvalInvalidFrom": {
            "description": "The date on which the approval ceases to be valid. Only applicable if `approvalDurationType` is set to a value that specifies a particular amount of time, such as an approval that is valid for one year.",
            "format": "date-time",
            "readOnly": true,
            "title": "Approval invalid from",
            "type": "string"
          },
          "approvingUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The caller who approved the issue",
            "readOnly": true,
            "title": "Approving user",
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "automaticApprovalCause": {
            "description": "An identifier for the specific policy transaction that automatically approved the issue",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Automatic approval cause",
            "type": "string"
          },
          "blockingPoint": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The default blocking point for the issue's `UWIssueType`",
            "readOnly": true,
            "title": "Blocking point",
            "x-gw-typelist": "UWIssueBlockingPoint"
          },
          "canEditApprovalBeforeBind": {
            "description": "A `true` value indicates that this approval can still be edited before the containing `Job` is bound",
            "title": "Can edit approval before bind",
            "type": "boolean"
          },
          "comparator": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "Defines both the type of value for the issue and how the issue's value is compared to the approval value to determine if the approval is valid",
            "readOnly": true,
            "title": "Comparator",
            "x-gw-typelist": "ValueComparator"
          },
          "createDate": {
            "description": "The date and time when this version of the issue was created",
            "format": "date-time",
            "title": "Create date",
            "type": "string"
          },
          "decimalApprovalValue": {
            "description": "The value of the issue's approval as a decimal. Only applicable if `valueType` is `decimal`.",
            "format": "gw-bigdecimal",
            "title": "Decimal approval value",
            "type": "string"
          },
          "decimalValue": {
            "description": "The value of the issue as a decimal. Only applicable if `valueType` is `decimal`.",
            "format": "gw-bigdecimal",
            "title": "Decimal value",
            "type": "string",
            "x-gw-createOnly": true
          },
          "displayApprovalValue": {
            "description": "The formatted, read-only value of the issue's approval",
            "readOnly": true,
            "title": "Display approval value",
            "type": "string"
          },
          "displayValue": {
            "description": "The formatted, read-only value of the issue",
            "readOnly": true,
            "title": "Display value",
            "type": "string"
          },
          "effectiveDate": {
            "description": "The effective date and time when the issue applies",
            "format": "date-time",
            "title": "Effective date",
            "type": "string"
          },
          "hasApprovalOrRejection": {
            "description": "A `true` value indicates that the issue has been either approved or rejected",
            "readOnly": true,
            "title": "Has approval or rejection",
            "type": "boolean"
          },
          "integerApprovalValue": {
            "description": "The value of the issue's approval as an integer. Only applicable if `valueType` is `integer`.",
            "format": "gw-biginteger",
            "title": "Integer approval value",
            "type": "string"
          },
          "integerValue": {
            "description": "The value of the issue as an integer. Only applicable if `valueType` is `integer`.",
            "format": "gw-biginteger",
            "title": "Integer value",
            "type": "string",
            "x-gw-createOnly": true
          },
          "issueKey": {
            "description": "A unique identifier for this issue that combines the type of issue with the policy element the issue applies to, if any",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Issue key",
            "type": "string"
          },
          "issueType": {
            "$ref": "#/components/schemas/UWIssueTypeReference",
            "description": "A reference to the `UWIssueType` that defines the type of this issue",
            "title": "Issue type",
            "x-gw-createOnly": true
          },
          "moneyApprovalValue": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The value of the issue's approval as a monetary amount. Only applicable if `valueType` is `money`.",
            "title": "Money approval value"
          },
          "moneyValue": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The value of the issue as a monetary amount. Only applicable if `valueType` is `money`.",
            "title": "Money value",
            "x-gw-createOnly": true
          },
          "rejected": {
            "description": "A `true` value indicates that this issue has been rejected",
            "readOnly": true,
            "title": "Rejected",
            "type": "boolean"
          },
          "rejectingUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "description": "The caller that rejected this issue",
            "readOnly": true,
            "title": "Rejecting user",
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "stateSetApprovalValue": {
            "$ref": "#/components/schemas/ExclusiveStateSet",
            "description": "The value of the issue's approval as a set of states. Only applicable if `valueType` is `stateset`.",
            "title": "State set approval value"
          },
          "stateSetValue": {
            "$ref": "#/components/schemas/ExclusiveStateSet",
            "description": "The value of the issue as a set of states. Only applicable if `valueType` is `stateset`.",
            "title": "State set value",
            "x-gw-createOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The action that was taken on the issue",
            "title": "Status",
            "x-gw-typelist": "UWIssueHistoryStatus"
          },
          "valueType": {
            "description": "The type of value for this issue and its approvals. This field will determine which of the value fields is applicable to this issue.",
            "readOnly": true,
            "title": "Value type",
            "type": "string"
          }
        },
        "title": "Underwriting issue history",
        "type": "object",
        "x-gw-sinceVersion": "1.2.0",
        "x-gw-sortable": [
          "createDate",
          "hasApprovalOrRejection",
          "issueKey"
        ]
      },
      "UWIssueHistoryData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/UWIssueHistory"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "UWIssueHistoryList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/UWIssueHistoryData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UWIssueList": {
        "properties": {
          "count": {
            "description": "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
            "readOnly": true,
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/UWIssueData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the overall list of elements, used to paginate the list",
            "readOnly": true,
            "title": "Links"
          },
          "total": {
            "description": "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
            "readOnly": true,
            "title": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UWIssueRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UWIssueData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "UWIssueResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UWIssueData"
          },
          "included": {
            "$ref": "#/components/schemas/PolicyPeriodInclusions"
          }
        },
        "type": "object"
      },
      "UWIssueTypeReference": {
        "description": "A reference to a `UWIssueType` that represents a type of underwriting issue (Since 1.2.0)",
        "properties": {
          "code": {
            "description": "The `code` of the `UWIssueType`",
            "maxLength": 60,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Code",
            "type": "string"
          },
          "displayName": {
            "description": "The formatted name of the `UWIssueType`",
            "title": "Display name",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this element",
            "title": "ID",
            "type": "string"
          },
          "jsonPath": {
            "description": "The path to the referenced `UWIssueType` within the overall JSON document",
            "readOnly": true,
            "title": "JSON path",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "refid": {
            "description": "A unique identifier given to the newly created element in the context of the current request",
            "title": "Reference ID",
            "type": "string"
          },
          "type": {
            "description": "The type of the referenced element",
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The canonical URI for the referenced element",
            "title": "URI",
            "type": "string"
          }
        },
        "title": "Underwriting issue type reference",
        "type": "object",
        "x-gw-resourceReference": true,
        "x-gw-sinceVersion": "1.2.0",
        "x-gw-sortable": [
          "code"
        ]
      },
      "UWReferralReason": {
        "description": "A reason that a policy has been referred to underwriting (Since 1.3.0)",
        "properties": {
          "autoApprovable": {
            "description": "A `true` value indicates that the referral reason will be automatically approved during appropriate lifecycle actions if the caller has sufficient authority. Reasons that are not auto-approvable must be manually approved instead.",
            "readOnly": true,
            "title": "Auto-approvable",
            "type": "boolean"
          },
          "blockingPoint": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The default blocking point for the referral reason's `UWIssueType`",
            "readOnly": true,
            "title": "Blocking point",
            "x-gw-typelist": "UWIssueBlockingPoint"
          },
          "comparator": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "Defines both the type of value for the referral reason and how the reason's value is compared to the approval value to determine if the approval is valid",
            "readOnly": true,
            "title": "Comparator",
            "x-gw-typelist": "ValueComparator"
          },
          "decimalValue": {
            "description": "The value of the referral reason as a decimal. Only applicable if `valueType` is `decimal`.",
            "format": "gw-bigdecimal",
            "title": "Decimal value",
            "type": "string"
          },
          "displayValue": {
            "description": "The formatted, read-only value of this referral reason",
            "readOnly": true,
            "title": "Display value",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of this element",
            "readOnly": true,
            "title": "ID",
            "type": "string"
          },
          "integerValue": {
            "description": "The value of the referral reason as an integer. Only applicable if `valueType` is `integer`.",
            "format": "gw-biginteger",
            "title": "Integer value",
            "type": "string"
          },
          "issueKey": {
            "description": "A unique identifier for this referral reason that combines the type of the reason with the policy element the reason applies to, if any",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "title": "Issue key",
            "type": "string"
          },
          "issueType": {
            "$ref": "#/components/schemas/UWIssueTypeReference",
            "description": "A reference to the `UWIssueType` that defines the type of this referral reason",
            "title": "Issue type"
          },
          "longDescription": {
            "description": "A longer description of the reason for the referral to underwriting",
            "maxLength": 1333,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Long description",
            "type": "string"
          },
          "moneyValue": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "description": "The value of the referral reason as a monetary amount. Only applicable if `valueType` is `money`.",
            "title": "Money value"
          },
          "shortDescription": {
            "description": "A short description of the reason for the referral to underwriting",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "title": "Short description",
            "type": "string"
          },
          "stateSetValue": {
            "$ref": "#/components/schemas/ExclusiveStateSet",
            "description": "The value of the referral reason as a set of states. Only applicable if `valueType` is `stateset`.",
            "title": "State set value"
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The current status of this referral reason, such as `Open` or `Closed`",
            "readOnly": true,
            "title": "Status",
            "x-gw-typelist": "UWReferralReasonStatus"
          },
          "valueType": {
            "description": "The type of value for this referral reason. This field will determine which of the value fields is applicable to this referral reason.",
            "readOnly": true,
            "title": "Value type",
            "type": "string"
          }
        },
        "required": [
          "issueType"
        ],
        "title": "Underwriting referral reason",
        "type": "object",
        "x-gw-filterable": [
          "status"
        ],
        "x-gw-sinceVersion": "1.3.0",
        "x-gw-sortable": [
          "issueKey",
          "status"
        ]
      },
      "UWReferralReasonData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/UWReferralReason"
          },
          "checksum": {
            "description": "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.",
            "title": "Checksum",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the element",
            "title": "ID",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "description": "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
            "readOnly": true,
            "title": "Links"
          },
          "method": {
            "description": "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
            "enum": [
              "post",
              "patch"
            ],
            "title": "Method",
            "type": "string"
          },
          "refid": {
            "description": "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "Reference ID",
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "description": "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
            "readOnly": true,
            "title": "Related"
          },
          "type": {
            "description": "The type of this element",
            "readOnly": true,
            "title": "Type",
            "type": "string"
          },
          "uri": {
            "description": "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.",
            "title": "URI",
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "APIs for job related objects",
    "title": "Job API",
    "version": "1.6.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/batch": {
      "post": {
        "description": "Post a list of subrequests to make against this endpoint. Subrequests will be executed serially, in the order they are specified in the \"requests\" property of the input. Responses to each subrequest will then be batched up and returned all together. Subrequests inherit the headers from the main request, with the exception of the GW-Checksum header, but headers can be specified on the subrequest and will override any headers from the main request.",
        "operationId": "batchRequest",
        "parameters": [
          {
            "description": "Controls what response headers, if any, are included for subresponses. If unspecified, or set to the value \"*all\", all headers for subresponses will be returned. If set to the value \"*none\", no headers for subresponses will be returned. Otherwise, this parameter can consist of a comma-separated list of the names of headers that should be included on subresponses.",
            "explode": false,
            "in": "query",
            "name": "includeResponseHeaders",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRequest"
              }
            }
          },
          "description": "The body of the batch request",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponse"
                }
              }
            },
            "description": "The batch request itself was well-formed; individual subrequests may have succeeded or failed"
          }
        },
        "summary": "Issue multiple requests at once as a non-transactional batch"
      }
    },
    "/graph-schema": {
      "get": {
        "description": "Return the JSON Schema Draft-7 representation of the job graph",
        "operationId": "getJobApiGraphSchema",
        "parameters": [
          {
            "description": "The product code to fetch the schema for",
            "in": "query",
            "name": "product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether or not to pretty-print the returned schema, making it larger but more human readable.  Defaults to false.",
            "in": "query",
            "name": "prettyPrint",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Whether or not to include all referenced typelist values inline on properties.  Defaults to false.",
            "in": "query",
            "name": "inlineTypelists",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Whether or not to inline concrete schemas for all coverages, terms, questions, etc.  Defaults to false.",
            "in": "query",
            "name": "inlineProductDefinition",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Return the JSON Schema Draft-7 representation of the job graph",
        "x-gw-resourceType": "JobApiGraphSchema"
      }
    },
    "/jobs": {
      "get": {
        "description": "Retrieve a list of Jobs",
        "operationId": "getJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a list of Jobs",
        "x-gw-childResourceType": "Job",
        "x-gw-resourceType": "Jobs"
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "description": "Retrieve a job",
        "operationId": "getJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a job",
        "x-gw-resourceType": "Job"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "patch": {
        "description": "Update a job",
        "operationId": "patchJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update a job",
        "x-gw-resourceType": "Job"
      }
    },
    "/jobs/{jobId}/activities": {
      "get": {
        "description": "Retrieve a list of activities associated with this job (Since 1.1.0)",
        "operationId": "getJobActivities",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityList"
                }
              }
            },
            "description": "Returns a list of activities"
          }
        },
        "summary": "Retrieve a list of activities associated with this job",
        "x-gw-childResourceType": "Activity",
        "x-gw-resourceType": "JobActivities",
        "x-gw-sinceVersion": "1.1.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new activity associated with this job (Since 1.1.0)",
        "operationId": "createJobActivity",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description": "Return the details for the newly-created activity"
          }
        },
        "summary": "Create a new activity associated with this job",
        "x-gw-childResourceType": "Activity",
        "x-gw-resourceType": "JobActivities",
        "x-gw-sinceVersion": "1.1.0"
      }
    },
    "/jobs/{jobId}/activity-assignees": {
      "get": {
        "description": "Retrieve the list of suggested people, groups, queues, userRoles, etc. that new activities on this job can be assigned to (Since 1.1.0)",
        "operationId": "getJobActivityAssignees",
        "parameters": [
          {
            "$ref": "#/components/parameters/jobId"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssigneeList"
                }
              }
            },
            "description": "Returns the list of suggested assignees"
          }
        },
        "summary": "Retrieve the list of suggested people, groups, queues, userRoles, etc. that new activities on this job can be assigned to",
        "x-gw-childResourceType": "Assignee",
        "x-gw-resourceType": "JobActivityAssignees",
        "x-gw-sinceVersion": "1.1.0"
      }
    },
    "/jobs/{jobId}/activity-patterns": {
      "get": {
        "description": "Retrieve a list of activity patterns that can be used to create activities on this job (Since 1.1.0)",
        "operationId": "getJobActivityPatterns",
        "parameters": [
          {
            "$ref": "#/components/parameters/jobId"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPatternList"
                }
              }
            },
            "description": "Returns a list of activity patterns"
          }
        },
        "summary": "Retrieve a list of activity patterns that can be used to create activities on this job",
        "x-gw-childResourceType": "ActivityPattern",
        "x-gw-resourceType": "JobActivityPatterns",
        "x-gw-sinceVersion": "1.1.0"
      }
    },
    "/jobs/{jobId}/additional-named-insureds": {
      "get": {
        "description": "Retrieve a list of additional named insureds on this period (Since 1.4.0)",
        "operationId": "getAdditionalNamedInsureds",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalNamedInsuredList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a list of additional named insureds on this period",
        "x-gw-childResourceType": "AdditionalNamedInsured",
        "x-gw-resourceType": "AdditionalNamedInsureds",
        "x-gw-sinceVersion": "1.4.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a policy additional named insured (Since 1.4.0)",
        "operationId": "postAdditionalNamedInsured",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalNamedInsuredRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalNamedInsuredResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a new additional named insured",
        "x-gw-childResourceType": "AdditionalNamedInsured",
        "x-gw-resourceType": "AdditionalNamedInsureds",
        "x-gw-sinceVersion": "1.4.0"
      }
    },
    "/jobs/{jobId}/additional-named-insureds/{additionalNamedInsuredId}": {
      "delete": {
        "description": "Delete the specified additional named insured (Since 1.4.0)",
        "operationId": "deleteAdditionalNamedInsured",
        "parameters": [
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete the specified additional named insured",
        "x-gw-resourceType": "AdditionalNamedInsured",
        "x-gw-sinceVersion": "1.4.0"
      },
      "get": {
        "description": "Retrieve the specified additional named insured (Since 1.4.0)",
        "operationId": "getAdditionalNamedInsured",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalNamedInsuredResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve the specified additional named insured",
        "x-gw-resourceType": "AdditionalNamedInsured",
        "x-gw-sinceVersion": "1.4.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/additionalNamedInsuredId"
        }
      ],
      "patch": {
        "description": "Update the specified additional named insured (Since 1.4.0)",
        "operationId": "patchAdditionalNamedInsured",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalNamedInsuredRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalNamedInsuredResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update the specified additional named insured",
        "x-gw-resourceType": "AdditionalNamedInsured",
        "x-gw-sinceVersion": "1.4.0"
      }
    },
    "/jobs/{jobId}/apply-changes-to-renewal": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Apply changes to future renewal job (Since 1.3.0)",
        "operationId": "applyChangesToRenewal",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPreemptionConflictsResponse"
                }
              }
            },
            "description": "Successfully applied changes to renewal"
          }
        },
        "summary": "Apply changes to renewal job",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/assessment-summaries": {
      "get": {
        "description": "Retrieve a collection of assessment summaries (Since 1.5.0)",
        "operationId": "getAssessmentSummaries",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentSummaryList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a collection of assessment summaries",
        "x-gw-childResourceType": "AssessmentSummary",
        "x-gw-resourceType": "AssessmentSummaries",
        "x-gw-sinceVersion": "1.5.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new assessment summary (Since 1.5.0)",
        "operationId": "createAssessmentSummary",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentSummaryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentSummaryResponse"
                }
              }
            },
            "description": "The details of the newly-created AssessmentSummary"
          }
        },
        "summary": "Create a new assessment summary",
        "x-gw-childResourceType": "AssessmentSummary",
        "x-gw-resourceType": "AssessmentSummaries",
        "x-gw-sinceVersion": "1.5.0"
      }
    },
    "/jobs/{jobId}/assessment-summaries/{assessmentSummaryId}": {
      "get": {
        "description": "Retrieve details of an assessment summary (Since 1.5.0)",
        "operationId": "getAssessmentSummary",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentSummaryResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve details of an assessment summary",
        "x-gw-resourceType": "AssessmentSummary",
        "x-gw-sinceVersion": "1.5.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/assessmentSummaryId"
        }
      ]
    },
    "/jobs/{jobId}/bind-and-issue": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Bind and issue a job",
        "operationId": "bindAndIssueJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully bound and issued the job"
          }
        },
        "summary": "Bind and issue a job",
        "x-gw-resourceType": "Job"
      }
    },
    "/jobs/{jobId}/bind-only": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Bind a submission without issuing",
        "operationId": "bindOnlyJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully bound the submission without issuing"
          }
        },
        "summary": "Bind a submission without issuing",
        "x-gw-resourceType": "Job"
      }
    },
    "/jobs/{jobId}/change-effective-date": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Change the edit effective date of a job (Since 1.3.0)",
        "operationId": "changeJobEffectiveDate",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeJobEffectiveDateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully changed the edit effective date of the job"
          }
        },
        "summary": "Change the edit effective date of a job",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/change-primary-named-insured": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Change the primary named insured of this job (Since 1.4.0)",
        "operationId": "changePrimaryNamedInsured",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrimaryNamedInsuredRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully changed this job's primary named insured"
          }
        },
        "summary": "Change the primary named insured of this job",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.4.0"
      }
    },
    "/jobs/{jobId}/change-version": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Change the selected version of a job",
        "operationId": "changeJobVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeJobVersionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully changed version"
          }
        },
        "summary": "Change the selected version of a job",
        "x-gw-resourceType": "Job"
      }
    },
    "/jobs/{jobId}/contacts": {
      "get": {
        "description": "Retrieve a list of policy contacts on a job",
        "operationId": "getPolicyContacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyContactList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a list of policy contacts on a job",
        "x-gw-childResourceType": "PolicyContact",
        "x-gw-resourceType": "PolicyContacts"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new policy contact on a job",
        "operationId": "createPolicyContact",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyContactRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyContactResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a new policy contact on a job",
        "x-gw-childResourceType": "PolicyContact",
        "x-gw-resourceType": "PolicyContacts"
      }
    },
    "/jobs/{jobId}/contacts/{contactId}": {
      "delete": {
        "description": "Delete the specified policy contact (Since 1.3.0)",
        "operationId": "deletePolicyContact",
        "parameters": [
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete the specified policy contact",
        "x-gw-resourceType": "PolicyContact",
        "x-gw-sinceVersion": "1.3.0"
      },
      "get": {
        "description": "Retrieve a policy contact on a job",
        "operationId": "getPolicyContact",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyContactResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a policy contact on a job",
        "x-gw-resourceType": "PolicyContact"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/contactId"
        }
      ],
      "patch": {
        "description": "Update a policy contact on a job",
        "operationId": "patchPolicyContact",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyContactRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyContactResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update a policy contact on a job",
        "x-gw-resourceType": "PolicyContact"
      }
    },
    "/jobs/{jobId}/contingencies": {
      "get": {
        "description": "Retrieve contingencies associated with this job (Since 1.3.0)",
        "operationId": "getJobContingencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContingencyList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve contingencies associated with this job",
        "x-gw-childResourceType": "Contingency",
        "x-gw-resourceType": "Contingencies",
        "x-gw-sinceVersion": "1.3.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new contingency associated with this job (Since 1.3.0)",
        "operationId": "createJobContingency",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContingencyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContingencyResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a new contingency associated with this job",
        "x-gw-childResourceType": "Contingency",
        "x-gw-resourceType": "Contingencies",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/contingencies/{contingencyId}": {
      "get": {
        "description": "Retrieve the specified contingency (Since 1.3.0)",
        "operationId": "getJobContingency",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContingencyResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve the specified contingency",
        "x-gw-resourceType": "Contingency",
        "x-gw-sinceVersion": "1.3.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/contingencyId"
        }
      ]
    },
    "/jobs/{jobId}/contingencies/{contingencyId}/activities": {
      "get": {
        "description": "Retrieve a list of activities on this contingency associated with a given job (Since 1.3.0)",
        "operationId": "getJobContingencyActivities",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityList"
                }
              }
            },
            "description": "Returns a list of activities on this contingency associated with this job"
          }
        },
        "summary": "Retrieve a list of activities on this contingency associated with a given job",
        "x-gw-childResourceType": "Activity",
        "x-gw-resourceType": "ContingencyActivities",
        "x-gw-sinceVersion": "1.3.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/contingencyId"
        }
      ],
      "post": {
        "description": "Create a new activity on this contingency associated with this job (Since 1.3.0)",
        "operationId": "createJobContingencyActivity",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description": "Successfully created an activity related to this contingency"
          }
        },
        "summary": "Create a new activity on this contingency associated with this job",
        "x-gw-childResourceType": "Activity",
        "x-gw-resourceType": "ContingencyActivities",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/contingencies/{contingencyId}/documents": {
      "get": {
        "description": "Retrieve a list of documents on this contingency associated with the given job (Since 1.3.0)",
        "operationId": "getJobContingencyDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentList"
                }
              }
            },
            "description": "Successfully returns a list of documents on this contingency associated with this job"
          }
        },
        "summary": "Retrieve a list of documents on this contingency associated with the given job",
        "x-gw-childResourceType": "Document",
        "x-gw-resourceType": "ContingencyDocuments",
        "x-gw-sinceVersion": "1.3.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/contingencyId"
        }
      ],
      "post": {
        "description": "Create a new document on this contingency associated with this job (Since 1.3.0)",
        "operationId": "createJobContingencyDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "content": {
                    "format": "binary",
                    "type": "string"
                  },
                  "metadata": {
                    "$ref": "#/components/schemas/DocumentRequest"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentResponse"
                }
              }
            },
            "description": "Successfully created document on this contingency"
          }
        },
        "summary": "Create a new document on this contingency associated with this job",
        "x-gw-childResourceType": "Document",
        "x-gw-resourceType": "ContingencyDocuments",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/contingencies/{contingencyId}/notes": {
      "get": {
        "description": "Notes associated with a given contingency (Since 1.3.0)",
        "operationId": "getJobContingencyNotes",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteList"
                }
              }
            },
            "description": "The list of notes associated with this contingency"
          }
        },
        "summary": "Notes associated with a given contingency",
        "x-gw-childResourceType": "Note",
        "x-gw-resourceType": "ContingencyNotes",
        "x-gw-sinceVersion": "1.3.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/contingencyId"
        }
      ],
      "post": {
        "description": "Create a new note on this contingency (Since 1.3.0)",
        "operationId": "createJobContingencyNote",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteResponse"
                }
              }
            },
            "description": "Successfully created a note related to this contingency"
          }
        },
        "summary": "Create a new note on this contingency",
        "x-gw-childResourceType": "Note",
        "x-gw-resourceType": "ContingencyNotes",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/contingencies/{contingencyId}/resolve": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/contingencyId"
        }
      ],
      "post": {
        "description": "Resolve the specified contingency (Since 1.3.0)",
        "operationId": "resolveJobContingency",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContingencyResponse"
                }
              }
            },
            "description": "Successfully resolved the contingency"
          }
        },
        "summary": "Resolve the specified contingency",
        "x-gw-resourceType": "Contingency",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/contingencies/{contingencyId}/waive": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/contingencyId"
        }
      ],
      "post": {
        "description": "Waive the specified contingency (Since 1.3.0)",
        "operationId": "waiveJobContingency",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContingencyResponse"
                }
              }
            },
            "description": "Successfully waived the contingency"
          }
        },
        "summary": "Waive the specified contingency",
        "x-gw-resourceType": "Contingency",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/copy-submission": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Copy submission information from an existing submission to create a new submission (Since 1.2.0)",
        "operationId": "copySubmission",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully copied submission"
          }
        },
        "summary": "Copy submission information from an existing submission to create a new submission",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.2.0"
      }
    },
    "/jobs/{jobId}/costs": {
      "get": {
        "description": "Retrieve costs on a quoted job",
        "operationId": "getJobCosts",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve costs on a quoted job",
        "x-gw-childResourceType": "Cost",
        "x-gw-resourceType": "Costs"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ]
    },
    "/jobs/{jobId}/decline": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Decline a submission",
        "operationId": "declineJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeclineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully declined the submission"
          }
        },
        "summary": "Decline a submission",
        "x-gw-resourceType": "Job"
      }
    },
    "/jobs/{jobId}/documents": {
      "get": {
        "description": "Retrieve a list of documents on a job (Since 1.1.0)",
        "operationId": "getJobDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a list of documents on a job",
        "x-gw-childResourceType": "Document",
        "x-gw-resourceType": "JobDocuments",
        "x-gw-sinceVersion": "1.1.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new document on a job (Since 1.1.0)",
        "operationId": "createJobDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "content": {
                    "format": "binary",
                    "type": "string"
                  },
                  "metadata": {
                    "$ref": "#/components/schemas/DocumentRequest"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a new document on a job",
        "x-gw-childResourceType": "Document",
        "x-gw-resourceType": "JobDocuments",
        "x-gw-sinceVersion": "1.1.0"
      }
    },
    "/jobs/{jobId}/edit-lock": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Set edit lock for a job (Since 1.2.0)",
        "operationId": "editLockJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully set edit lock for the job"
          }
        },
        "summary": "Set edit lock for a job",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.2.0"
      }
    },
    "/jobs/{jobId}/handle-preemptions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Handle preemptions on this job (Since 1.3.0)",
        "operationId": "handlePreemptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPreemptionConflictsResponse"
                }
              }
            },
            "description": "Successfully handled preemptions"
          }
        },
        "summary": "Handle preemptions on this job",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/lines": {
      "get": {
        "description": "Retrieve a list of lines on a job",
        "operationId": "getPolicyLines",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyLineList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a list of lines on a job",
        "x-gw-childResourceType": "PolicyLine",
        "x-gw-resourceType": "PolicyLines"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new line on a job",
        "operationId": "createPolicyLine",
        "parameters": [
          {
            "$ref": "#/components/parameters/createDefaultCoverages"
          },
          {
            "$ref": "#/components/parameters/deferValidation"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyLineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyLineResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a new line on a job",
        "x-gw-childResourceType": "PolicyLine",
        "x-gw-resourceType": "PolicyLines"
      }
    },
    "/jobs/{jobId}/locations": {
      "get": {
        "description": "Retrieve a list of locations on a job",
        "operationId": "getPolicyLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyLocationList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a list of locations on a job",
        "x-gw-childResourceType": "PolicyLocation",
        "x-gw-resourceType": "PolicyLocations"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new location on a job",
        "operationId": "createPolicyLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyLocationResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a new location on a job",
        "x-gw-childResourceType": "PolicyLocation",
        "x-gw-resourceType": "PolicyLocations"
      }
    },
    "/jobs/{jobId}/locations/{locationId}": {
      "delete": {
        "description": "Delete this location from its job",
        "operationId": "deletePolicyLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete this location from its job",
        "x-gw-resourceType": "PolicyLocation"
      },
      "get": {
        "description": "Retrieve a location on a job",
        "operationId": "getPolicyLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyLocationResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a location on a job",
        "x-gw-resourceType": "PolicyLocation"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/locationId"
        }
      ],
      "patch": {
        "description": "Update a location on a job",
        "operationId": "patchPolicyLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyLocationResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update a location on a job",
        "x-gw-resourceType": "PolicyLocation"
      }
    },
    "/jobs/{jobId}/locations/{locationId}/questions": {
      "get": {
        "description": "Retrieve a list of questions on the policy location",
        "operationId": "getPolicyLocationQuestions",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionAnswersResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a list of questions on the policy location",
        "x-gw-resourceType": "PolicyLocationQuestions"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/locationId"
        }
      ],
      "patch": {
        "description": "Update a list of questions on the policy location",
        "operationId": "patchPolicyLocationQuestions",
        "parameters": [
          {
            "$ref": "#/components/parameters/deferValidation"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionAnswersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionAnswersResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update a list of questions on the policy location",
        "x-gw-resourceType": "PolicyLocationQuestions"
      }
    },
    "/jobs/{jobId}/locations/{locationId}/sync-questions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/locationId"
        }
      ],
      "post": {
        "description": "Sync the questions on a policy location by recalculating their availability (Since 1.3.0)",
        "operationId": "syncPolicyLocationQuestions",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionAnswersResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Sync the questions on a policy location",
        "x-gw-resourceType": "PolicyLocation",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/loss-history": {
      "get": {
        "description": "Retrieve the prior loss history for a job. Attached documents or prior loss details are not included on this response by default, but can be retrieved using the `include` query parameter. (Since 1.5.0)",
        "operationId": "getJobLossHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LossHistoryResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve the prior loss history for a job",
        "x-gw-resourceType": "LossHistory",
        "x-gw-sinceVersion": "1.5.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "patch": {
        "description": "Update prior loss history on a job. Attach documents or update prior loss details separately. (Since 1.5.0)",
        "operationId": "patchJobLossHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LossHistoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LossHistoryResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update prior loss history on a job",
        "x-gw-resourceType": "LossHistory",
        "x-gw-sinceVersion": "1.5.0"
      }
    },
    "/jobs/{jobId}/loss-history/prior-losses": {
      "get": {
        "description": "Retrieve the prior loss details for a job. A job's `lossHistoryType` must be `man` to have prior loss details. (Since 1.5.0)",
        "operationId": "getJobPriorLosses",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriorLossList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve the prior loss details for a job",
        "x-gw-childResourceType": "PriorLoss",
        "x-gw-resourceType": "PriorLosses",
        "x-gw-sinceVersion": "1.5.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new prior loss associated with this job. A job's `lossHistoryType` must be `man` to have prior loss details. (Since 1.5.0)",
        "operationId": "createJobPriorLoss",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriorLossRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriorLossResponse"
                }
              }
            },
            "description": "Return the details for the newly-created prior loss"
          }
        },
        "summary": "Create a new prior loss associated with this job",
        "x-gw-childResourceType": "PriorLoss",
        "x-gw-resourceType": "PriorLosses",
        "x-gw-sinceVersion": "1.5.0"
      }
    },
    "/jobs/{jobId}/loss-history/prior-losses/{priorLossId}": {
      "delete": {
        "description": "Delete this prior loss from its job (Since 1.5.0)",
        "operationId": "deleteJobPriorLoss",
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete this prior loss from its job",
        "x-gw-resourceType": "PriorLoss",
        "x-gw-sinceVersion": "1.5.0"
      },
      "get": {
        "description": "Retrieve prior loss details for the manual loss history on a job (Since 1.5.0)",
        "operationId": "getJobPriorLoss",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriorLossResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve prior loss details for the manual loss history on a job",
        "x-gw-resourceType": "PriorLoss",
        "x-gw-sinceVersion": "1.5.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/priorLossId"
        }
      ],
      "patch": {
        "description": "Update prior loss details for the manual loss history on a job (Since 1.5.0)",
        "operationId": "patchJobPriorLoss",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriorLossRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriorLossResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update prior loss details for the manual loss history on a job",
        "x-gw-resourceType": "PriorLoss",
        "x-gw-sinceVersion": "1.5.0"
      }
    },
    "/jobs/{jobId}/make-draft": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Return a job to Draft status",
        "operationId": "makeDraftJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully returned the job to Draft status"
          }
        },
        "summary": "Return a job to Draft status",
        "x-gw-resourceType": "Job"
      }
    },
    "/jobs/{jobId}/not-take": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Not-take a submission",
        "operationId": "notTakeJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotTakeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully not-took the submission"
          }
        },
        "summary": "Not-take a submission",
        "x-gw-resourceType": "Job"
      }
    },
    "/jobs/{jobId}/notes": {
      "get": {
        "description": "Notes associated with a given job (Since 1.1.0)",
        "operationId": "getJobNotes",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteList"
                }
              }
            },
            "description": "The list of notes associated with this job"
          }
        },
        "summary": "Notes associated with a given job",
        "x-gw-childResourceType": "Note",
        "x-gw-resourceType": "JobNotes",
        "x-gw-sinceVersion": "1.1.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new note on this job (Since 1.1.0)",
        "operationId": "createJobNote",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteResponse"
                }
              }
            },
            "description": "The details of a newly-created note"
          }
        },
        "summary": "Create a new note on this job",
        "x-gw-childResourceType": "Note",
        "x-gw-resourceType": "JobNotes",
        "x-gw-sinceVersion": "1.1.0"
      }
    },
    "/jobs/{jobId}/oos-conflicts": {
      "get": {
        "description": "Retrieve the out-of-sequence conflicts for a job (Since 1.2.0)",
        "operationId": "getOOSConflicts",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OOSConflictsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve the out-of-sequence conflicts for a job",
        "x-gw-resourceType": "OOSConflicts",
        "x-gw-sinceVersion": "1.2.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ]
    },
    "/jobs/{jobId}/oos-conflicts/resolve": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Resolve the out-of-sequence conflicts for a job (Since 1.2.0)",
        "operationId": "resolveOOSConflicts",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveOOSConflictsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OOSConflictsResponse"
                }
              }
            },
            "description": "Successfully resolved conflicts"
          }
        },
        "summary": "Resolve the out-of-sequence conflicts for a job",
        "x-gw-resourceType": "OOSConflicts",
        "x-gw-sinceVersion": "1.2.0"
      }
    },
    "/jobs/{jobId}/override-rating": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Override rating on costs (Since 1.3.0)",
        "operationId": "overrideRatingForJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverrideCostsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverrideCostsResponse"
                }
              }
            },
            "description": "Successfully updated cost override properties"
          }
        },
        "summary": "Override rating on costs",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/payment-info": {
      "get": {
        "description": "Retrieve payment info on a quoted job",
        "operationId": "getPaymentInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInfoResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve payment info on a quoted job",
        "x-gw-resourceType": "PaymentInfo"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "patch": {
        "description": "Update payment info on a quoted job",
        "operationId": "patchPaymentInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInfoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInfoResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update payment info on a quoted job",
        "x-gw-resourceType": "PaymentInfo"
      }
    },
    "/jobs/{jobId}/payment-plans": {
      "get": {
        "description": "Retrieve a list of payment plans available on a quoted job",
        "operationId": "getPaymentPlans",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a list of payment plans available on a quoted job",
        "x-gw-childResourceType": "PaymentPlan",
        "x-gw-resourceType": "PaymentPlans"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ]
    },
    "/jobs/{jobId}/payment-plans/{paymentPlanId}": {
      "get": {
        "description": "Retrieve a payment plan from the set of available payment plans for a job",
        "operationId": "getPaymentPlan",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a payment plan from the set of available payment plans for a job",
        "x-gw-resourceType": "PaymentPlan"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/paymentPlanId"
        }
      ]
    },
    "/jobs/{jobId}/pending-cancel": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Schedule completion of a cancellation (Since 1.1.0)",
        "operationId": "pendingCancelJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingCancelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully scheduled completion for the cancellation"
          }
        },
        "summary": "Schedule completion of a cancellation",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.1.0"
      }
    },
    "/jobs/{jobId}/pending-non-renew": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Schedule non-renew for a renewal (Since 1.1.0)",
        "operationId": "pendingNonRenewJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingNonRenewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully scheduled non-renew for the renewal"
          }
        },
        "summary": "Schedule non-renew for a renewal",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.1.0"
      }
    },
    "/jobs/{jobId}/pending-not-take": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Schedule not-take for a renewal (Since 1.1.0)",
        "operationId": "pendingNotTakeJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully scheduled not-take for the renewal"
          }
        },
        "summary": "Schedule not-take for a renewal",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.1.0"
      }
    },
    "/jobs/{jobId}/pending-renew": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Schedule renew for a renewal (Since 1.1.0)",
        "operationId": "pendingRenewJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingRenewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully scheduled renew for the renewal"
          }
        },
        "summary": "Schedule renew for a renewal",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.1.0"
      }
    },
    "/jobs/{jobId}/preemptions": {
      "get": {
        "description": "Retrieve the preemptions for this job (Since 1.3.0)",
        "operationId": "getJobPreemptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPreemptionsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve the preemptions for this job",
        "x-gw-childResourceType": "JobPreemption",
        "x-gw-resourceType": "JobPreemptions",
        "x-gw-sinceVersion": "1.3.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ]
    },
    "/jobs/{jobId}/prior-policies": {
      "get": {
        "description": "Retrieve the prior policies for a job (Since 1.5.0)",
        "operationId": "getJobPriorPolicies",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriorPolicyList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve the prior policies for a job",
        "x-gw-childResourceType": "PriorPolicy",
        "x-gw-resourceType": "PriorPolicies",
        "x-gw-sinceVersion": "1.5.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new prior policy associated with this job (Since 1.5.0)",
        "operationId": "createJobPriorPolicies",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriorPolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriorPolicyResponse"
                }
              }
            },
            "description": "Return the details for the newly-created prior policy"
          }
        },
        "summary": "Create a new prior policy associated with this job",
        "x-gw-childResourceType": "PriorPolicy",
        "x-gw-resourceType": "PriorPolicies",
        "x-gw-sinceVersion": "1.5.0"
      }
    },
    "/jobs/{jobId}/prior-policies/{priorPolicyId}": {
      "delete": {
        "description": "Delete this prior policy from its job (Since 1.5.0)",
        "operationId": "deleteJobPriorPolicy",
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete this prior policy from its job",
        "x-gw-resourceType": "PriorPolicy",
        "x-gw-sinceVersion": "1.5.0"
      },
      "get": {
        "description": "Retrieve prior policy details on a job (Since 1.5.0)",
        "operationId": "getJobPriorPolicy",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriorPolicyResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve prior policy details on a job",
        "x-gw-resourceType": "PriorPolicy",
        "x-gw-sinceVersion": "1.5.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/priorPolicyId"
        }
      ],
      "patch": {
        "description": "Update prior policy details (Since 1.5.0)",
        "operationId": "patchJobPriorPolicy",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriorPolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriorPolicyResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update prior policy details",
        "x-gw-resourceType": "PriorPolicy",
        "x-gw-sinceVersion": "1.5.0"
      }
    },
    "/jobs/{jobId}/questions": {
      "get": {
        "description": "Retrieve a list of questions on a job",
        "operationId": "getPolicyQuestions",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionAnswersResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a list of questions on a job",
        "x-gw-resourceType": "PolicyQuestions"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "patch": {
        "description": "Update a list of questions on a job",
        "operationId": "patchPolicyQuestions",
        "parameters": [
          {
            "$ref": "#/components/parameters/deferValidation"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionAnswersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionAnswersResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update a list of questions on a job",
        "x-gw-resourceType": "PolicyQuestions"
      }
    },
    "/jobs/{jobId}/quote": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Quote a job",
        "operationId": "quoteJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully quoted the job"
          }
        },
        "summary": "Quote a job",
        "x-gw-resourceType": "Job"
      }
    },
    "/jobs/{jobId}/release-edit-lock": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Release edit lock for a job (Since 1.2.0)",
        "operationId": "releaseEditLockJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseEditLockRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully released edit lock for the job"
          }
        },
        "summary": "Release edit lock for a job",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.2.0"
      }
    },
    "/jobs/{jobId}/request-approval": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Request approval for a job (Since 1.2.0)",
        "operationId": "requestJobApproval",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestApprovalRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully requested approval for the job"
          }
        },
        "summary": "Request approval for a job",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.2.0"
      }
    },
    "/jobs/{jobId}/reschedule": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Reschedule a scheduled cancellation (Since 1.1.0)",
        "operationId": "resheduleJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RescheduleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully rescheduled the cancellation"
          }
        },
        "summary": "Reschedule a scheduled cancellation",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.1.0"
      }
    },
    "/jobs/{jobId}/rescind": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Rescind a scheduled cancellation (Since 1.1.0)",
        "operationId": "rescindJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully rescinded the cancellation"
          }
        },
        "summary": "Rescind a scheduled cancellation",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.1.0"
      }
    },
    "/jobs/{jobId}/review-diffs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Compare this job with its based-on (Since 1.4.0)",
        "operationId": "reviewJobDiffs",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewJobDiffResponse"
                }
              }
            },
            "description": "Successfully compared two jobs"
          }
        },
        "summary": "Compare this job with its based-on",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.4.0"
      }
    },
    "/jobs/{jobId}/sync-questions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Sync the questions on a job by recalculating their availability (Since 1.3.0)",
        "operationId": "syncJobQuestions",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionAnswersResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Sync the questions on a job",
        "x-gw-resourceType": "Job",
        "x-gw-sinceVersion": "1.3.0"
      }
    },
    "/jobs/{jobId}/user-roles": {
      "get": {
        "description": "Retrieve the role assignments for a job",
        "operationId": "getJobRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRolesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve the role assignments for a job",
        "x-gw-resourceType": "JobRoles"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "patch": {
        "description": "Update roles on a job",
        "operationId": "patchJobRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobRolesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRolesResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update roles on a job",
        "x-gw-resourceType": "JobRoles"
      }
    },
    "/jobs/{jobId}/user-roles/assign": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Assign a user role on a job",
        "operationId": "assignJobRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignJobRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRolesResponse"
                }
              }
            },
            "description": "Successfully assigned a user role"
          }
        },
        "summary": "Assign a user role on a job",
        "x-gw-resourceType": "JobRoles"
      }
    },
    "/jobs/{jobId}/uw-issues": {
      "get": {
        "description": "Retrieve the underwriting issues for a job (Since 1.2.0)",
        "operationId": "getJobUnderwritingIssues",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UWIssueList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve the underwriting issues for a job",
        "x-gw-childResourceType": "UWIssue",
        "x-gw-resourceType": "UWIssues",
        "x-gw-sinceVersion": "1.2.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new underwriting issue on a job (Since 1.2.0)",
        "operationId": "createUnderwritingIssue",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UWIssueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UWIssueResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a new underwriting issue on a job",
        "x-gw-childResourceType": "UWIssue",
        "x-gw-resourceType": "UWIssues",
        "x-gw-sinceVersion": "1.2.0"
      }
    },
    "/jobs/{jobId}/uw-issues/{uwIssueId}": {
      "get": {
        "description": "Retrieve the specified underwriting issue (Since 1.2.0)",
        "operationId": "getJobUnderwritingIssue",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UWIssueResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve the specified underwriting issue",
        "x-gw-resourceType": "UWIssue",
        "x-gw-sinceVersion": "1.2.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/uwIssueId"
        }
      ]
    },
    "/jobs/{jobId}/uw-issues/{uwIssueId}/approve": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/uwIssueId"
        }
      ],
      "post": {
        "description": "Approve the specified underwriting issue (Since 1.2.0)",
        "operationId": "approveJobUnderwritingIssue",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UWIssueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UWIssueResponse"
                }
              }
            },
            "description": "Successfully approved the underwriting issue"
          }
        },
        "summary": "Approve the specified underwriting issue",
        "x-gw-resourceType": "UWIssue",
        "x-gw-sinceVersion": "1.2.0"
      }
    },
    "/jobs/{jobId}/uw-issues/{uwIssueId}/history": {
      "get": {
        "description": "Retrieve the specified underwriting issue's history (Since 1.2.0)",
        "operationId": "getJobUnderwritingIssueHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UWIssueHistoryList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve the specified underwriting issue's history",
        "x-gw-childResourceType": "UWIssueHistory",
        "x-gw-resourceType": "UWIssueHistories",
        "x-gw-sinceVersion": "1.2.0"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/uwIssueId"
        }
      ]
    },
    "/jobs/{jobId}/uw-issues/{uwIssueId}/reject": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/uwIssueId"
        }
      ],
      "post": {
        "description": "Reject the specified underwriting issue (Since 1.2.0)",
        "operationId": "rejectJobUnderwritingIssue",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UWIssueResponse"
                }
              }
            },
            "description": "Successfully rejected the underwriting issue"
          }
        },
        "summary": "Reject the specified underwriting issue",
        "x-gw-resourceType": "UWIssue",
        "x-gw-sinceVersion": "1.2.0"
      }
    },
    "/jobs/{jobId}/uw-issues/{uwIssueId}/reopen": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/uwIssueId"
        }
      ],
      "post": {
        "description": "Reopen the specified underwriting issue (Since 1.2.0)",
        "operationId": "reopenJobUnderwritingIssue",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UWIssueResponse"
                }
              }
            },
            "description": "Successfully reopened the underwriting issue"
          }
        },
        "summary": "Reopen the specified underwriting issue",
        "x-gw-resourceType": "UWIssue",
        "x-gw-sinceVersion": "1.2.0"
      }
    },
    "/jobs/{jobId}/uw-issues/{uwIssueId}/special-approve": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/uwIssueId"
        }
      ],
      "post": {
        "description": "Approve the specified underwriting issue using special permission (Since 1.2.0)",
        "operationId": "specialApproveJobUnderwritingIssue",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UWIssueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UWIssueResponse"
                }
              }
            },
            "description": "Successfully approved the underwriting issue using special permission"
          }
        },
        "summary": "Approve the specified underwriting issue using special permission",
        "x-gw-resourceType": "UWIssue",
        "x-gw-sinceVersion": "1.2.0"
      }
    },
    "/jobs/{jobId}/versions": {
      "get": {
        "description": "Retrieve a list of versions of a job",
        "operationId": "getJobVersions",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobVersionList"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a list of versions of a job",
        "x-gw-childResourceType": "JobVersion",
        "x-gw-resourceType": "JobVersions"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Create a new version of a job",
        "operationId": "createJobVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobVersionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobVersionResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a new version of a job",
        "x-gw-childResourceType": "JobVersion",
        "x-gw-resourceType": "JobVersions"
      }
    },
    "/jobs/{jobId}/versions/{versionId}": {
      "delete": {
        "description": "Delete this version from its job",
        "operationId": "deleteJobVersion",
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete this version from its job",
        "x-gw-resourceType": "JobVersion"
      },
      "get": {
        "description": "Retrieve a version of a job",
        "operationId": "getJobVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/asOfDate"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobVersionResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve a version of a job",
        "x-gw-resourceType": "JobVersion"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        },
        {
          "$ref": "#/components/parameters/versionId"
        }
      ],
      "patch": {
        "description": "Update a version of a job",
        "operationId": "patchJobVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobVersionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobVersionResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update a version of a job",
        "x-gw-resourceType": "JobVersion"
      }
    },
    "/jobs/{jobId}/withdraw": {
      "parameters": [
        {
          "$ref": "#/components/parameters/jobId"
        }
      ],
      "post": {
        "description": "Withdraw a job",
        "operationId": "withdrawJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/jobVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successfully withdrew the job"
          }
        },
        "summary": "Withdraw a job",
        "x-gw-resourceType": "Job"
      }
    },
    "/openapi.json": {
      "get": {
        "description": "Return the Open API 3.0 representation of the schema",
        "operationId": "getJobApiOpenApiSchema",
        "parameters": [
          {
            "description": "The product code to fetch the schema for",
            "in": "query",
            "name": "product",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/enablePolymorphism"
          },
          {
            "$ref": "#/components/parameters/filterByUser"
          },
          {
            "$ref": "#/components/parameters/omitInclusions"
          },
          {
            "$ref": "#/components/parameters/prettyPrintSchema"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Return the Open API 3.0 representation of the schema",
        "x-gw-resourceType": "JobApiOpenApiSchema"
      }
    },
    "/recover-new-jobs": {
      "post": {
        "description": "Recover new jobs for an account holder that has never completed a policy. No results will be returned if the job was created earlier than the default expiration threshold, if multiple accounts match the recovery input fields, if the account already has a bound policy, or if the account holder already has a way to authenticate. (Since 1.6.0)",
        "operationId": "recoverNewJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverNewJobsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobList"
                }
              }
            },
            "description": "Return a list of jobs belonging to the reauthorized account holder. No results will be returned if the job was created earlier than the default expiration threshold, if multiple accounts match the given search criteria, if the account already had a completed policy, or if the account holder already has a way to authenticate."
          }
        },
        "summary": "Recover new jobs for an unauthenticated account holder returning to complete their first policy",
        "x-gw-childResourceType": "Job",
        "x-gw-resourceType": "RecoverNewJobs",
        "x-gw-sinceVersion": "1.6.0"
      }
    },
    "/search/jobs": {
      "post": {
        "description": "Search for jobs that match the specified criteria",
        "operationId": "searchJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSearchResultList"
                }
              }
            },
            "description": "Return a list of jobs that match the search criteria"
          }
        },
        "summary": "Search for jobs that match the specified criteria",
        "x-gw-childResourceType": "JobSearchResult",
        "x-gw-resourceType": "JobSearch"
      }
    },
    "/submissions": {
      "post": {
        "description": "Create a new draft submission",
        "operationId": "createSubmission",
        "parameters": [
          {
            "$ref": "#/components/parameters/createDefaultCoverages"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubmissionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a new draft submission",
        "x-gw-childResourceType": "Job",
        "x-gw-resourceType": "Submissions"
      }
    },
    "/swagger.json": {
      "get": {
        "description": "Returns a Swagger 2.0 schema for this API as json",
        "operationId": "generateDocs",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "summary": "Returns the Swagger schema for this API"
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://pc-dev-gwcpdev.saappian.zeta1-andromeda.guidewire.net:443/rest/job/v1"
    }
  ]
}
