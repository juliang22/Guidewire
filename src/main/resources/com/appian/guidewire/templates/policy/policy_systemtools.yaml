openapi: 3.0.1
info:
  title: System Tools API
  description: APIs for InsuranceSuite system tools
  version: 1.5.0
servers:
- url: http://se-flaine-au-release-iag.iia-appian-poc.poc.gwdemo.com:443/pc/rest/systemtools/v1
security:
- basicAuth: []
paths:
  /batch-processes:
    get:
      summary: Retrieve information about all batch processes
      description: Retrieve information about all batch processes (Since 1.5.0)
      operationId: getBatchProcesses
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: The paginated list of `BatchProcess` elements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchProcessList'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        childResourceType: BatchProcess
        operationType: get-collection
        resourceType: BatchProcesses
  /batch-processes/{batchProcessType}:
    get:
      summary: Retrieve details of a batch process
      description: Retrieves a batch process by its type name. A batch process is
        an automated process that can be run in the background. (Since 1.5.0)
      operationId: getBatchProcess
      parameters:
      - name: batchProcessType
        in: path
        description: The type of the batch process (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: The details of the batch process
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchProcessResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: get-element
        resourceType: BatchProcess
  /batch-processes/{batchProcessType}/start:
    post:
      summary: Starts the batch process
      description: Starts the batch process. If the batch process was already running,
        no new process is started. The response will indicate whether a new process
        was actually started, based on whether the `processId` property is populated.
        (Since 1.5.0)
      operationId: startBatchProcess
      parameters:
      - name: batchProcessType
        in: path
        description: The type of the batch process (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchProcessStartRequest'
        required: false
      responses:
        200:
          description: Returns the batch process details. The new process id is populated
            if the batch process was not already running.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchProcessResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: BatchProcess
      x-codegen-request-body-name: body
  /batch-processes/{batchProcessType}/stop:
    post:
      summary: Stops the batch process
      description: Stops the batch process. If the batch process was not already running,
        this has no effect. The response will indicate whether this call actually
        stopped the batch process, based on the `wasStopped` property. (Since 1.5.0)
      operationId: stopBatchProcess
      parameters:
      - name: batchProcessType
        in: path
        description: The type of the batch process (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Returns the batch process details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchProcessResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: BatchProcess
  /database-consistency-checks:
    get:
      summary: Retrieves a list of consistency check runs
      description: Retrieves a list of consistency check runs (Since 1.5.0)
      operationId: getDatabaseConsistencyChecks
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: The list of consistency check runs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseConsistencyCheckList'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        childResourceType: DatabaseConsistencyCheck
        operationType: get-collection
        resourceType: DatabaseConsistencyChecks
  /database-consistency-checks/{dbccId}:
    get:
      summary: Retrieve details of a consistency check run
      description: Retrieve details of a consistency check run (Since 1.5.0)
      operationId: getDatabaseConsistencyCheck
      parameters:
      - name: dbccId
        in: path
        description: The identifier for the dbcc run (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Details of a consistency check run
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseConsistencyCheckResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: get-element
        resourceType: DatabaseConsistencyCheck
  /database-consistency-checks/{dbccId}/report:
    get:
      summary: Returns the consistency check report in zip file format
      description: Returns the consistency check report in zip file format (Since
        1.5.0)
      operationId: getDatabaseConsistencyReport
      parameters:
      - name: dbccId
        in: path
        description: The identifier for the dbcc run (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: errorsOnly
        in: query
        description: Whether to include only errors in the consistency check report.
          Defaults to false.
        schema:
          type: boolean
      responses:
        200:
          description: The consistency check report in zip file format
          content: {}
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: get-element
        resourceType: DatabaseConsistencyCheckReport
  /openapi.json:
    get:
      summary: Retrieve the `OpenAPI 3.0` schema for this API
      description: Retrieves the `OpenAPI 3.0` schema for this API
      operationId: getSystemToolsOpenApiSchema
      parameters:
      - name: enablePolymorphism
        in: query
        description: Whether or not to use the `discriminator`/`oneOf` pattern to
          output schemas in cases where the valid set of fields can vary based on
          some attribute of the data such as the country or subtype.  Defaults to
          `true`. See the documentation for more information.
        schema:
          type: boolean
          default: true
      - name: filterByUser
        in: query
        description: Whether or not to filter endpoints and schema properties by the
          authorization of the caller. Defaults to `false`.
        schema:
          type: boolean
          default: false
      - name: omitInclusions
        in: query
        description: Whether or not to omit the `included` properties on request and
          response schemas.  Defaults to `false`. See the documentation for more information.
          (Since 1.4.0)
        schema:
          type: boolean
          default: false
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: prettyPrint
        in: query
        description: Whether or not to pretty-print the returned schema, making it
          larger but more human readable.  Defaults to `false`.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: The `OpenAPI 3.0` schema for this API
          content:
            application/json:
              schema:
                type: string
      x-gw-extensions:
        operationType: get-element
        resourceType: SystemToolsOpenApiSchema
  /swagger.json:
    get:
      summary: Returns the Swagger schema for this API
      description: Returns a Swagger 2.0 schema for this API as json
      operationId: generateDocs
      responses:
        200:
          description: Successful operation
          content: {}
      x-gw-authenticated: false
components:
  schemas:
    BatchProcessData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/BatchProcess'
        links:
          $ref: '#/components/schemas/Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    BatchProcessList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/BatchProcessData'
    BatchProcessResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BatchProcessData'
    BatchProcessStartData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/BatchProcessArguments'
        links:
          $ref: '#/components/schemas/Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    BatchProcessStartRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BatchProcessStartData'
    DataEnvelope:
      title: Data envelope
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/Links'
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        related:
          $ref: '#/components/schemas/RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
      description: Data envelope for requests and responses for individual elements.
        The primary data for the element will be in the `attributes` field.
    DataListEnvelope:
      title: Data list envelope
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
      description: Data envelope for responses for lists of elements. The primary
        list of elements will be in the `data` field.
    DatabaseConsistencyCheckData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/DatabaseConsistencyCheck'
        links:
          $ref: '#/components/schemas/Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    DatabaseConsistencyCheckList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DatabaseConsistencyCheckData'
    DatabaseConsistencyCheckResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DatabaseConsistencyCheckData'
    GenericRelation:
      title: Generic relation
      required:
      - id
      - type
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON
            document
          readOnly: true
          x-gw-extensions:
            defaultViews:
            - none
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a related element
      x-gw-extensions:
        resourceReference: true
    LinkObject:
      title: Linked object
      type: object
      properties:
        href:
          title: HREF
          type: string
          description: The URL of the link
        methods:
          title: Methods
          type: array
          description: An array of HTTP method names that can be used with the link
            URL
          xml:
            wrapped: true
          items:
            type: string
      description: A standard HTTP link
    Links:
      title: Links
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LinkObject'
      description: A set of named links
    MetaObject:
      title: Meta object
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: The checksum of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/Links'
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        related:
          $ref: '#/components/schemas/RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of element
      description: An element
    MonetaryAmount:
      title: Monetary amount
      required:
      - amount
      - currency
      type: object
      properties:
        amount:
          title: Amount
          type: string
          description: The decimal amount
          format: gw-bigdecimal
        currency:
          title: Currency
          type: string
          description: The currency for the amount
          x-gw-type: typekey.Currency
      description: A monetary amount that combines a decimal amount with a currency
    PhoneNumber:
      title: Phone number
      required:
      - countryCode
      - number
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The phone number formatted in a standardized way
          readOnly: true
        extension:
          title: Extension
          type: string
          description: The extension for the phone number
          x-gw-nullable: true
        number:
          title: Number
          type: string
          description: The actual phone number, including area code, but excluding
            the country code and extension
      description: A phone number, with different components of the number broken
        out as separate fields
    RelatedCollection:
      title: Related collection
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements included in the `data` array
        data:
          title: Data
          type: array
          description: The list of references to the related elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SimpleReference'
        total:
          title: Total
          type: integer
          description: The total number of elements in the related set of elements.
            Only present if the `includeTotal` query parameter is used to request
            that the total be calculated for an included collection.
      description: A set of element references that are related to the element in
        some way. Used to link elements with their relations when a request is made
        using the `include` query parameter.
    RelatedCollections:
      title: Related collections
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RelatedCollection'
      description: A set of `RelatedCollection` elements that contain references to
        elements included using the `include` query parameter on a request
    SimpleReference:
      title: Simple reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON
            document (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
            - none
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an element
      x-gw-extensions:
        resourceReference: true
    SpatialPoint:
      title: Spatial point
      required:
      - latitude
      - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          type: string
          description: The latitude of the spatial point
          format: gw-bigdecimal
        longitude:
          title: Longitude
          type: string
          description: The longitude of the spatial point
          format: gw-bigdecimal
      description: An object that combines a latitude with a longitude (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    TypeKeyReference:
      title: TypeKey reference
      required:
      - code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `TypeKey`
        name:
          title: Name
          type: string
          description: The `name` of the `TypeKey`
      description: A reference to a `TypeKey` element that defines an enumerated value
        from a `TypeList`
    BatchProcess:
      title: Batch process
      type: object
      properties:
        distributed:
          title: Distributed
          type: boolean
          description: Flag indicating whether the batch process is distributed
          readOnly: true
        processId:
          title: Process id
          type: integer
          description: Id of the newly created process when a batch process is started.
            This property is only populated when starting a batch process, and not
            when otherwise viewing the details of a batch process.
          format: int64
        status:
          $ref: '#/components/schemas/ProcessStatus'
        type:
          $ref: '#/components/schemas/systemtools_TypeKeyReference'
        wasStopped:
          title: Was stopped
          type: boolean
          description: Flag indicating whether the batch process was successfully
            stopped (a `false` value means the batch process was not already running).
            This property is only populated when stopping a batch process, and not
            when otherwise viewing the details of a batch process.
          readOnly: true
        workQueueStatus:
          $ref: '#/components/schemas/WorkQueueStatus'
      description: A batch process is an automated process that can be run in the
        background. Batch processes can be scheduled to run automatically or can be
        started explicitly via the appropriate API call. (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    BatchProcessArguments:
      title: Batch process arguments
      type: object
      properties:
        dbconsistencycheck:
          $ref: '#/components/schemas/DBConsistencyCheckArguments'
        purgeAsyncApiRequests:
          $ref: '#/components/schemas/PurgeAsyncApiRequestsArguments'
      description: The arguments with which a batch process can be started (Since
        1.5.0)
      x-gw-sinceVersion: 1.5.0
    DBConsistencyCheckArguments:
      title: DBConsistencyCheckArguments
      type: object
      properties:
        checkTypes:
          title: Check types
          type: array
          description: Array of selected codes (from the ConsistencyCheckType typelist)
          xml:
            wrapped: true
          items:
            type: string
        description:
          title: Description
          type: string
          description: A description of this run
        rerunKey:
          title: Rerun key
          type: integer
          description: Key of previous run, if the batch process is a rerun of that
            run
          format: int64
        tableNames:
          title: Table names
          type: array
          description: Array of selected table names
          xml:
            wrapped: true
          items:
            type: string
      description: Arguments for the DBConsistencyCheck batch process (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    DatabaseConsistencyCheck:
      title: Database consistency check
      type: object
      properties:
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: The description of the consistency check run
          readOnly: true
          x-gw-extensions:
            filterable: true
        duration:
          title: Duration
          type: string
          description: Length of time taken by this consistency check run
          format: gw-bigdecimal
          readOnly: true
        endTime:
          title: End time
          type: string
          description: Time at which this consistency check run ended
          format: date-time
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        errors:
          title: Errors
          type: integer
          description: Number of errors encountered by the consistency check run
          readOnly: true
        extensionsSchemaVersion:
          title: Extensions schema version
          type: integer
          description: Datamodel extension version
          readOnly: true
        id:
          title: Id
          type: string
          description: The unique identifier of this consistency check run
          readOnly: true
        key:
          title: Key
          type: integer
          description: Key of this run to be used if it should be rerun
          format: int64
          readOnly: true
        majorSchemaVersion:
          title: Major schema version
          type: integer
          description: Application major schema version
          readOnly: true
        minorSchemaVersion:
          title: Minor schema version
          type: integer
          description: Application minor schema version
          readOnly: true
        platformMajorSchemaVersion:
          title: Platform major schema version
          type: integer
          description: Platform major schema version
          readOnly: true
        platformMinorSchemaVersion:
          title: Platform minor schema version
          type: integer
          description: Platform minor schema version
          readOnly: true
        startTime:
          title: Start time
          type: string
          description: Time at which this consistency check run started
          format: date-time
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        totalChecks:
          title: Total checks
          type: integer
          description: Total number of consistency checks that ran in this run
          readOnly: true
      description: Details of the consistency check run (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    systemtools_GenericRelation:
      title: Generic relation
      required:
      - id
      - type
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON
            document
          readOnly: true
          x-gw-extensions:
            defaultViews:
            - none
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a related element
      xml:
        name: GenericRelation
      x-gw-extensions:
        resourceReference: true
    GroupReference:
      title: Group reference
      type: object
      properties:
        branchCode:
          title: Branch code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The `branchCode` of the group
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the group
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced `Group` within the overall JSON
            document
          readOnly: true
          x-gw-extensions:
            defaultViews:
            - none
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to `Group` element (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        resourceReference: true
    systemtools_LinkObject:
      title: Linked object
      type: object
      properties:
        href:
          title: HREF
          type: string
          description: The URL of the link
        methods:
          title: Methods
          type: array
          description: An array of HTTP method names that can be used with the link
            URL
          xml:
            wrapped: true
          items:
            type: string
      description: A standard HTTP link
      xml:
        name: LinkObject
    systemtools_Links:
      title: Links
      type: object
      additionalProperties:
        $ref: '#/components/schemas/systemtools_LinkObject'
      description: A set of named links
      xml:
        name: Links
    systemtools_MetaObject:
      title: Meta object
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: The checksum of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/systemtools_Links'
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        related:
          $ref: '#/components/schemas/systemtools_RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of element
      description: An element
      xml:
        name: MetaObject
    systemtools_MonetaryAmount:
      title: Monetary amount
      required:
      - amount
      - currency
      type: object
      properties:
        amount:
          title: Amount
          type: string
          description: The decimal amount
          format: gw-bigdecimal
        currency:
          title: Currency
          type: string
          description: The currency for the amount
          x-gw-type: typekey.Currency
      description: A monetary amount that combines a decimal amount with a currency
      xml:
        name: MonetaryAmount
    systemtools_PhoneNumber:
      title: Phone number
      required:
      - countryCode
      - number
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/systemtools_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The phone number formatted in a standardized way
          readOnly: true
        extension:
          title: Extension
          type: string
          description: The extension for the phone number
          x-gw-nullable: true
        number:
          title: Number
          type: string
          description: The actual phone number, including area code, but excluding
            the country code and extension
      description: A phone number, with different components of the number broken
        out as separate fields
      xml:
        name: PhoneNumber
    ProcessStatus:
      title: Process status
      type: object
      properties:
        dateCompleted:
          title: Date completed
          type: string
          description: The date the process finished, if it has in fact finished
          format: date-time
          readOnly: true
        dateCreated:
          title: Date created
          type: string
          description: The date and time that the batch process was last requested
            to start
          format: date-time
          readOnly: true
        failedOps:
          title: Failed operations
          type: integer
          description: The number of failed operations
          readOnly: true
        failureReason:
          title: Failure reason
          type: string
          description: If the process failed to complete, the reason why it failed
          readOnly: true
        opsCompleted:
          title: Operations completed
          type: integer
          description: The number of operations the process completed so far
          readOnly: true
        opsExpected:
          title: Operations expected
          type: integer
          description: The number of operations expected to be completed
          readOnly: true
        progress:
          title: Progress
          type: string
          description: Progress in the form `x of y` where `x` is the amount of work
            completed and `y` is the total amount of work. If `y` is unknown, returns
            just `x`.
          readOnly: true
        serverId:
          title: Server ID
          type: string
          description: Server that ran (or is running) this batch process
          readOnly: true
        startDate:
          title: Start date
          type: string
          description: The date and time that the batch process was last started
          format: date-time
          readOnly: true
        type:
          title: Process type
          type: string
          description: The type of process
          readOnly: true
      description: Contains information about the status of the batch process (Since
        1.5.0)
      x-gw-sinceVersion: 1.5.0
    PurgeAsyncApiRequestsArguments:
      title: PurgeAsyncApiRequestsArguments
      type: object
      properties:
        purgeDaysOld:
          title: Purge days old
          minimum: 1
          type: integer
          description: The number of days to keep async API request rows before they
            can be deleted
      description: Arguments for the PurgeAsyncApiRequests batch process (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    ReferenceTableEntry:
      title: Reference table entry
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The code of the reference table entry
        description:
          title: Description
          type: string
          description: The description of the reference table entry
        id:
          title: ID
          type: string
          description: The unique identifier of this element
      description: A single element from a reference table. Reference tables typically
        represent things like standardized lists of codes.
    systemtools_RelatedCollection:
      title: Related collection
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements included in the `data` array
        data:
          title: Data
          type: array
          description: The list of references to the related elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/systemtools_SimpleReference'
        total:
          title: Total
          type: integer
          description: The total number of elements in the related set of elements.
            Only present if the `includeTotal` query parameter is used to request
            that the total be calculated for an included collection.
      description: A set of element references that are related to the element in
        some way. Used to link elements with their relations when a request is made
        using the `include` query parameter.
      xml:
        name: RelatedCollection
    systemtools_RelatedCollections:
      title: Related collections
      type: object
      additionalProperties:
        $ref: '#/components/schemas/systemtools_RelatedCollection'
      description: A set of `RelatedCollection` elements that contain references to
        elements included using the `include` query parameter on a request
      xml:
        name: RelatedCollections
    systemtools_SimpleReference:
      title: Simple reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON
            document (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
            - none
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an element
      xml:
        name: SimpleReference
      x-gw-extensions:
        resourceReference: true
    systemtools_SpatialPoint:
      title: Spatial point
      required:
      - latitude
      - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          type: string
          description: The latitude of the spatial point
          format: gw-bigdecimal
        longitude:
          title: Longitude
          type: string
          description: The longitude of the spatial point
          format: gw-bigdecimal
      description: An object that combines a latitude with a longitude (Since 1.2.0)
      xml:
        name: SpatialPoint
      x-gw-sinceVersion: 1.2.0
    systemtools_TypeKeyReference:
      title: TypeKey reference
      required:
      - code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `TypeKey`
        name:
          title: Name
          type: string
          description: The `name` of the `TypeKey`
      description: A reference to a `TypeKey` element that defines an enumerated value
        from a `TypeList`
      xml:
        name: TypeKeyReference
    WorkQueueStatus:
      title: Work queue status
      type: object
      properties:
        numActiveExecutors:
          title: Number of active executors
          type: integer
          description: The number of active executors
          readOnly: true
        numActiveWorkItems:
          title: Number of active work items
          type: integer
          description: The number of active work items
          readOnly: true
      description: Contains information about the work queue for a distributed batch
        process (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    ErrorCause:
      title: Error cause
      type: object
      properties:
        message:
          title: Message
          type: string
          description: The exception message
      description: Basic information of an unexpected server exception
    ErrorDetail:
      type: object
      properties:
        message:
          title: Message
          type: string
          description: A message associated with this specific error
        properties:
          title: Properties
          type: object
          properties: {}
          description: Properties of this specific error.  The specific properties
            will depend on the specific type of error.
    ErrorInfo:
      title: Error info
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/ErrorCause'
        details:
          title: Details
          type: array
          description: Additional details of the error. For example, if this overall
            error response was caused by a schema validation failure, the error details
            might represent specific validation errors.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ErrorDetail'
        developerMessage:
          title: Developer message
          type: string
          description: An error message that might be more technical than the `userMessage`
            and is more suitable for use by a developer who built the code that made
            the API call
        stackTrace:
          title: Stack trace
          type: string
          description: The stack trace associated with the error, if this error was
            caused by an internal server error.  Stack traces will not appear if the
            server is set to production mode.
        status:
          title: Status
          type: integer
          description: The HTTP status code associated with the error
        userMessage:
          title: User message
          type: string
          description: An error message suitable for displaying to an end user, such
            as someone using a UI that made the API call
      description: Generic schema that REST error responses follow
  responses:
    AuthenticationError:
      description: 401 error that is returned if the request's user cannot be authenticated
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    BadInput:
      description: 400 error that is returned if the input to this endpoint is not
        valid; this can happen because of missing required parameters, malformed json,
        json that does not validate against the declared schema, etc.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    InternalServerError:
      description: 500 error that is returned if a server-side error prevented this
        request from being processed
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotAcceptable:
      description: 406 error that is returned if the Accept header provided by the
        client does not match any types produced by this endpoint
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotAuthorized:
      description: 403 error that is returned if the authenticated user is not authorized
        to access a given resource
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotFound:
      description: 404 error that is returned if the specified resource does not exist
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    OperationNotSupported:
      description: 405 error that is returned if the specified HTTP verb is not allowed
        on a given resource
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    ServiceUnavailable:
      description: 503 error that is returned if the server's runlevel is not adequate
        to service this request
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    UnsupportedContentType:
      description: 415 error that is returned if the Content-Type of the request is
        not consumable by this endpoint
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
  parameters:
    batchProcessType:
      name: batchProcessType
      in: path
      description: The type of the batch process (Since 1.5.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.5.0
      x-gw-sinceVersion: 1.5.0
    dbccId:
      name: dbccId
      in: path
      description: The identifier for the dbcc run (Since 1.5.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.5.0
      x-gw-sinceVersion: 1.5.0
    enablePolymorphism:
      name: enablePolymorphism
      in: query
      description: Whether or not to use the `discriminator`/`oneOf` pattern to output
        schemas in cases where the valid set of fields can vary based on some attribute
        of the data such as the country or subtype.  Defaults to `true`. See the documentation
        for more information.
      schema:
        type: boolean
        default: true
    fields:
      name: fields
      in: query
      description: Allows the caller to specify the set of fields that should be included
        on the response. This can be used to limit the set of fields returned as well
        as to include optional fields that otherwise wouldn't normally be returned.
        The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
        list>`, where `<field list>` consists of a comma-separated list of field or
        field set names. See the documentation for more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    filter:
      name: filter
      in: query
      description: Filters the list of results based on the specified field, operator,
        and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
        or `filter=<include>:<field>:<operator>:<value>`. See the documentation for
        more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    filterByUser:
      name: filterByUser
      in: query
      description: Whether or not to filter endpoints and schema properties by the
        authorization of the caller. Defaults to `false`.
      schema:
        type: boolean
        default: false
    gwLanguageHeader:
      name: GW-Language
      in: header
      description: If specified, this header will set the language used when processing
        the request
      schema:
        type: string
    gwLocaleHeader:
      name: GW-Locale
      in: header
      description: If specified, this header will set the locale used when processing
        the request
      schema:
        type: string
    gwSchemaProperty:
      name: GW-IncludeSchemaProperty
      in: header
      description: If specified and the operation returns json with a defined schema,
        this will add a property, '$GW-Schema',  with the fully qualified name of
        the object's schema.
      schema:
        type: boolean
    gwTraceability:
      name: X-Correlation-ID
      in: header
      description: 'This header permits a customer to trace a request from its initial
        reception through all of the subsequent applications that were invoked to
        handle that request. The actual traceability id present in the MDC and logs
        (and returned in the response), is dependent on the implementation of TraceabilityIDPlugin.
        The default implementation uses this value, if specified, or a generated UID.  However,
        another implementation may always generate a unique id and just log  the relationship
        between these incoming values and the generated UID. Note: that this header
        can be repeated, but the resulting string will just be the comma separated
        values.'
      schema:
        type: string
    gwTransactionID:
      name: GW-DBTransaction-ID
      in: header
      description: If specified and this operation results in a database commit, this
        header's value must not have been submitted before.  This value must be globally
        unique across all clients, apis and webservices. It is used for those transaction
        that are not idempotent. Unless this is explicitly referenced for an operation
        it is not required.
      required: true
      schema:
        type: string
    gwUnknownPropertyHeader:
      name: GW-UnknownPropertyHandling
      in: header
      description: If specified, this header will drive the behavior for unknown property
        handling
      schema:
        type: string
        enum:
        - log
        - reject
        - ignore
    gwUnknownQueryParameterHeader:
      name: GW-UnknownQueryParamHandling
      in: header
      description: If specified, this header will drive the behavior for unknown query
        parameter handling.  Default is to reject them.
      schema:
        type: string
        enum:
        - log
        - reject
        - ignore
    gwValidateResponseHandling:
      name: GW-ValidateResponseHandling
      in: header
      description: If specified, this header permits the client to override the behavior
        around validating response
      schema:
        type: boolean
    include:
      name: include
      in: query
      description: Used to request that additional resources be returned with the
        API response in the `included` section of the responses. The `include` parameter
        can appear multiple times, and is a comma-separated list of additional resources
        to include. See the documentation for more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    includeTotal:
      name: includeTotal
      in: query
      description: Used to request that results should include a count of the total
        number of results available, which may be more than the total number of results
        currently being returned. This parameter is of the form `includeTotal=<true|false>`
        or `includeTotal=<include>:<true|false>`. If not specified, the default is
        considered to be `false`. See the documentation for more information about
        response pagination.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    omitInclusions:
      name: omitInclusions
      in: query
      description: Whether or not to omit the `included` properties on request and
        response schemas.  Defaults to `false`. See the documentation for more information.
        (Since 1.4.0)
      schema:
        type: boolean
        default: false
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    pageOffset:
      name: pageOffset
      in: query
      description: The offset of the first result to fetch when fetching a paginated
        set of results. The parameter is of the form `pageOffset=<number>` where the
        first result has an offset of 0. For example, `pageOffset=25` will skip the
        first 25 results in sorted order. If not specified, the default value is 0.
        See the documentation for more information about response pagination.
      schema:
        type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    pageSize:
      name: pageSize
      in: query
      description: The maximum number of results to return in the response. The parameter
        is of the form `pageSize=<size>` or `pageSize=<include>:<size>`. The maximum
        allowed `pageSize` and the default `pageSize` both depend on the specific
        API endpoint the request is made to. See the documentation for more information
        about response pagination.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    prettyPrintSchema:
      name: prettyPrint
      in: query
      description: Whether or not to pretty-print the returned schema, making it larger
        but more human readable.  Defaults to `false`.
      schema:
        type: boolean
        default: false
    sort:
      name: sort
      in: query
      description: Controls the sorting of elements within a response. The sort parameter
        is of the form `sort=<fields>` or `sort=<include>:<fields>`, where `<fields>`
        represents a comma-separated list of field names to sort on. Field names can
        be prefixed with `-` to request a descending sort, otherwise the sort will
        be ascending. See the documentation for more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
