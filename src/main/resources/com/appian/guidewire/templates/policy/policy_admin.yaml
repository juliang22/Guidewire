openapi: 3.0.1
info:
  title: Admin API
  description: APIs for InsuranceSuite administration objects
  version: 1.5.0
servers:
- url: http://se-flaine-au-release-iag.iia-appian-poc.poc.gwdemo.com:443/pc/rest/admin/v1
security:
- basicAuth: []
paths:
  /affinity-groups:
    get:
      summary: Retrieve a list of affinity groups
      description: Retrieve a list of affinity groups (Since 1.5.0)
      operationId: getAffinityGroups
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffinityGroupList'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        childResourceType: AffinityGroup
        operationType: get-collection
        resourceType: AffinityGroups
    post:
      summary: Create a new affinity group
      description: Create a new affinity group (Since 1.5.0)
      operationId: createAffinityGroup
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffinityGroupRequest'
        required: true
      responses:
        201:
          description: Return the details for the newly-created affinity group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffinityGroupResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        childResourceType: AffinityGroup
        operationType: post-collection
        resourceType: AffinityGroups
      x-codegen-request-body-name: body
  /affinity-groups/{affinityGroupId}:
    get:
      summary: Retrieve an affinity group
      description: Retrieve an affinity group (Since 1.5.0)
      operationId: getAffinityGroup
      parameters:
      - name: affinityGroupId
        in: path
        description: The identifier for the affinity group (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffinityGroupResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: get-element
        resourceType: AffinityGroup
    patch:
      summary: Update an affinity group
      description: Update an affinity group (Since 1.5.0)
      operationId: patchAffinityGroup
      parameters:
      - name: affinityGroupId
        in: path
        description: The identifier for the affinity group (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffinityGroupRequest'
        required: true
      responses:
        200:
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffinityGroupResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: AffinityGroup
      x-codegen-request-body-name: body
  /affinity-groups/{affinityGroupId}/producer-codes:
    get:
      summary: Retrieve a list of affinity group producer codes
      description: Retrieve a list of affinity group producer codes (Since 1.5.0)
      operationId: getAffinityGroupProducerCodes
      parameters:
      - name: affinityGroupId
        in: path
        description: The identifier for the affinity group (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffinityGroupProducerCodeList'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        childResourceType: AffinityGroupProducerCode
        operationType: get-collection
        resourceType: AffinityGroupProducerCodes
    post:
      summary: Add a new affinity group producer code
      description: Add a new affinity group producer code (Since 1.5.0)
      operationId: createAffinityGroupProducerCode
      parameters:
      - name: affinityGroupId
        in: path
        description: The identifier for the affinity group (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffinityGroupProducerCodeRequest'
        required: true
      responses:
        201:
          description: Return the details for the newly-added affinity group producer
            code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffinityGroupProducerCodeResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        childResourceType: AffinityGroupProducerCode
        operationType: post-collection
        resourceType: AffinityGroupProducerCodes
      x-codegen-request-body-name: body
  /affinity-groups/{affinityGroupId}/producer-codes/{producerCodeId}:
    get:
      summary: Retrieve an affinity group producer code
      description: Retrieve an affinity group producer code (Since 1.5.0)
      operationId: getAffinityGroupProducerCode
      parameters:
      - name: producerCodeId
        in: path
        description: The identifier for the producer code (Since 1.2.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.2.0
        x-gw-sinceVersion: 1.2.0
      - name: affinityGroupId
        in: path
        description: The identifier for the affinity group (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffinityGroupProducerCodeResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: get-element
        resourceType: AffinityGroupProducerCode
    delete:
      summary: Delete an affinity group producer code
      description: Delete an affinity group producer code (Since 1.5.0)
      operationId: deleteAffinityGroupProducerCode
      parameters:
      - name: producerCodeId
        in: path
        description: The identifier for the producer code (Since 1.2.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.2.0
        x-gw-sinceVersion: 1.2.0
      - name: affinityGroupId
        in: path
        description: The identifier for the affinity group (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      responses:
        204:
          description: Successfully deleted an affinity group producer code
          content: {}
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: AffinityGroupProducerCode
  /batch:
    post:
      summary: Issue multiple requests at once as a non-transactional batch
      description: Post a list of subrequests to make against this endpoint. Subrequests
        will be executed serially, in the order they are specified in the "requests"
        property of the input. Responses to each subrequest will then be batched up
        and returned all together. Subrequests inherit the headers from the main request,
        with the exception of the GW-Checksum header, but headers can be specified
        on the subrequest and will override any headers from the main request.
      operationId: batchRequest
      parameters:
      - name: includeResponseHeaders
        in: query
        description: Controls what response headers, if any, are included for subresponses.
          If unspecified, or set to the value "*all", all headers for subresponses
          will be returned. If set to the value "*none", no headers for subresponses
          will be returned. Otherwise, this parameter can consist of a comma-separated
          list of the names of headers that should be included on subresponses.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The body of the batch request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        200:
          description: The batch request itself was well-formed; individual subrequests
            may have succeeded or failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponse'
      x-codegen-request-body-name: body
  /groups:
    get:
      summary: Retrieve a list of groups
      description: Retrieve a list of groups (Since 1.4.0)
      operationId: getGroups
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successfully returned a list of groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: Group
        operationType: get-collection
        resourceType: Groups
    post:
      summary: Create a new group
      description: Create a new group (Since 1.5.0)
      operationId: createGroup
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      responses:
        201:
          description: Successfully created the group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        childResourceType: Group
        operationType: post-collection
        resourceType: Groups
      x-codegen-request-body-name: body
  /groups/{groupId}:
    get:
      summary: Returns details for a single group
      description: Returns details for a single group (Since 1.4.0)
      operationId: getGroup
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successfully returned details for a single group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: Group
    delete:
      summary: Delete a group
      description: Delete a group (Since 1.5.0)
      operationId: deleteGroup
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      responses:
        204:
          description: Successful deletion
          content: {}
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: Group
    patch:
      summary: Update the details of a group
      description: Update the details of a group (Since 1.5.0)
      operationId: patchGroup
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      responses:
        200:
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: Group
      x-codegen-request-body-name: body
  /groups/{groupId}/producer-codes:
    get:
      summary: Retrieve the producer codes associated with the given group
      description: Retrieve the producer codes associated with the given group (Since
        1.5.0)
      operationId: getGroupProducerCodes
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProducerCodeList'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        childResourceType: GroupProducerCode
        operationType: get-collection
        resourceType: GroupProducerCodes
    post:
      summary: Add a producer code to the given group
      description: Add a producer code to the given group (Since 1.5.0)
      operationId: createGroupProducerCode
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupProducerCodeRequest'
        required: true
      responses:
        201:
          description: Return the details of newly added group producer code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProducerCodeResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        childResourceType: GroupProducerCode
        operationType: post-collection
        resourceType: GroupProducerCodes
      x-codegen-request-body-name: body
  /groups/{groupId}/producer-codes/{producerCodeId}:
    get:
      summary: Retrieve details of a producer code in the given group
      description: Retrieve details of a producer code in the given group (Since 1.5.0)
      operationId: getGroupProducerCode
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: producerCodeId
        in: path
        description: The identifier for the producer code (Since 1.2.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.2.0
        x-gw-sinceVersion: 1.2.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProducerCodeResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: get-element
        resourceType: GroupProducerCode
    delete:
      summary: Remove a producer code from the given group
      description: Remove a producer code from the given group (Since 1.5.0)
      operationId: deleteGroupProducerCode
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: producerCodeId
        in: path
        description: The identifier for the producer code (Since 1.2.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.2.0
        x-gw-sinceVersion: 1.2.0
      responses:
        204:
          description: Successful removal of the producer code from the given group
          content: {}
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: GroupProducerCode
  /groups/{groupId}/queues:
    get:
      summary: Retrieve the list of assignable queues for the given group
      description: Retrieve the list of assignable queues for the given group (Since
        1.5.0)
      operationId: getQueues
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successfully returned a list of assignable queues for the given
            group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignableQueueList'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        childResourceType: AssignableQueue
        operationType: get-collection
        resourceType: AssignableQueues
    post:
      summary: Create a new assignable queue for the given group
      description: Create a new assignable queue for the given group (Since 1.5.0)
      operationId: createQueue
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignableQueueRequest'
        required: true
      responses:
        201:
          description: Successfully created an assignable queue for the group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignableQueueResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        childResourceType: AssignableQueue
        operationType: post-collection
        resourceType: AssignableQueues
      x-codegen-request-body-name: body
  /groups/{groupId}/queues/{queueId}:
    get:
      summary: Retrieve an assignable queue
      description: Retrieve an assignable queue (Since 1.5.0)
      operationId: getQueue
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: queueId
        in: path
        description: The identifier for the assignableQueue (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successfully returned an assignable queue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignableQueueResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: get-element
        resourceType: AssignableQueue
    delete:
      summary: Delete an assignable queue
      description: Delete an assignable queue (Since 1.5.0)
      operationId: deleteQueue
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: queueId
        in: path
        description: The identifier for the assignableQueue (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      responses:
        204:
          description: Successfully deleted an assignable queue
          content: {}
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: AssignableQueue
    patch:
      summary: Update an assignable queue
      description: Update an assignable queue (Since 1.5.0)
      operationId: patchQueue
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: queueId
        in: path
        description: The identifier for the assignableQueue (Since 1.5.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.5.0
        x-gw-sinceVersion: 1.5.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignableQueueRequest'
        required: true
      responses:
        200:
          description: Successfully updated an assignable queue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignableQueueResponse'
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: AssignableQueue
      x-codegen-request-body-name: body
  /groups/{groupId}/users:
    get:
      summary: Retrieve the users associated with the given group
      description: Retrieve the users associated with the given group (Since 1.4.0)
      operationId: getGroupUsers
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: GroupUser
        operationType: get-collection
        resourceType: GroupUsers
    post:
      summary: Add a user to the given group
      description: Add a user to the given group (Since 1.4.0)
      operationId: createGroupUser
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUserRequest'
        required: true
      responses:
        201:
          description: The newly created details of the user's involvement in the
            given group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: GroupUser
        operationType: post-collection
        resourceType: GroupUsers
      x-codegen-request-body-name: body
  /groups/{groupId}/users/{groupUserId}:
    get:
      summary: Retrieve details of a user's involvement in the given group
      description: Retrieve details of a user's involvement in the given group (Since
        1.4.0)
      operationId: getGroupUser
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: groupUserId
        in: path
        description: The REST identifier for the group user (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: GroupUser
    delete:
      summary: Remove a user from the given group
      description: Remove a user from the given group (Since 1.4.0)
      operationId: deleteGroupUser
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: groupUserId
        in: path
        description: The REST identifier for the group user (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      responses:
        204:
          description: Successful removal of the user from the given group
          content: {}
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: GroupUser
    patch:
      summary: Update the details of a user's involvement in the given group
      description: Update the details of a user's involvement in the given group (Since
        1.4.0)
      operationId: updateGroupUser
      parameters:
      - name: groupId
        in: path
        description: The REST identifier for the group (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: groupUserId
        in: path
        description: The REST identifier for the group user (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUserRequest'
        required: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: GroupUser
      x-codegen-request-body-name: body
  /openapi.json:
    get:
      summary: Return the Open API 3.0 representation of the schema
      description: Return the Open API 3.0 representation of the schema
      operationId: getOpenApiSchema
      parameters:
      - name: enablePolymorphism
        in: query
        description: Whether or not to use the `discriminator`/`oneOf` pattern to
          output schemas in cases where the valid set of fields can vary based on
          some attribute of the data such as the country or subtype.  Defaults to
          `true`. See the documentation for more information.
        schema:
          type: boolean
          default: true
      - name: filterByUser
        in: query
        description: Whether or not to filter endpoints and schema properties by the
          authorization of the caller. Defaults to `false`.
        schema:
          type: boolean
          default: false
      - name: omitInclusions
        in: query
        description: Whether or not to omit the `included` properties on request and
          response schemas.  Defaults to `false`. See the documentation for more information.
          (Since 1.4.0)
        schema:
          type: boolean
          default: false
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: prettyPrint
        in: query
        description: Whether or not to pretty-print the returned schema, making it
          larger but more human readable.  Defaults to `false`.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: string
      x-gw-extensions:
        operationType: get-element
        resourceType: AdminOpenApiSchema
  /organizations:
    get:
      summary: Retrieve a list of Organizations
      description: Retrieve a list of Organizations (Since 1.2.0)
      operationId: getOrganizations
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: Organization
        operationType: get-collection
        resourceType: Organizations
    post:
      summary: Create a new organization
      description: Create a new organization (Since 1.2.0)
      operationId: createOrganization
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
        required: true
      responses:
        201:
          description: Return the details for the newly-created organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: Organization
        operationType: post-collection
        resourceType: Organizations
      x-codegen-request-body-name: body
  /organizations/{organizationId}:
    get:
      summary: Retrieve an Organization
      description: Retrieve an Organization (Since 1.2.0)
      operationId: getOrganization
      parameters:
      - name: organizationId
        in: path
        description: The identifier for the organization (Since 1.2.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.2.0
        x-gw-sinceVersion: 1.2.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: get-element
        resourceType: Organization
    patch:
      summary: Update an organization
      description: Update an organization (Since 1.2.0)
      operationId: patchOrganization
      parameters:
      - name: organizationId
        in: path
        description: The identifier for the organization (Since 1.2.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.2.0
        x-gw-sinceVersion: 1.2.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
        required: true
      responses:
        200:
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: Organization
      x-codegen-request-body-name: body
  /organizations/{organizationId}/producer-codes:
    get:
      summary: Retrieve a list of producer codes associated with this organization
      description: Retrieve a list of producer codes associated with this organization
        (Since 1.2.0)
      operationId: getOrganizationProducerCodes
      parameters:
      - name: organizationId
        in: path
        description: The identifier for the organization (Since 1.2.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.2.0
        x-gw-sinceVersion: 1.2.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProducerCodeList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: ProducerCode
        operationType: get-collection
        resourceType: OrganizationProducerCodes
  /producer-codes:
    get:
      summary: Retrieve a list of ProducerCodes
      description: Retrieve a list of ProducerCodes (Since 1.2.0)
      operationId: getAdminProducerCodes
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducerCodeList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: ProducerCode
        operationType: get-collection
        resourceType: AdminProducerCodes
    post:
      summary: Create a new producer code
      description: Create a new producer code (Since 1.2.0)
      operationId: createProducerCode
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProducerCodeRequest'
        required: true
      responses:
        201:
          description: Return the details for the newly-created producer code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducerCodeResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: ProducerCode
        operationType: post-collection
        resourceType: AdminProducerCodes
      x-codegen-request-body-name: body
  /producer-codes/{producerCodeId}:
    get:
      summary: Retrieve a producer code
      description: Retrieve a producer code (Since 1.2.0)
      operationId: getProducerCode
      parameters:
      - name: producerCodeId
        in: path
        description: The identifier for the producer code (Since 1.2.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.2.0
        x-gw-sinceVersion: 1.2.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducerCodeResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: get-element
        resourceType: ProducerCode
    patch:
      summary: Update a producer code
      description: Update a producer code (Since 1.2.0)
      operationId: patchProducerCode
      parameters:
      - name: producerCodeId
        in: path
        description: The identifier for the producer code (Since 1.2.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.2.0
        x-gw-sinceVersion: 1.2.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProducerCodeRequest'
        required: true
      responses:
        200:
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducerCodeResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: ProducerCode
      x-codegen-request-body-name: body
  /roles:
    get:
      summary: Retrieve a list of roles
      description: Retrieve a list of roles (Since 1.3.0)
      operationId: getRoles
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: Role
        operationType: get-collection
        resourceType: Roles
    post:
      summary: Create a new role
      description: Create a new role (Since 1.4.0)
      operationId: createRole
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
        required: true
      responses:
        201:
          description: Successfully created a role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: Role
        operationType: post-collection
        resourceType: Roles
      x-codegen-request-body-name: body
  /roles/{roleId}:
    get:
      summary: Returns details for a single role
      description: Returns details for a single role (Since 1.4.0)
      operationId: getRole
      parameters:
      - name: roleId
        in: path
        description: The REST identifier for the role (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successfully returned details for a single role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: Role
    delete:
      summary: Delete a role
      description: Delete a role (Since 1.4.0)
      operationId: deleteRole
      parameters:
      - name: roleId
        in: path
        description: The REST identifier for the role (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      responses:
        204:
          description: Successful deletion
          content: {}
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: Role
    patch:
      summary: Update this role's fields
      description: Update this role's fields (Since 1.4.0)
      operationId: updateRole
      parameters:
      - name: roleId
        in: path
        description: The REST identifier for the role (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
        required: true
      responses:
        200:
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: Role
      x-codegen-request-body-name: body
  /roles/{roleId}/permissions:
    get:
      summary: Retrieve a list of role permissions
      description: Retrieve a list of role permissions (Since 1.4.0)
      operationId: getRolePermissions
      parameters:
      - name: roleId
        in: path
        description: The REST identifier for the role (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successfully returned a list of role permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePermissionList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: RolePermission
        operationType: get-collection
        resourceType: RolePermissions
    post:
      summary: Create a new permission on this role
      description: Create a new permission on this role (Since 1.4.0)
      operationId: createRolePermission
      parameters:
      - name: roleId
        in: path
        description: The REST identifier for the role (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePermissionRequest'
        required: true
      responses:
        201:
          description: The details of the newly created role permission`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePermissionResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: RolePermission
        operationType: post-collection
        resourceType: RolePermissions
      x-codegen-request-body-name: body
  /roles/{roleId}/permissions/{permissionId}:
    get:
      summary: The details of a permission on the given role
      description: The details of a permission on the given role (Since 1.4.0)
      operationId: getRolePermission
      parameters:
      - name: roleId
        in: path
        description: The REST identifier for the role (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: permissionId
        in: path
        description: The REST identifier for the role permission (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successfully returned a role permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePermissionResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: RolePermission
    delete:
      summary: Delete the permission on the given role
      description: Delete the permission on the given role (Since 1.4.0)
      operationId: deleteRolePermission
      parameters:
      - name: roleId
        in: path
        description: The REST identifier for the role (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: permissionId
        in: path
        description: The REST identifier for the role permission (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      responses:
        204:
          description: Successful deletion
          content: {}
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: RolePermission
  /swagger.json:
    get:
      summary: Returns the Swagger schema for this API
      description: Returns a Swagger 2.0 schema for this API as json
      operationId: generateDocs
      responses:
        200:
          description: Successful operation
          content: {}
      x-gw-authenticated: false
  /users:
    get:
      summary: Retrieve a list of users
      description: Retrieve a list of users
      operationId: getUsers
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
      x-gw-extensions:
        childResourceType: User
        operationType: get-collection
        resourceType: Users
    post:
      summary: Create a new user
      description: Create a new user
      operationId: createUser
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        201:
          description: The details of the newly-created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      x-gw-extensions:
        childResourceType: User
        operationType: post-collection
        resourceType: Users
      x-codegen-request-body-name: body
  /users/{userId}:
    get:
      summary: Returns details for a single user
      description: Returns details for a single user
      operationId: getUser
      parameters:
      - name: userId
        in: path
        description: The REST identifier for the user
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Returns details for a single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: User
    delete:
      summary: Delete a user
      description: Delete a user (Since 1.5.0)
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        description: The REST identifier for the user
        required: true
        schema:
          type: string
      responses:
        204:
          description: Successful deletion
          content: {}
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: User
    patch:
      summary: Update this user's fields
      description: Update this user's fields
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        description: The REST identifier for the user
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        200:
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: User
      x-codegen-request-body-name: body
  /users/{userId}/producer-codes:
    get:
      summary: Retrieve a list of user producer codes
      description: Retrieve a list of user producer codes (Since 1.4.0)
      operationId: getUserProducerCodes
      parameters:
      - name: userId
        in: path
        description: The REST identifier for the user
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProducerCodeList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: UserProducerCode
        operationType: get-collection
        resourceType: UserProducerCodes
    post:
      summary: Add a new user producer code
      description: Add a new user producer code (Since 1.4.0)
      operationId: createUserProducerCode
      parameters:
      - name: userId
        in: path
        description: The REST identifier for the user
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProducerCodeRequest'
        required: true
      responses:
        201:
          description: Return the details for the newly-added user producer code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProducerCodeResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: UserProducerCode
        operationType: post-collection
        resourceType: UserProducerCodes
      x-codegen-request-body-name: body
  /users/{userId}/producer-codes/{producerCodeId}:
    get:
      summary: Retrieve a user producer code
      description: Retrieve a user producer code (Since 1.4.0)
      operationId: getUserProducerCode
      parameters:
      - name: producerCodeId
        in: path
        description: The identifier for the producer code (Since 1.2.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.2.0
        x-gw-sinceVersion: 1.2.0
      - name: userId
        in: path
        description: The REST identifier for the user
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProducerCodeResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: UserProducerCode
    delete:
      summary: Delete a user producer code
      description: Delete a user producer code (Since 1.4.0)
      operationId: deleteUserProducerCode
      parameters:
      - name: producerCodeId
        in: path
        description: The identifier for the producer code (Since 1.2.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.2.0
        x-gw-sinceVersion: 1.2.0
      - name: userId
        in: path
        description: The REST identifier for the user
        required: true
        schema:
          type: string
      responses:
        204:
          description: Successfully deleted a user producer code
          content: {}
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: UserProducerCode
  /uw-authority-profiles:
    get:
      summary: Retrieve a list of underwriting authority profiles
      description: Retrieve a list of underwriting authority profiles (Since 1.3.0)
      operationId: getUWAuthorityProfiles
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successfully returned a list of underwriting authority profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UWAuthorityProfileList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: UWAuthorityProfile
        operationType: get-collection
        resourceType: UWAuthorityProfiles
    post:
      summary: Create an underwriting authority profile
      description: Create an underwriting authority profile (Since 1.3.0)
      operationId: createUWAuthorityProfile
      parameters:
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UWAuthorityProfileRequest'
        required: true
      responses:
        201:
          description: Successfully created an underwriting authority profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UWAuthorityProfileResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: UWAuthorityProfile
        operationType: post-collection
        resourceType: UWAuthorityProfiles
      x-codegen-request-body-name: body
  /uw-authority-profiles/{uwAuthorityProfileId}:
    get:
      summary: Retrieve an underwriting authority profile
      description: Retrieve an underwriting authority profile (Since 1.3.0)
      operationId: getUWAuthorityProfile
      parameters:
      - name: uwAuthorityProfileId
        in: path
        description: The identifier for the underwriting authority profile (Since
          1.3.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.3.0
        x-gw-sinceVersion: 1.3.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successfully returned an underwriting authority profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UWAuthorityProfileResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: get-element
        resourceType: UWAuthorityProfile
    delete:
      summary: Delete an underwriting authority profile
      description: Delete an underwriting authority profile (Since 1.3.0)
      operationId: deleteUWAuthorityProfile
      parameters:
      - name: uwAuthorityProfileId
        in: path
        description: The identifier for the underwriting authority profile (Since
          1.3.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.3.0
        x-gw-sinceVersion: 1.3.0
      responses:
        204:
          description: Successfully deleted an underwriting authority profile
          content: {}
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: UWAuthorityProfile
    patch:
      summary: Update an underwriting authority profile
      description: Update an underwriting authority profile (Since 1.3.0)
      operationId: patchUWAuthorityProfile
      parameters:
      - name: uwAuthorityProfileId
        in: path
        description: The identifier for the underwriting authority profile (Since
          1.3.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.3.0
        x-gw-sinceVersion: 1.3.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UWAuthorityProfileRequest'
        required: true
      responses:
        200:
          description: Successfully updated an underwriting authority profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UWAuthorityProfileResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: UWAuthorityProfile
      x-codegen-request-body-name: body
  /uw-authority-profiles/{uwAuthorityProfileId}/grants:
    get:
      summary: Get the collection of grants for the given authority profile
      description: Get the collection of grants for the given authority profile (Since
        1.4.0)
      operationId: getGrants
      parameters:
      - name: uwAuthorityProfileId
        in: path
        description: The identifier for the underwriting authority profile (Since
          1.3.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.3.0
        x-gw-sinceVersion: 1.3.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageOffset
        in: query
        description: The offset of the first result to fetch when fetching a paginated
          set of results. The parameter is of the form `pageOffset=<number>` where
          the first result has an offset of 0. For example, `pageOffset=25` will skip
          the first 25 results in sorted order. If not specified, the default value
          is 0. See the documentation for more information about response pagination.
        schema:
          type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successfully returned a list of grants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UWAuthorityGrantList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: UWAuthorityGrant
        operationType: get-collection
        resourceType: UWAuthorityGrants
    post:
      summary: Create a new grant for the given authority profile
      description: Create a new grant for the given authority profile (Since 1.4.0)
      operationId: createGrant
      parameters:
      - name: uwAuthorityProfileId
        in: path
        description: The identifier for the underwriting authority profile (Since
          1.3.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.3.0
        x-gw-sinceVersion: 1.3.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UWAuthorityGrantRequest'
        required: true
      responses:
        201:
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UWAuthorityGrantResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: UWAuthorityGrant
        operationType: post-collection
        resourceType: UWAuthorityGrants
      x-codegen-request-body-name: body
  /uw-authority-profiles/{uwAuthorityProfileId}/grants/{grantId}:
    get:
      summary: Retrieve a grant
      description: Retrieve a grant (Since 1.4.0)
      operationId: getGrant
      parameters:
      - name: uwAuthorityProfileId
        in: path
        description: The identifier for the underwriting authority profile (Since
          1.3.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.3.0
        x-gw-sinceVersion: 1.3.0
      - name: grantId
        in: path
        description: The identifier for the grant (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: filter
        in: query
        description: Filters the list of results based on the specified field, operator,
          and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
          or `filter=<include>:<field>:<operator>:<value>`. See the documentation
          for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: include
        in: query
        description: Used to request that additional resources be returned with the
          API response in the `included` section of the responses. The `include` parameter
          can appear multiple times, and is a comma-separated list of additional resources
          to include. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeTotal
        in: query
        description: Used to request that results should include a count of the total
          number of results available, which may be more than the total number of
          results currently being returned. This parameter is of the form `includeTotal=<true|false>`
          or `includeTotal=<include>:<true|false>`. If not specified, the default
          is considered to be `false`. See the documentation for more information
          about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: pageSize
        in: query
        description: The maximum number of results to return in the response. The
          parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`.
          The maximum allowed `pageSize` and the default `pageSize` both depend on
          the specific API endpoint the request is made to. See the documentation
          for more information about response pagination.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      - name: sort
        in: query
        description: Controls the sorting of elements within a response. The sort
          parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
          `<fields>` represents a comma-separated list of field names to sort on.
          Field names can be prefixed with `-` to request a descending sort, otherwise
          the sort will be ascending. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      responses:
        200:
          description: Successfully returned a grant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UWAuthorityGrantResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: UWAuthorityGrant
    delete:
      summary: Delete a grant
      description: Delete a grant (Since 1.4.0)
      operationId: deleteGrant
      parameters:
      - name: uwAuthorityProfileId
        in: path
        description: The identifier for the underwriting authority profile (Since
          1.3.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.3.0
        x-gw-sinceVersion: 1.3.0
      - name: grantId
        in: path
        description: The identifier for the grant (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      responses:
        204:
          description: Successfully deleted a grant
          content: {}
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: UWAuthorityGrant
    patch:
      summary: Update a grant
      description: Update a grant (Since 1.4.0)
      operationId: patchGrant
      parameters:
      - name: uwAuthorityProfileId
        in: path
        description: The identifier for the underwriting authority profile (Since
          1.3.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.3.0
        x-gw-sinceVersion: 1.3.0
      - name: grantId
        in: path
        description: The identifier for the grant (Since 1.4.0)
        required: true
        schema:
          type: string
          x-gw-sinceVersion: 1.4.0
        x-gw-sinceVersion: 1.4.0
      - name: fields
        in: query
        description: Allows the caller to specify the set of fields that should be
          included on the response. This can be used to limit the set of fields returned
          as well as to include optional fields that otherwise wouldn't normally be
          returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
          list>`, where `<field list>` consists of a comma-separated list of field
          or field set names. See the documentation for more information.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          x-gw-extensions:
            allowForCompositeApi: true
        x-gw-extensions:
          allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UWAuthorityGrantRequest'
        required: true
      responses:
        200:
          description: Successfully updated a grant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UWAuthorityGrantResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: UWAuthorityGrant
      x-codegen-request-body-name: body
components:
  schemas:
    AdminInclusions:
      type: object
      properties:
        ProducerCode:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ProducerCodeData'
        RolePermission:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/RolePermissionData'
        UWAuthorityGrant:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UWAuthorityGrantData'
        UserProducerCode:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UserProducerCodeData'
    AffinityGroupData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/AffinityGroup'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    AffinityGroupInclusions:
      type: object
      properties:
        AffinityGroupProducerCode:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AffinityGroupProducerCodeData'
    AffinityGroupList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AffinityGroupData'
        included:
          $ref: '#/components/schemas/AffinityGroupInclusions'
    AffinityGroupProducerCodeData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/AffinityGroupProducerCode'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    AffinityGroupProducerCodeList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AffinityGroupProducerCodeData'
    AffinityGroupProducerCodeRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AffinityGroupProducerCodeData'
    AffinityGroupProducerCodeResponse:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AffinityGroupProducerCodeData'
    AffinityGroupRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AffinityGroupData'
        included:
          $ref: '#/components/schemas/AffinityGroupInclusions'
    AffinityGroupResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AffinityGroupData'
        included:
          $ref: '#/components/schemas/AffinityGroupInclusions'
    AssignableQueueData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/AssignableQueue'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    AssignableQueueList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssignableQueueData'
    AssignableQueueRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AssignableQueueData'
    AssignableQueueResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AssignableQueueData'
    DataEnvelope:
      title: Data envelope
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/framework_Links'
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
      description: Data envelope for requests and responses for individual elements.
        The primary data for the element will be in the `attributes` field.
    DataListEnvelope:
      title: Data list envelope
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
      description: Data envelope for responses for lists of elements. The primary
        list of elements will be in the `data` field.
    GroupData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Group'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    GroupList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/GroupData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    GroupProducerCodeData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/GroupProducerCode'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    GroupProducerCodeList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/GroupProducerCodeData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    GroupProducerCodeRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GroupProducerCodeData'
    GroupProducerCodeResponse:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GroupProducerCodeData'
    GroupRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GroupData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    GroupResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GroupData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    GroupUserData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/GroupUser'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    GroupUserList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/GroupUserData'
    GroupUserRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GroupUserData'
    GroupUserResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GroupUserData'
    OrganizationData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Organization'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    OrganizationList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OrganizationData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    OrganizationProducerCodeList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ProducerCodeData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    OrganizationRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrganizationData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    OrganizationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrganizationData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    ProducerCodeData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ProducerCode'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    ProducerCodeList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ProducerCodeData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    ProducerCodeRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProducerCodeData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    ProducerCodeResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProducerCodeData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    RoleData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Role'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    RoleList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/RoleData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    RolePermissionData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/RolePermission'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    RolePermissionList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/RolePermissionData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    RolePermissionRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RolePermissionData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    RolePermissionResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RolePermissionData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    RoleRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RoleData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    RoleResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RoleData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UWAuthorityGrantData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/UWAuthorityGrant'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    UWAuthorityGrantList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UWAuthorityGrantData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UWAuthorityGrantRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UWAuthorityGrantData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UWAuthorityGrantResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UWAuthorityGrantData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UWAuthorityProfileData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/UWAuthorityProfile'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    UWAuthorityProfileList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UWAuthorityProfileData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UWAuthorityProfileRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UWAuthorityProfileData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UWAuthorityProfileResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UWAuthorityProfileData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UserData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/User'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    UserList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UserData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UserProducerCodeData:
      required:
      - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: The HTTP method that should be used for an included element.
            Only applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
          - post
          - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: A checksum for the element that can be used to prevent lost
            updates by detecting that the element has been updated since the caller
            last retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/UserProducerCode'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: Used to assign a temporary identifier to an element created
            using request inclusion. Only applicable to requests. See the documentation
            for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The URI for an included element, representing the parent to
            create the element on if the `method` is `post` or the element to update
            if the `method` is `patch`. Only applicable to requests. See the documentation
            for more information about request inclusion.
    UserProducerCodeList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements currently being returned. This may be
            less than the total number of elements. Pagination links under the `links`
            property can be used to access additional pages of results, if any are
            available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: The total number of elements available, which may be greater
            than the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`. The
            maximum number of elements counted is 1000. If the response value is 1000,
            the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UserProducerCodeData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UserProducerCodeRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserProducerCodeData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UserProducerCodeResponse:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserProducerCodeData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UserRequest:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    UserResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserData'
        included:
          $ref: '#/components/schemas/AdminInclusions'
    Activity:
      title: Activity
      type: object
      properties:
        activityPattern:
          title: Activity pattern
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The code of the `ActivityPattern` used to create this activity
            and set its initial values
          x-gw-extensions:
            createOnly: true
        activityType:
          $ref: '#/components/schemas/TypeKeyReference'
        approvalIssue:
          title: Approval issue
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The reason approval is needed. Only applicable to activities
            with an `activityType` of `approval`.
        approvalRationale:
          title: Approval rationale
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Rationale for approving or rejecting this activity. Only applicable
            to activities with an `activityType` of `approval`.
        approved:
          title: Approved
          type: boolean
          description: This field is `true` if this activity has been approved, `false`
            if this activity has been rejected, and omitted otherwise. Only applicable
            to activities with an `activityType` of `approval`.
          readOnly: true
        assignedByUser:
          $ref: '#/components/schemas/SimpleReference'
        assignedGroup:
          $ref: '#/components/schemas/SimpleReference'
        assignedQueue:
          $ref: '#/components/schemas/SimpleReference'
        assignedUser:
          $ref: '#/components/schemas/SimpleReference'
        assignmentStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        associatedRole:
          $ref: '#/components/schemas/TypeKeyReference'
        closeDate:
          title: Close date
          type: string
          description: The date and time when this activity was completed, skipped,
            approved, or rejected
          format: date-time
          readOnly: true
          x-gw-extensions:
            filterable: true
        closeUser:
          $ref: '#/components/schemas/SimpleReference'
        createTime:
          title: Create time
          type: string
          description: The date and time when this `Activity` was created (Since 1.1.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.1.0
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: The description of this activity
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
            - detail
        dueDate:
          title: Due date
          type: string
          description: Date and time by which a person should complete the activity.
            If not completed by this time, the activity is considered overdue. Not
            applicable to activities that represent events rather than tasks.
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        endDate:
          title: End date
          type: string
          description: Date and time at which the activity is expected to end. Only
            applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        escalated:
          title: Escalated
          type: boolean
          description: A `true` value for this field indicates that the activity has
            been escalated
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        escalationDate:
          title: Escalation date
          type: string
          description: Date and time at which this activity will be escalated if it
            has not yet been completed
          format: date-time
          x-gw-nullable: true
        externallyOwned:
          title: Externally owned
          type: boolean
          description: A `true` value for this field indicates that the activity is
            owned by a user or group outside of the insurer
          x-gw-extensions:
            filterable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this `Activity`
          readOnly: true
        initialAssignment:
          $ref: '#/components/schemas/Assignee'
        mandatory:
          title: Mandatory
          type: boolean
          description: A `true` value for this field indicates that the activity is
            mandatory and cannot be skipped
        priority:
          $ref: '#/components/schemas/TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: A `true` value indicates that this activity is recurring
        startDate:
          title: Start date
          type: string
          description: Date and time at which the activity is scheduled to begin.
            Only applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        status:
          $ref: '#/components/schemas/TypeKeyReference'
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A brief title for the activity
          x-gw-extensions:
            filterable: true
            sortable: true
      description: An `Activity` is an assignable item that represents a task to be
        done, a decision to be made, or information to be aware of
    ActivityPattern:
      title: Activity pattern
      type: object
      properties:
        activityClass:
          $ref: '#/components/schemas/TypeKeyReference'
        activityType:
          $ref: '#/components/schemas/TypeKeyReference'
        category:
          $ref: '#/components/schemas/TypeKeyReference'
        code:
          title: Code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The code that uniquely identifies this `ActivityPattern`
          x-gw-extensions:
            createOnly: true
            sortable: true
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: The default `description` for activities created from this
            activity pattern
        dueDate:
          title: Due date
          type: string
          description: The default `dueDate` for activities created from this activity
            pattern, calculated based on the current date and time
          format: date-time
        escalationDate:
          title: Escalation date
          type: string
          description: The default `escalationDate` for activities created from this
            activity pattern, calculated based on the current date and time
          format: date-time
        id:
          title: ID
          type: string
          description: The unique identifier of this `ActivityPattern`
        mandatory:
          title: Mandatory
          type: boolean
          description: The default `mandatory` value for activities created from this
            activity pattern
        patternLevel:
          $ref: '#/components/schemas/TypeKeyReference'
        priority:
          $ref: '#/components/schemas/TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: The default `recurring` value for activities created from this
            activity pattern
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The default `subject` for activities created from this activity
            pattern
      description: An `ActivityPattern` is a template for an activity, and is used
        to create a new activity and set defaults for some of its fields
    Address:
      title: Address
      type: object
      properties:
        CEDEX:
          title: CEDEX
          maxLength: 2
          type: string
          description: The CEDEX bureau of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine1:
          title: Address line 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The first line of the address
          x-gw-nullable: true
        addressLine1Kanji:
          title: Address line 1 kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The kanji version of the first line of the address. Only applicable
            in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine2:
          title: Address line 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The second line of the address
          x-gw-nullable: true
        addressLine2Kanji:
          title: Address line 2 kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The kanji version of the second line of the address. Only applicable
            in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine3:
          title: Address line 3
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The third line of the address
          x-gw-nullable: true
        addressType:
          $ref: '#/components/schemas/TypeKeyReference'
        area:
          $ref: '#/components/schemas/TypeKeyReference'
        city:
          title: City
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The city of the address
          x-gw-nullable: true
        cityKanji:
          title: City kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The kanji version of the city of the address. Only applicable
            in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        country:
          title: Country
          type: string
          description: The country of the address. The value of the `country` field
            will affect which other fields on the `Address` are applicable.
          x-gw-nullable: true
          x-gw-type: typekey.Country
        county:
          title: County
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The county of the address. Only applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        department:
          $ref: '#/components/schemas/TypeKeyReference'
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The description of the address (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        displayName:
          title: Display name
          type: string
          description: The formatted value of the address represented by this `Address`,
            including all standard fields for the address's country
          readOnly: true
        emirate:
          $ref: '#/components/schemas/TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this `Address`
          readOnly: true
        island:
          $ref: '#/components/schemas/TypeKeyReference'
        oblast:
          $ref: '#/components/schemas/TypeKeyReference'
        parish:
          $ref: '#/components/schemas/TypeKeyReference'
        postalCode:
          title: Postal code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The postal code of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        prefecture:
          $ref: '#/components/schemas/TypeKeyReference'
        province:
          $ref: '#/components/schemas/TypeKeyReference'
        spatialPoint:
          $ref: '#/components/schemas/SpatialPoint'
        state:
          $ref: '#/components/schemas/TypeKeyReference'
        validUntil:
          title: Valid until
          type: string
          description: The date and time that the address is valid until (Since 1.2.0)
          format: date-time
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
      description: An `Address` represents a postal address. The fields available
        on an `Address` will depend upon the `country` value for the `Address`.
      x-gw-extensions:
        discriminatorProperty: country
    AffinityGroup:
      title: Affinity group
      type: object
      properties:
        affinityGroupType:
          $ref: '#/components/schemas/TypeKeyReference'
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Description of the affinity group
          x-gw-nullable: true
        endDate:
          title: End date
          type: string
          description: Affinity group end date
          format: date-time
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        jurisdictions:
          title: Jurisdictions
          type: array
          description: Jurisdictions that this affinity group is available to
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TypeKeyReference'
        name:
          title: Name
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The name of this affinity group
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        nameKanji:
          title: Name kanji
          maxLength: 100
          minLength: 1
          pattern: \S
          type: string
          description: The kanji version of the name of this affinity group
          x-gw-nullable: true
        organization:
          $ref: '#/components/schemas/SimpleReference'
        primaryContactFirstName:
          title: Primary contact first name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: First name of primary contact in this affinity group
          x-gw-nullable: true
        primaryContactLastName:
          title: Primary contact last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: Last name of primary contact in this affinity group
          x-gw-nullable: true
        primaryContactPhone:
          $ref: '#/components/schemas/PhoneNumber'
        products:
          title: Products
          type: array
          description: Products associated with this affinity group
          xml:
            wrapped: true
          items:
            type: string
        startDate:
          title: Start date
          type: string
          description: Affinity group start date
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
      description: Groups and associations eligible for dividends or special rating
        (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    AffinityGroupProducerCode:
      title: Affinity group producer code
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The unique identifier of this affinity group producer code
          readOnly: true
        producerCode:
          $ref: '#/components/schemas/SimpleReference'
      description: An association between an affinity group and a producer code (Since
        1.5.0)
      x-gw-sinceVersion: 1.5.0
    AssignableQueue:
      title: Assignable queue
      type: object
      properties:
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The description of what this queue is for
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The name of this queue
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        subGroupVisible:
          title: Sub group visible
          type: boolean
          description: True if the queue is visible from sub-groups of the group to
            which it belongs
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
      description: A queue to which assignable entities can be assigned (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    Assignee:
      title: Assignee
      type: object
      properties:
        assigneeId:
          title: Assignee ID
          type: string
          description: Unique ID to reference this `Assignee` for includes (Since
            1.4.0)
          readOnly: true
          x-gw-sinceVersion: 1.4.0
        autoAssign:
          title: Auto assign
          type: boolean
          description: Set to `true` to indicate the assignment should be done automatically
            by the system. Cannot be combined with any other fields.
        groupId:
          title: Group ID
          type: string
          description: The ID of the `Group` that the resource should be assigned
            to. If specified without the `userId` field, the `User` within the `Group`
            is selected by assignment rules. If specified along with the `userId`
            field, that specific `User` is assigned the element.
        name:
          title: Name
          type: string
          description: A human-readable name for the type of assignment that this
            `Assignee` represents
          readOnly: true
        queueId:
          title: Queue ID
          type: string
          description: The ID of the `Queue` that the resource should be assigned
            to. Cannot be combined with any other fields.
        role:
          $ref: '#/components/schemas/TypeKeyReference'
        userId:
          title: User ID
          type: string
          description: The ID of the `User` that the resource should be assigned to.
            The `groupId` field must also be specified if the `userId` field is specified,
            and the `User` must be a member of that `Group` and have permission to
            be assigned the element.
      description: An `Assignee` represents the target of an assignment action, such
        as a user/group combination, assignment queue, or automatic rule-based assignment
    ClaimsIntegrated:
      title: Claims integrated
      type: object
      properties:
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
            - none
      description: Claims integrated entity
    CommissionPlan:
      title: Commission plan
      type: object
      properties:
        commissionPlanId:
          title: Commission plan ID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The ID of the commission plan in the linked billing system
          readOnly: true
        currency:
          $ref: '#/components/schemas/TypeKeyReference'
      description: A plan for how commissions are paid, configured for a particular
        producer code (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    Contact:
      title: Contact
      type: object
      properties:
        lastName:
          title: Last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The person's last name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        primaryPhoneType:
          $ref: '#/components/schemas/TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: A formatted representation of the full name for this `Contact',
            including all applicable fields such as `firstName` or `lastName`
          readOnly: true
          x-gw-nullable: true
        companyName:
          title: Company name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the company represented by this `Contact`. Only
            applicable for a `Contact` that represents a company.
          x-gw-extensions:
            entitySubtype: Company
        homePhone:
          $ref: '#/components/schemas/PhoneNumber'
        emailAddress1:
          title: E-mail address 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's primary e-mail address
          x-gw-nullable: true
        externalId:
          title: External ID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A unique identifier assigned by the application for use when
            the `addressBookUID` field is null
          x-gw-extensions:
            filterable: true
        dateOfBirth:
          title: Date of birth
          type: string
          description: The person's date of birth. Only applicable for a `Contact`
            that represents a person.
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            before: now
            entitySubtype: Person
        emailAddress2:
          title: E-mail address 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's secondary e-mail address
          x-gw-nullable: true
        firstName:
          title: First name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The persons's first name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        primaryPhone:
          title: Primary phone
          type: string
          description: The contact's primary phone number, as determined by the type
            of phone number selected in the `primaryPhoneType` field
          readOnly: true
        addressBookUID:
          title: Address book UID
          maxLength: 64
          minLength: 1
          pattern: \S
          type: string
          description: The unique ID of this `Contact` within the contact management
            system. Only applicable if the `Contact` has been linked to a contact
            management system.
          x-gw-nullable: true
        subtype:
          $ref: '#/components/schemas/TypeKeyReference'
        taxId:
          title: Tax ID
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The contact's tax ID
        workPhone:
          $ref: '#/components/schemas/PhoneNumber'
        id:
          title: ID
          type: string
          description: The unique identifier of this `Contact`
          readOnly: true
        primaryAddress:
          $ref: '#/components/schemas/Address'
        primaryLocale:
          $ref: '#/components/schemas/TypeKeyReference'
        cellPhone:
          $ref: '#/components/schemas/PhoneNumber'
        preferred:
          title: Preferred
          type: boolean
          description: A `true` value for this field indicates that the vendor is
            one of the insurer's preferred vendors. Only applicable for a `Contact`
            that represents a vendor.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype:
            - CompanyVendor
            - PersonVendor
        primaryLanguage:
          $ref: '#/components/schemas/TypeKeyReference'
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
            - none
      description: A `Contact` represents a person or company
    Document:
      title: Document
      type: object
      properties:
        account:
          $ref: '#/components/schemas/SimpleReference'
        author:
          title: Author
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the person who created this document
          x-gw-nullable: true
        contingency:
          $ref: '#/components/schemas/SimpleReference'
        dateModified:
          title: Date modified
          type: string
          description: The date and time that this `Document` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of this document
          x-gw-nullable: true
        docUID:
          title: Document UID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The unique identifier for this `Document` in the linked document
            management system. The exact format of the identifier depends upon the
            specifics of the document management system the application is linked
            to.
          x-gw-extensions:
            createOnly: true
            defaultViews:
            - detail
        id:
          title: ID
          type: string
          description: The unique identifier of this `Document`
          readOnly: true
        inbound:
          title: Inbound
          type: boolean
          description: This field indicates whether this document is considered to
            be inbound, outbound, or neither
          x-gw-nullable: true
        job:
          $ref: '#/components/schemas/SimpleReference'
        language:
          $ref: '#/components/schemas/TypeKeyReference'
        mimeType:
          title: MIME type
          maxLength: 80
          minLength: 1
          pattern: \S
          type: string
          description: The MIME type of this document, such as `application/msword`
            for a Microsoft Word document
        name:
          title: Name
          maxLength: 80
          minLength: 1
          pattern: \S
          type: string
          description: The name of this document
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        obsolete:
          title: Obsolete
          type: boolean
          description: Setting this field to `true` indicates that the information
            in this document can no longer be relied upon to be current and relevant.
            This is often used instead of deletion to preserve history.
          x-gw-nullable: true
        policy:
          $ref: '#/components/schemas/SimpleReference'
        recipient:
          title: Recipient
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the intended recipient of this document
          x-gw-nullable: true
        section:
          $ref: '#/components/schemas/TypeKeyReference'
        securityType:
          $ref: '#/components/schemas/TypeKeyReference'
        status:
          $ref: '#/components/schemas/TypeKeyReference'
        type:
          $ref: '#/components/schemas/TypeKeyReference'
      description: A `Document` represents a document within the application, which
        can have additional metadata such as the author of the document or a specific
        security level. The actual contents of the document are generally stored in
        a separate document management system that this application is linked to.
        (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    DocumentContent:
      title: Document content
      type: object
      properties:
        contents:
          title: Contents
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: The contents of this document as a Base64-encoded string
          format: byte
          readOnly: true
        responseMimeType:
          title: Response MIME type
          type: string
          description: The MIME type of this document's contents, such as `application/msword`
            for a Microsoft Word document
          readOnly: true
        url:
          title: URL
          type: string
          description: The URL of this document within the linked document management
            system
          readOnly: true
      description: The contents of a `Document` (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    ExclusiveStateSet:
      title: Exclusive state set
      required:
      - inclusionType
      - states
      type: object
      properties:
        inclusionType:
          title: Inclusion type
          type: string
          description: Whether the set of states is inclusive or exclusive
          enum:
          - exclusive
          - inclusive
        states:
          title: States
          minItems: 1
          type: array
          description: The states that comprise the set
          xml:
            wrapped: true
          items:
            type: string
            x-gw-type: typekey.State
      description: A set of states that can be used either as an inclusive set or
        an exclusive set (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    GenericRelation:
      title: Generic relation
      required:
      - id
      - type
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON
            document
          readOnly: true
          x-gw-extensions:
            defaultViews:
            - none
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a related element
      x-gw-extensions:
        resourceReference: true
    Group:
      title: Group
      type: object
      properties:
        branchCode:
          title: Branch code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The code that identifies an internal carrier group as a branch
            (Since 1.5.0)
          x-gw-sinceVersion: 1.5.0
        description:
          title: Group description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A description of the group (Since 1.5.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.5.0
        displayName:
          title: Display name
          type: string
          description: The formatted name of this group
          readOnly: true
        groupType:
          $ref: '#/components/schemas/TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this group
          readOnly: true
        loadFactor:
          title: Load factor
          type: integer
          description: Percentage value of normal workload to be given to this group.
            This is used for round-robin assignment. (Since 1.5.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            filterable: true
        name:
          title: Name
          maxLength: 100
          minLength: 1
          pattern: \S
          type: string
          description: The name of this group
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        organization:
          $ref: '#/components/schemas/SimpleReference'
        parent:
          $ref: '#/components/schemas/SimpleReference'
        securityZone:
          $ref: '#/components/schemas/SimpleReference'
        supervisor:
          $ref: '#/components/schemas/SimpleReference'
      description: A named group within the system (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    GroupDetail:
      title: Group detail
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The name of the `Group`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Group`
      description: Used to represent a reference to a `Group`
    GroupProducerCode:
      title: Group producer code
      type: object
      properties:
        branch:
          $ref: '#/components/schemas/GroupReference'
        code:
          title: Code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The code assigned to this producer code
          x-gw-extensions:
            filterable: true
            readOnly: true
            sortable: true
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of this producer code
          readOnly: true
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        producerCode:
          $ref: '#/components/schemas/SimpleReference'
        producerStatus:
          $ref: '#/components/schemas/TypeKeyReference'
      description: Details of a producer code that has been associated with a group
        (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    GroupReference:
      title: Group reference
      type: object
      properties:
        branchCode:
          title: Branch code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The `branchCode` of the group
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the group
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced `Group` within the overall JSON
            document
          readOnly: true
          x-gw-extensions:
            defaultViews:
            - none
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to `Group` element (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        resourceReference: true
    GroupUser:
      title: Details about a user's involvement in a group
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        loadFactor:
          title: Load factor
          maximum: 1E+2
          minimum: 0
          type: integer
          description: Percentage value of normal workload to be given to this user
            in this group
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
        loadFactorType:
          $ref: '#/components/schemas/TypeKeyReference'
        manager:
          title: Manager
          type: boolean
          description: Flag indicating whether the user has permission to see activity
            within the group
          x-gw-nullable: false
          x-gw-extensions:
            filterable: true
        member:
          title: Member
          type: boolean
          description: Flag indicating whether the user is a working member of the
            group (for purposes of work assignment, for example), as opposed to simply
            being associated with the group as a manager or other auxiliary person
          x-gw-nullable: false
          x-gw-extensions:
            filterable: true
        user:
          $ref: '#/components/schemas/SimpleReference'
      description: Details about a user's involvement in a group (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    LinkObject:
      title: Linked object
      type: object
      properties:
        href:
          title: HREF
          type: string
          description: The URL of the link
        methods:
          title: Methods
          type: array
          description: An array of HTTP method names that can be used with the link
            URL
          xml:
            wrapped: true
          items:
            type: string
      description: A standard HTTP link
    Links:
      title: Links
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LinkObject'
      description: A set of named links
    MetaObject:
      title: Meta object
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: The checksum of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/Links'
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        related:
          $ref: '#/components/schemas/RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of element
      description: An element
    MonetaryAmount:
      title: Monetary amount
      required:
      - amount
      - currency
      type: object
      properties:
        amount:
          title: Amount
          type: string
          description: The decimal amount
          format: gw-bigdecimal
        currency:
          title: Currency
          type: string
          description: The currency for the amount
          x-gw-type: typekey.Currency
      description: A monetary amount that combines a decimal amount with a currency
    Note:
      title: Note
      type: object
      properties:
        account:
          $ref: '#/components/schemas/SimpleReference'
        author:
          $ref: '#/components/schemas/SimpleReference'
        body:
          title: Body
          maxLength: 65000
          minLength: 1
          pattern: \S
          type: string
          description: The text of this note
          x-gw-extensions:
            defaultViews:
            - detail
            filterable: true
            requiredForCreate: true
        bodySummary:
          title: Body summary
          type: string
          description: A shorter summary of this note's `body` field, more suitable
            for displaying in a list of notes
          readOnly: true
          x-gw-extensions:
            defaultViews:
            - summary
        confidential:
          title: Confidential
          type: boolean
          description: A `true` value for this field indicates that the note contains
            confidential information
        contingency:
          $ref: '#/components/schemas/SimpleReference'
        createdDate:
          title: Created date
          type: string
          description: The date and time that this `Note` was created
          format: date-time
          readOnly: true
        id:
          title: ID
          type: string
          description: Unique identifier of this `Note`
          readOnly: true
        job:
          $ref: '#/components/schemas/SimpleReference'
        policy:
          $ref: '#/components/schemas/SimpleReference'
        securityType:
          $ref: '#/components/schemas/TypeKeyReference'
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The subject of this note
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        topic:
          $ref: '#/components/schemas/TypeKeyReference'
        updateTime:
          title: Update time
          type: string
          description: The date and time when this `Note` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
      description: A `Note` is used to capture any sort of additional text that needs
        to be associated with another business object. A `Note` consists of a `body`
        that contains the actual text of the note, along with other fields the represent
        additional metadata about the note.
    Organization:
      title: Organization
      type: object
      properties:
        carrier:
          title: Carrier
          type: boolean
          description: A `true` value indicates that this organization represents
            the insurer rather than an external organization. Only one `Organization`
            within the system can have this field set to `true`.
          readOnly: true
          x-gw-extensions:
            defaultViews:
            - none
        contact:
          $ref: '#/components/schemas/Contact'
        displayName:
          title: Display name
          type: string
          description: The formatted name of the `Organization`
          readOnly: true
        groupDescription:
          title: Group description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A description of the root group for this organization
          x-gw-nullable: true
        groupLoadFactor:
          title: Group load factor
          type: integer
          description: The percentage of a normal workload given to the root group
            for this organization. Load factors are used for automated assignment.
          x-gw-nullable: true
        groupSecurityZone:
          $ref: '#/components/schemas/SimpleReference'
        groupSupervisor:
          $ref: '#/components/schemas/SimpleReference'
        id:
          title: ID
          type: string
          description: The unique identifier of the `Organization`
        masterAdmin:
          title: Master admin
          type: boolean
          description: A `true` value indicates that this `Organization` has administrator
            powers over all other `Organization` elements in the system
          readOnly: true
          x-gw-extensions:
            defaultViews:
            - none
        name:
          title: Name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the organization
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        producerStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        rootGroup:
          $ref: '#/components/schemas/SimpleReference'
        tier:
          $ref: '#/components/schemas/TypeKeyReference'
        type:
          $ref: '#/components/schemas/TypeKeyReference'
      description: An `Organization` represents an organization that can contain groups
        and users. One `Organization` is used to represent the insurer, while other
        `Organization` elements represent external organizations, such as third-party
        agencies. (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    PhoneNumber:
      title: Phone number
      required:
      - countryCode
      - number
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The phone number formatted in a standardized way
          readOnly: true
        extension:
          title: Extension
          type: string
          description: The extension for the phone number
          x-gw-nullable: true
        number:
          title: Number
          type: string
          description: The actual phone number, including area code, but excluding
            the country code and extension
      description: A phone number, with different components of the number broken
        out as separate fields
    ProducerCode:
      title: Producer code
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        appointmentDate:
          title: Appointment date
          type: string
          description: The date and time when the insurer's relationship with the
            producer began
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
            - detail
        branch:
          $ref: '#/components/schemas/GroupReference'
        code:
          title: Code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The code assigned to this producer code
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        commissionPlans:
          title: Commission plans
          minItems: 1
          type: array
          description: A list of the commission plans available for use with this
            producer code
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CommissionPlan'
          x-gw-extensions:
            defaultViews:
            - detail
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of this producer code
          x-gw-nullable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of this `ProducerCode`
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        organization:
          $ref: '#/components/schemas/SimpleReference'
        parent:
          $ref: '#/components/schemas/SimpleReference'
        preferredUnderwriter:
          $ref: '#/components/schemas/SimpleReference'
        producerStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        roles:
          title: Roles
          minItems: 1
          type: array
          description: A list of references to `Role` elements that define permissions
            granted by this producer code. Users that are configured to use producer
            code security must have permission both via their own roles and via the
            applicable producer code's roles in order to read or write a job or policy.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SimpleReference'
          x-gw-extensions:
            defaultViews:
            - detail
            requiredForCreate: true
        terminationDate:
          title: Termination date
          type: string
          description: The date that the insurer's relationship with this producer
            ended or will be terminated
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
            - detail
      description: A `ProducerCode` represents a specific set of commission options,
        assignment preferences, and permissions granted to a particular producer (Since
        1.2.0)
      x-gw-sinceVersion: 1.2.0
    QueueDetail:
      title: Queue detail
      type: object
      properties:
        displayName:
          title: Display name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The name of the `Queue`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Queue`
      description: Used to represent a reference to a `Queue`
    ReferenceTableEntry:
      title: Reference table entry
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The code of the reference table entry
        description:
          title: Description
          type: string
          description: The description of the reference table entry
        id:
          title: ID
          type: string
          description: The unique identifier of this element
      description: A single element from a reference table. Reference tables typically
        represent things like standardized lists of codes.
    RelatedCollection:
      title: Related collection
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements included in the `data` array
        data:
          title: Data
          type: array
          description: The list of references to the related elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SimpleReference'
        total:
          title: Total
          type: integer
          description: The total number of elements in the related set of elements.
            Only present if the `includeTotal` query parameter is used to request
            that the total be calculated for an included collection.
      description: A set of element references that are related to the element in
        some way. Used to link elements with their relations when a request is made
        using the `include` query parameter.
    RelatedCollections:
      title: Related collections
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RelatedCollection'
      description: A set of `RelatedCollection` elements that contain references to
        elements included using the `include` query parameter on a request
    Role:
      title: Role
      type: object
      properties:
        carrierInternal:
          title: Carrier internal
          type: boolean
          description: A `true` value indicates that the role is applicable to users
            internal to the carrier organization
          x-gw-extensions:
            filterable: true
        description:
          title: Description
          maxLength: 4096
          minLength: 1
          pattern: \S
          type: string
          description: Detailed description of the role
          x-gw-nullable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the role
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of the `Role`
          readOnly: true
        name:
          title: Name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the role
          x-gw-extensions:
            filterable: true
            sortable: true
        roleType:
          $ref: '#/components/schemas/TypeKeyReference'
      description: A named role within the system (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    RolePermission:
      title: Role permission
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        permission:
          $ref: '#/components/schemas/TypeKeyReference'
      description: A RolePermission represents a permission granted to a particular
        role (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    SimpleReference:
      title: Simple reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON
            document (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
            - none
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an element
      x-gw-extensions:
        resourceReference: true
    SpatialPoint:
      title: Spatial point
      required:
      - latitude
      - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          type: string
          description: The latitude of the spatial point
          format: gw-bigdecimal
        longitude:
          title: Longitude
          type: string
          description: The longitude of the spatial point
          format: gw-bigdecimal
      description: An object that combines a latitude with a longitude (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    TypeFilter:
      title: TypeFilter
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeFilter`
        name:
          title: Name
          type: string
          description: The name of this `TypeFilter`
        typeKeys:
          title: TypeKeys
          type: array
          description: The `code` values for the `TypeKeys` that are included by this
            `TypeFilter`
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
            - detail
      description: A `TypeFilter` represents a filtered set of the `TypeKey` values
        from a `TypeList`
    TypeKey:
      title: TypeKey
      type: object
      properties:
        categories:
          title: Categories
          type: array
          description: The categories that this `TypeKey` belongs to. Categories are
            formatted by combining the name of the `TypeList` with the `code` for
            its `TypeKey`, separated by a `.` character.
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
            - none
        code:
          title: Code
          type: string
          description: The code for this `TypeKey`. `TypeKey` codes are unique within
            a `TypeList`.
        description:
          title: Description
          type: string
          description: The longer description of this `TypeKey`
        name:
          title: Name
          type: string
          description: The human-readable name of this `TypeKey`
        priority:
          title: Priority
          type: integer
          description: The order of this `TypeKey` relative to other `TypeKeys` in
            the same `TypeList`. A `TypeKey` with a lower `priority` will appear before
            a `TypeKey` with a higher priority when the values for a `TypeList` are
            presented in sorted order.
        retired:
          title: Retried
          type: boolean
          description: A `true` value for this field indicates that the `TypeKey`
            value should no longer be used. Retired `TypeKey` values are retained
            only for the sake of historical data that may already be using the `TypeKey`.
          x-gw-extensions:
            defaultViews:
            - none
      description: A `TypeKey` represents one of the possible enumerated values of
        a `TypeList`
    TypeKeyReference:
      title: TypeKey reference
      required:
      - code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `TypeKey`
        name:
          title: Name
          type: string
          description: The `name` of the `TypeKey`
      description: A reference to a `TypeKey` element that defines an enumerated value
        from a `TypeList`
    TypeList:
      title: TypeList
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeList`
        name:
          title: Name
          type: string
          description: The name of this `TypeList`
          x-gw-extensions:
            filterable: true
            sortable: true
        typeFilters:
          title: TypeFilters
          type: array
          description: The set of `TypeFilters` available on this `TypeList`. A `TypeFilter`
            represents a filtered subset of the `TypeKeys` in this `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TypeFilter'
          x-gw-extensions:
            defaultViews:
            - detail
        typeKeys:
          title: TypeKeys
          type: array
          description: The list of `TypeKeys` available on this `TypeList`. A `TypeKey`
            represents one of the enumerated values that comprise this `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TypeKey'
          x-gw-extensions:
            defaultViews:
            - detail
      description: A `TypeList` represents a list of enumerated `TypeKey` values
    UWAuthorityGrant:
      title: Underwriting authority grant
      type: object
      properties:
        approveAnyValue:
          title: ApproveAnyValue
          type: boolean
          description: If this property is true, the grant has the authority to approve
            any value for the given underwriting issue type
        comparator:
          $ref: '#/components/schemas/TypeKeyReference'
        decimalValue:
          title: Decimal value
          type: string
          description: The value of the issue as a decimal. Only applicable if `valueType`
            is `decimal`.
          format: gw-bigdecimal
        id:
          title: ID
          type: string
          description: The unique identifier of this underwriting authority grant
          readOnly: true
        integerValue:
          title: Integer value
          type: string
          description: The value of the issue as an integer. Only applicable if `valueType`
            is `integer`.
          format: gw-biginteger
        issueType:
          $ref: '#/components/schemas/UWIssueTypeReference'
        moneyValue:
          $ref: '#/components/schemas/MonetaryAmount'
        stateSetValue:
          $ref: '#/components/schemas/ExclusiveStateSet'
        valueType:
          title: Value type
          type: string
          description: The type of value for this issue type and its approvals. This
            field determines which of the value fields are applicable to this issue.
          readOnly: true
      description: Underwriting authority grant attached to an underwriting authority
        profile (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    UWAuthorityProfile:
      title: Underwriting authority profile
      type: object
      properties:
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A description of this authority profile
          x-gw-nullable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of this authority profile
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this authority profile
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The name of this authority profile
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
      description: Underwriting authority profiles determine the types of underwriting
        issues that can be approved by users who have been assigned the profile (Since
        1.3.0)
      x-gw-sinceVersion: 1.3.0
    UWIssueTypeReference:
      title: Underwriting issue type reference
      type: object
      properties:
        code:
          title: Code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The `code` of the `UWIssueType`
          x-gw-extensions:
            sortable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the `UWIssueType`
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced `UWIssueType` within the overall
            JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
            - none
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a `UWIssueType` that represents a type of underwriting
        issue (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        resourceReference: true
    User:
      title: User
      type: object
      properties:
        active:
          title: Active
          type: boolean
          description: A `true` value indicates that the user is currently active
            and allowed to log in. A `false` value indicates the user has been deactivated
            and cannot currently log in.
          x-gw-extensions:
            securityLevel: internal
        cellPhone:
          $ref: '#/components/schemas/PhoneNumber'
        displayName:
          title: Display name
          type: string
          description: The formatted name of the `User`
          readOnly: true
        employeeNumber:
          title: Employee number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The employee number assigned to the user
          x-gw-nullable: true
          x-gw-extensions:
            securityLevel: internal
        externalUser:
          title: External user
          type: boolean
          description: A `true` value indicates that the user represents a user from
            an external organization, rather than a user from within the insurer's
            organization
          readOnly: true
          x-gw-extensions:
            securityLevel: internal
        firstName:
          title: First name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The first name of the user
          x-gw-nullable: true
        groups:
          title: Groups
          type: array
          description: The groups this user is part of (Since 1.2.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UserGroupReference'
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
            - summary
            - detail
        homePhone:
          $ref: '#/components/schemas/PhoneNumber'
        id:
          title: ID
          type: string
          description: The unique identifier of the `User`
          readOnly: true
        lastName:
          title: Last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The last name of the user
          x-gw-nullable: true
        organization:
          $ref: '#/components/schemas/SimpleReference'
        roles:
          title: Roles
          type: array
          description: The roles assigned to the user (Since 1.3.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UserRoleReference'
          x-gw-sinceVersion: 1.3.0
          x-gw-extensions:
            resourceType: Role
            securityLevel: special
        suffix:
          $ref: '#/components/schemas/TypeKeyReference'
        useOrgAddress:
          title: Use organization address
          type: boolean
          description: A `true` value for this field indicates that the `address`
            of the user's `organization` should be used for this user (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            securityLevel: internal
        useProducerCodeSecurity:
          title: Use producer code security
          type: boolean
          description: A `true` value for this field indicates that this user is subject
            to producer code security. Producer code security restricts access such
            that the user can only access jobs and policies that are written or serviced
            by one of the producer codes this user has been assigned. Note that switching
            the use producer code security flag from `true` to `false` will remove
            all producer codes from the user. (Since 1.2.0)
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            securityLevel: special
        userType:
          $ref: '#/components/schemas/TypeKeyReference'
        username:
          title: Username
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The username for the user
          x-gw-extensions:
            requiredForCreate: true
        uwAuthorityProfiles:
          title: Underwriting authority profiles
          type: array
          description: The underwriting authority profiles assigned to this user (Since
            1.3.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UserAuthorityProfileReference'
          x-gw-sinceVersion: 1.3.0
          x-gw-extensions:
            securityLevel: special
        vacationStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        workPhone:
          $ref: '#/components/schemas/PhoneNumber'
      description: A named user within the system
    UserAuthorityProfileReference:
      title: User authority profile reference
      required:
      - id
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        type:
          title: Type
          type: string
          description: The type of the referenced element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
          readOnly: true
      description: A reference to a `UWAuthorityProfile` that has been assigned to
        a user (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    UserGroupReference:
      title: User group reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON
            document (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
            - none
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a `Group` that the user belongs to (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    UserProducerCode:
      title: User producer code
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The unique identifier of this user producer code
          readOnly: true
        producerCode:
          $ref: '#/components/schemas/SimpleReference'
        roles:
          title: Roles
          type: array
          description: The set of `Roles` that define permissions granted by this
            producer code
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SimpleReference'
      description: The relationship between a user and its producer codes and associated
        roles (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    UserRoleReference:
      title: User role reference
      required:
      - id
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        type:
          title: Type
          type: string
          description: The type of the referenced element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
          readOnly: true
      description: A reference to a `Role` that has been granted to a user (Since
        1.3.0)
      x-gw-sinceVersion: 1.3.0
    BatchRequest:
      title: Batch request
      required:
      - requests
      type: object
      properties:
        requests:
          title: Requests
          type: array
          description: The array of subrequests
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/BatchSubRequest'
      description: The body of a batch request
    BatchResponse:
      title: Batch response
      type: object
      properties:
        responses:
          title: Responses
          type: array
          description: The list of subresponses, appearing in the same order as the
            elements in the `requests` field of the request
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/BatchSubResponse'
      description: The body of a response to a batch request. The `responses` field
        will have one element for every entry in the `requests` field on the request,
        and responses will appear in the same order.
    BatchSubRequest:
      title: Batch subrequest
      required:
      - method
      - path
      type: object
      properties:
        body:
          title: Body
          type: object
          properties: {}
          description: The body of the subrequest
        headers:
          title: Headers
          type: array
          description: Headers that will be included as part of the subrequest. Any
            headers defined using this field will override header values inherited
            from the main request. Any headers present on the main request that are
            not defined in this list will be inherited when the subrequest is made,
            with the exception of the `GW-Checksum` header.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Header'
        method:
          title: Method
          type: string
          description: The HTTP method for the subrequest
          enum:
          - delete
          - head
          - get
          - options
          - patch
          - post
          - put
        onFail:
          title: On fail
          type: string
          description: Controls whether or not subsequent subrequests are processed
            if this subrequest fails. The default behavior is to continue processing
            subrequests. The `abort` option specifies that all subsequent subrequests
            will be skipped.
          enum:
          - abort
          - continue
        path:
          title: Path
          minLength: 1
          pattern: ^/[\S]*$
          type: string
          description: The path for the subrequest. This path is relative to the root
            of the API hosting the batch endpoint. For example, if the batch endpoint
            is `<servlet>/rest/common/v1/batch`, then a path of `/activities` will
            mean a request against `<servlet>/rest/common/v1/activities`. The path
            must start with `/` and cannot contain whitespace.
        query:
          title: Query
          type: string
          description: The query string to use for the subrequest
      description: An individual subrequest within a batch request
    BatchSubResponse:
      title: Batch subresponse
      type: object
      properties:
        body:
          title: Body
          type: object
          properties: {}
          description: The body of the subresponse
        code:
          title: Code
          type: integer
          description: The HTTP status code for the subresponse
        headers:
          title: Headers
          type: array
          description: The headers returned for the subresponse
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Header'
        skipped:
          title: Skipped
          type: boolean
          description: A `true` value indicates that the corresponding subrequest
            was not processed due to a prior failed request that specified the `onFail`
            field with the `abort` option
      description: A subresponse to a batch subrequest
    Header:
      title: Header
      required:
      - name
      - value
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The header name
        value:
          title: Value
          type: string
          description: The header value
      description: An HTTP request or response header
    framework_GenericRelation:
      title: Generic relation
      required:
      - id
      - type
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON
            document
          readOnly: true
          x-gw-extensions:
            defaultViews:
            - none
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a related element
      xml:
        name: GenericRelation
      x-gw-extensions:
        resourceReference: true
    framework_LinkObject:
      title: Linked object
      type: object
      properties:
        href:
          title: HREF
          type: string
          description: The URL of the link
        methods:
          title: Methods
          type: array
          description: An array of HTTP method names that can be used with the link
            URL
          xml:
            wrapped: true
          items:
            type: string
      description: A standard HTTP link
      xml:
        name: LinkObject
    framework_Links:
      title: Links
      type: object
      additionalProperties:
        $ref: '#/components/schemas/framework_LinkObject'
      description: A set of named links
      xml:
        name: Links
    framework_MetaObject:
      title: Meta object
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: The checksum of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/framework_Links'
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of element
      description: An element
      xml:
        name: MetaObject
    framework_MonetaryAmount:
      title: Monetary amount
      required:
      - amount
      - currency
      type: object
      properties:
        amount:
          title: Amount
          type: string
          description: The decimal amount
          format: gw-bigdecimal
        currency:
          title: Currency
          type: string
          description: The currency for the amount
          x-gw-type: typekey.Currency
      description: A monetary amount that combines a decimal amount with a currency
      xml:
        name: MonetaryAmount
    framework_PhoneNumber:
      title: Phone number
      required:
      - countryCode
      - number
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/framework_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The phone number formatted in a standardized way
          readOnly: true
        extension:
          title: Extension
          type: string
          description: The extension for the phone number
          x-gw-nullable: true
        number:
          title: Number
          type: string
          description: The actual phone number, including area code, but excluding
            the country code and extension
      description: A phone number, with different components of the number broken
        out as separate fields
      xml:
        name: PhoneNumber
    framework_RelatedCollection:
      title: Related collection
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements included in the `data` array
        data:
          title: Data
          type: array
          description: The list of references to the related elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/framework_SimpleReference'
        total:
          title: Total
          type: integer
          description: The total number of elements in the related set of elements.
            Only present if the `includeTotal` query parameter is used to request
            that the total be calculated for an included collection.
      description: A set of element references that are related to the element in
        some way. Used to link elements with their relations when a request is made
        using the `include` query parameter.
      xml:
        name: RelatedCollection
    framework_RelatedCollections:
      title: Related collections
      type: object
      additionalProperties:
        $ref: '#/components/schemas/framework_RelatedCollection'
      description: A set of `RelatedCollection` elements that contain references to
        elements included using the `include` query parameter on a request
      xml:
        name: RelatedCollections
    framework_SimpleReference:
      title: Simple reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON
            document (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
            - none
        refid:
          title: Reference ID
          type: string
          description: A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an element
      xml:
        name: SimpleReference
      x-gw-extensions:
        resourceReference: true
    framework_SpatialPoint:
      title: Spatial point
      required:
      - latitude
      - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          type: string
          description: The latitude of the spatial point
          format: gw-bigdecimal
        longitude:
          title: Longitude
          type: string
          description: The longitude of the spatial point
          format: gw-bigdecimal
      description: An object that combines a latitude with a longitude (Since 1.2.0)
      xml:
        name: SpatialPoint
      x-gw-sinceVersion: 1.2.0
    framework_TypeKeyReference:
      title: TypeKey reference
      required:
      - code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `TypeKey`
        name:
          title: Name
          type: string
          description: The `name` of the `TypeKey`
      description: A reference to a `TypeKey` element that defines an enumerated value
        from a `TypeList`
      xml:
        name: TypeKeyReference
    ErrorCause:
      title: Error cause
      type: object
      properties:
        message:
          title: Message
          type: string
          description: The exception message
      description: Basic information of an unexpected server exception
    ErrorDetail:
      type: object
      properties:
        message:
          title: Message
          type: string
          description: A message associated with this specific error
        properties:
          title: Properties
          type: object
          properties: {}
          description: Properties of this specific error.  The specific properties
            will depend on the specific type of error.
    ErrorInfo:
      title: Error info
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/ErrorCause'
        details:
          title: Details
          type: array
          description: Additional details of the error. For example, if this overall
            error response was caused by a schema validation failure, the error details
            might represent specific validation errors.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ErrorDetail'
        developerMessage:
          title: Developer message
          type: string
          description: An error message that might be more technical than the `userMessage`
            and is more suitable for use by a developer who built the code that made
            the API call
        stackTrace:
          title: Stack trace
          type: string
          description: The stack trace associated with the error, if this error was
            caused by an internal server error.  Stack traces will not appear if the
            server is set to production mode.
        status:
          title: Status
          type: integer
          description: The HTTP status code associated with the error
        userMessage:
          title: User message
          type: string
          description: An error message suitable for displaying to an end user, such
            as someone using a UI that made the API call
      description: Generic schema that REST error responses follow
  responses:
    AuthenticationError:
      description: 401 error that is returned if the request's user cannot be authenticated
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    BadInput:
      description: 400 error that is returned if the input to this endpoint is not
        valid; this can happen because of missing required parameters, malformed json,
        json that does not validate against the declared schema, etc.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    InternalServerError:
      description: 500 error that is returned if a server-side error prevented this
        request from being processed
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotAcceptable:
      description: 406 error that is returned if the Accept header provided by the
        client does not match any types produced by this endpoint
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotAuthorized:
      description: 403 error that is returned if the authenticated user is not authorized
        to access a given resource
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotFound:
      description: 404 error that is returned if the specified resource does not exist
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    OperationNotSupported:
      description: 405 error that is returned if the specified HTTP verb is not allowed
        on a given resource
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    ServiceUnavailable:
      description: 503 error that is returned if the server's runlevel is not adequate
        to service this request
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    UnsupportedContentType:
      description: 415 error that is returned if the Content-Type of the request is
        not consumable by this endpoint
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
  parameters:
    affinityGroupId:
      name: affinityGroupId
      in: path
      description: The identifier for the affinity group (Since 1.5.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.5.0
      x-gw-sinceVersion: 1.5.0
    enablePolymorphism:
      name: enablePolymorphism
      in: query
      description: Whether or not to use the `discriminator`/`oneOf` pattern to output
        schemas in cases where the valid set of fields can vary based on some attribute
        of the data such as the country or subtype.  Defaults to `true`. See the documentation
        for more information.
      schema:
        type: boolean
        default: true
    fields:
      name: fields
      in: query
      description: Allows the caller to specify the set of fields that should be included
        on the response. This can be used to limit the set of fields returned as well
        as to include optional fields that otherwise wouldn't normally be returned.
        The parameter is either of the form `fields=<field list>` or `fields=<include>:<field
        list>`, where `<field list>` consists of a comma-separated list of field or
        field set names. See the documentation for more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    filter:
      name: filter
      in: query
      description: Filters the list of results based on the specified field, operator,
        and value. The parameter is either of the form `filter=<field>:<operator>:<value>`
        or `filter=<include>:<field>:<operator>:<value>`. See the documentation for
        more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    filterByUser:
      name: filterByUser
      in: query
      description: Whether or not to filter endpoints and schema properties by the
        authorization of the caller. Defaults to `false`.
      schema:
        type: boolean
        default: false
    grantId:
      name: grantId
      in: path
      description: The identifier for the grant (Since 1.4.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    groupId:
      name: groupId
      in: path
      description: The REST identifier for the group (Since 1.4.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    groupUserId:
      name: groupUserId
      in: path
      description: The REST identifier for the group user (Since 1.4.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    gwLanguageHeader:
      name: GW-Language
      in: header
      description: If specified, this header will set the language used when processing
        the request
      schema:
        type: string
    gwLocaleHeader:
      name: GW-Locale
      in: header
      description: If specified, this header will set the locale used when processing
        the request
      schema:
        type: string
    gwSchemaProperty:
      name: GW-IncludeSchemaProperty
      in: header
      description: If specified and the operation returns json with a defined schema,
        this will add a property, '$GW-Schema',  with the fully qualified name of
        the object's schema.
      schema:
        type: boolean
    gwTraceability:
      name: X-Correlation-ID
      in: header
      description: 'This header permits a customer to trace a request from its initial
        reception through all of the subsequent applications that were invoked to
        handle that request. The actual traceability id present in the MDC and logs
        (and returned in the response), is dependent on the implementation of TraceabilityIDPlugin.
        The default implementation uses this value, if specified, or a generated UID.  However,
        another implementation may always generate a unique id and just log  the relationship
        between these incoming values and the generated UID. Note: that this header
        can be repeated, but the resulting string will just be the comma separated
        values.'
      schema:
        type: string
    gwTransactionID:
      name: GW-DBTransaction-ID
      in: header
      description: If specified and this operation results in a database commit, this
        header's value must not have been submitted before.  This value must be globally
        unique across all clients, apis and webservices. It is used for those transaction
        that are not idempotent. Unless this is explicitly referenced for an operation
        it is not required.
      required: true
      schema:
        type: string
    gwUnknownPropertyHeader:
      name: GW-UnknownPropertyHandling
      in: header
      description: If specified, this header will drive the behavior for unknown property
        handling
      schema:
        type: string
        enum:
        - log
        - reject
        - ignore
    gwUnknownQueryParameterHeader:
      name: GW-UnknownQueryParamHandling
      in: header
      description: If specified, this header will drive the behavior for unknown query
        parameter handling.  Default is to reject them.
      schema:
        type: string
        enum:
        - log
        - reject
        - ignore
    gwValidateResponseHandling:
      name: GW-ValidateResponseHandling
      in: header
      description: If specified, this header permits the client to override the behavior
        around validating response
      schema:
        type: boolean
    include:
      name: include
      in: query
      description: Used to request that additional resources be returned with the
        API response in the `included` section of the responses. The `include` parameter
        can appear multiple times, and is a comma-separated list of additional resources
        to include. See the documentation for more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    includeTotal:
      name: includeTotal
      in: query
      description: Used to request that results should include a count of the total
        number of results available, which may be more than the total number of results
        currently being returned. This parameter is of the form `includeTotal=<true|false>`
        or `includeTotal=<include>:<true|false>`. If not specified, the default is
        considered to be `false`. See the documentation for more information about
        response pagination.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    omitInclusions:
      name: omitInclusions
      in: query
      description: Whether or not to omit the `included` properties on request and
        response schemas.  Defaults to `false`. See the documentation for more information.
        (Since 1.4.0)
      schema:
        type: boolean
        default: false
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    organizationId:
      name: organizationId
      in: path
      description: The identifier for the organization (Since 1.2.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.2.0
      x-gw-sinceVersion: 1.2.0
    pageOffset:
      name: pageOffset
      in: query
      description: The offset of the first result to fetch when fetching a paginated
        set of results. The parameter is of the form `pageOffset=<number>` where the
        first result has an offset of 0. For example, `pageOffset=25` will skip the
        first 25 results in sorted order. If not specified, the default value is 0.
        See the documentation for more information about response pagination.
      schema:
        type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    pageSize:
      name: pageSize
      in: query
      description: The maximum number of results to return in the response. The parameter
        is of the form `pageSize=<size>` or `pageSize=<include>:<size>`. The maximum
        allowed `pageSize` and the default `pageSize` both depend on the specific
        API endpoint the request is made to. See the documentation for more information
        about response pagination.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    permissionId:
      name: permissionId
      in: path
      description: The REST identifier for the role permission (Since 1.4.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    prettyPrintSchema:
      name: prettyPrint
      in: query
      description: Whether or not to pretty-print the returned schema, making it larger
        but more human readable.  Defaults to `false`.
      schema:
        type: boolean
        default: false
    producerCodeId:
      name: producerCodeId
      in: path
      description: The identifier for the producer code (Since 1.2.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.2.0
      x-gw-sinceVersion: 1.2.0
    queueId:
      name: queueId
      in: path
      description: The identifier for the assignableQueue (Since 1.5.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.5.0
      x-gw-sinceVersion: 1.5.0
    roleId:
      name: roleId
      in: path
      description: The REST identifier for the role (Since 1.4.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    sort:
      name: sort
      in: query
      description: Controls the sorting of elements within a response. The sort parameter
        is of the form `sort=<fields>` or `sort=<include>:<fields>`, where `<fields>`
        represents a comma-separated list of field names to sort on. Field names can
        be prefixed with `-` to request a descending sort, otherwise the sort will
        be ascending. See the documentation for more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    userId:
      name: userId
      in: path
      description: The REST identifier for the user
      required: true
      schema:
        type: string
    uwAuthorityProfileId:
      name: uwAuthorityProfileId
      in: path
      description: The identifier for the underwriting authority profile (Since 1.3.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.3.0
      x-gw-sinceVersion: 1.3.0
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
