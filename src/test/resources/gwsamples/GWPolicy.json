{
  "swagger" : "2.0",
  "info" : {
    "title" : "Policy API",
    "description" : "APIs for policy related objects",
    "version" : "1.4.1"
  },
  "host" : "pc-aaaracqpoc-salesdemo.guidewire.galileo-andromeda.guidewire.net:443",
  "basePath" : "/rest/policy/v1",
  "schemes" : [ "https" ],
  "paths" : {
    "/batch" : {
      "post" : {
        "summary" : "Issue multiple requests at once as a non-transactional batch",
        "description" : "Post a list of subrequests to make against this endpoint. Subrequests will be executed serially, in the order they are specified in the \"requests\" property of the input. Responses to each subrequest will then be batched up and returned all together. Subrequests inherit the headers from the main request, with the exception of the GW-Checksum header, but headers can be specified on the subrequest and will override any headers from the main request.",
        "operationId" : "batchRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "includeResponseHeaders",
          "in" : "query",
          "description" : "Controls what response headers, if any, are included for subresponses. If unspecified, or set to the value \"*all\", all headers for subresponses will be returned. If set to the value \"*none\", no headers for subresponses will be returned. Otherwise, this parameter can consist of a comma-separated list of the names of headers that should be included on subresponses.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "The body of the batch request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BatchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The batch request itself was well-formed; individual subrequests may have succeeded or failed",
            "schema" : {
              "$ref" : "#/definitions/BatchResponse"
            }
          }
        }
      }
    },
    "/openapi.json" : {
      "get" : {
        "summary" : "Return the Open API 3.0 representation of the schema",
        "description" : "Return the Open API 3.0 representation of the schema",
        "operationId" : "getOpenApiSchema",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PolicyApiOpenApiSchema"
        },
        "parameters" : [ {
          "name" : "product",
          "in" : "query",
          "description" : "The product code to fetch the schema for",
          "type" : "string"
        }, {
          "$ref" : "#/parameters/enablePolymorphism"
        }, {
          "$ref" : "#/parameters/filterByUser"
        }, {
          "$ref" : "#/parameters/omitInclusions"
        }, {
          "$ref" : "#/parameters/prettyPrintSchema"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/policies" : {
      "get" : {
        "summary" : "Retrieve a list of Policies",
        "description" : "Retrieve a list of Policies",
        "operationId" : "getPolicies",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Policy",
          "operationType" : "get-collection",
          "resourceType" : "Policies"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PolicyList"
            }
          }
        }
      }
    },
    "/policies/{policyId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a policy",
        "description" : "Retrieve a policy",
        "operationId" : "getPolicy",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "Policy"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PolicyResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/activities" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of activities associated with this policy",
        "description" : "Retrieve a list of activities associated with this policy (Since 1.1.0)",
        "operationId" : "getPolicyActivities",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "Activity",
          "operationType" : "get-collection",
          "resourceType" : "PolicyActivities"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of activities",
            "schema" : {
              "$ref" : "#/definitions/ActivityList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new activity associated with this policy",
        "description" : "Create a new activity associated with this policy (Since 1.1.0)",
        "operationId" : "createPolicyActivity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "Activity",
          "operationType" : "post-collection",
          "resourceType" : "PolicyActivities"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Return the details for the newly-created activity",
            "schema" : {
              "$ref" : "#/definitions/ActivityResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/activity-assignees" : {
      "get" : {
        "summary" : "Retrieve the list of suggested people, groups, queues, userRoles, etc. that new activities on this policy can be assigned to",
        "description" : "Retrieve the list of suggested people, groups, queues, userRoles, etc. that new activities on this policy can be assigned to (Since 1.1.0)",
        "operationId" : "getPolicyActivityAssignees",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "Assignee",
          "operationType" : "get-collection",
          "resourceType" : "PolicyActivityAssignees"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/policyId"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of suggested assignees",
            "schema" : {
              "$ref" : "#/definitions/AssigneeList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/activity-patterns" : {
      "get" : {
        "summary" : "Retrieve a list of activity patterns that can be used to create activities on this policy",
        "description" : "Retrieve a list of activity patterns that can be used to create activities on this policy (Since 1.1.0)",
        "operationId" : "getPolicyActivityPatterns",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "ActivityPattern",
          "operationType" : "get-collection",
          "resourceType" : "PolicyActivityPatterns"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/policyId"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of activity patterns",
            "schema" : {
              "$ref" : "#/definitions/ActivityPatternList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/additional-named-insureds" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of additional named insureds on a policy",
        "description" : "Retrieve a list of additional named insureds on a policy (Since 1.4.0)",
        "operationId" : "getAdditionalNamedInsureds",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "AdditionalNamedInsured",
          "operationType" : "get-collection",
          "resourceType" : "AdditionalNamedInsureds"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/AdditionalNamedInsuredList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/additional-named-insureds/{additionalNamedInsuredId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/additionalNamedInsuredId"
      } ],
      "get" : {
        "summary" : "Retrieve the additional named insured on the policy",
        "description" : "Retrieve the additional named insured on the policy (Since 1.4.0)",
        "operationId" : "getAdditionalNamedInsured",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "AdditionalNamedInsured"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/AdditionalNamedInsuredResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/cancel" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Start a new cancellation on a policy",
        "description" : "Start a new cancellation on a policy",
        "operationId" : "startCancellation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Job",
          "operationType" : "custom-action",
          "resourceType" : "Cancellation"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateCancellationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/JobResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/change" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Start a new policy change on a policy",
        "description" : "Start a new policy change on a policy",
        "operationId" : "startPolicyChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Job",
          "operationType" : "custom-action",
          "resourceType" : "PolicyChange"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreatePolicyChangeRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/JobResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/clear-prerenewal-direction" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Clear pre-renewal direction on a policy",
        "description" : "Clear pre-renewal direction on a policy (Since 1.3.0)",
        "operationId" : "clearPreRenewalPolicy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Policy"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully cleared the pre-renewal direction fields on a policy",
            "schema" : {
              "$ref" : "#/definitions/PolicyResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/compare-jobs" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Compare two jobs on the same policy",
        "description" : "Compare two jobs on the same policy (Since 1.4.0)",
        "operationId" : "comparePolicyJobs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Policy"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CompareJobsRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully compared two jobs",
            "schema" : {
              "$ref" : "#/definitions/CompareJobsResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/contacts" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of policy contacts on a policy",
        "description" : "Retrieve a list of policy contacts on a policy",
        "operationId" : "getPolicyContacts",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PolicyContact",
          "operationType" : "get-collection",
          "resourceType" : "PolicyContacts"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PolicyContactList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/contacts/{contactId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contactId"
      } ],
      "get" : {
        "summary" : "Retrieve a policy contact on a policy",
        "description" : "Retrieve a policy contact on a policy",
        "operationId" : "getPolicyContact",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PolicyContact"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PolicyContactResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/contingencies" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve the contingencies associated with this policy",
        "description" : "Retrieve the contingencies associated with this policy (Since 1.3.0)",
        "operationId" : "getPolicyContingencies",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Contingency",
          "operationType" : "get-collection",
          "resourceType" : "Contingencies"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ContingencyList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new contingency associated with this policy",
        "description" : "Create a new contingency associated with this policy (Since 1.3.0)",
        "operationId" : "createPolicyContingency",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Contingency",
          "operationType" : "post-collection",
          "resourceType" : "Contingencies"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContingencyRequest"
          }
        }, {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/ContingencyResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/contingencies/{contingencyId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contingencyId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified contingency",
        "description" : "Retrieve the specified contingency (Since 1.3.0)",
        "operationId" : "getPolicyContingency",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "Contingency"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ContingencyResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/contingencies/{contingencyId}/activities" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contingencyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of activities on this contingency associated with a given policy",
        "description" : "Retrieve a list of activities on this contingency associated with a given policy (Since 1.3.0)",
        "operationId" : "getPolicyContingencyActivities",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Activity",
          "operationType" : "get-collection",
          "resourceType" : "ContingencyActivities"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of activities on this contingency associated with this policy",
            "schema" : {
              "$ref" : "#/definitions/ActivityList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new activity on this contingency associated with this policy",
        "description" : "Create a new activity on this contingency associated with this policy (Since 1.3.0)",
        "operationId" : "createPolicyContingencyActivity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Activity",
          "operationType" : "post-collection",
          "resourceType" : "ContingencyActivities"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created an activity related to this contingency",
            "schema" : {
              "$ref" : "#/definitions/ActivityResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/contingencies/{contingencyId}/documents" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contingencyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of documents on this contingency associated with the given policy",
        "description" : "Retrieve a list of documents on this contingency associated with the given policy (Since 1.3.0)",
        "operationId" : "getPolicyContingencyDocuments",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Document",
          "operationType" : "get-collection",
          "resourceType" : "ContingencyDocuments"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully returns a list of documents on this contingency associated with this policy",
            "schema" : {
              "$ref" : "#/definitions/DocumentList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new document on this contingency associated with this policy",
        "description" : "Create a new document on this contingency associated with this policy (Since 1.3.0)",
        "operationId" : "createPolicyContingencyDocument",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Document",
          "operationType" : "post-collection",
          "resourceType" : "ContingencyDocuments"
        },
        "parameters" : [ {
          "name" : "metadata",
          "in" : "formData",
          "required" : true,
          "type" : "string",
          "x-gw-schema-ref" : "#/definitions/DocumentRequest"
        }, {
          "name" : "content",
          "in" : "formData",
          "type" : "file"
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created document on this contingency",
            "schema" : {
              "$ref" : "#/definitions/DocumentResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/contingencies/{contingencyId}/notes" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contingencyId"
      } ],
      "get" : {
        "summary" : "Notes associated with a given contingency",
        "description" : "Notes associated with a given contingency (Since 1.3.0)",
        "operationId" : "getPolicyContingencyNotes",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Note",
          "operationType" : "get-collection",
          "resourceType" : "ContingencyNotes"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of notes associated with this contingency",
            "schema" : {
              "$ref" : "#/definitions/NoteList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new note on this contingency",
        "description" : "Create a new note on this contingency (Since 1.3.0)",
        "operationId" : "createPolicyContingencyNote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Note",
          "operationType" : "post-collection",
          "resourceType" : "ContingencyNotes"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NoteRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created a note related to this contingency",
            "schema" : {
              "$ref" : "#/definitions/NoteResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/contingencies/{contingencyId}/resolve" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contingencyId"
      } ],
      "post" : {
        "summary" : "Resolve the specified contingency",
        "description" : "Resolve the specified contingency (Since 1.3.0)",
        "operationId" : "resolvePolicyContingency",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Contingency"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully resolved the contingency",
            "schema" : {
              "$ref" : "#/definitions/ContingencyResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/contingencies/{contingencyId}/waive" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contingencyId"
      } ],
      "post" : {
        "summary" : "Waive the specified contingency",
        "description" : "Waive the specified contingency (Since 1.3.0)",
        "operationId" : "waivePolicyContingency",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Contingency"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully waived the contingency",
            "schema" : {
              "$ref" : "#/definitions/ContingencyResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/copy-submission" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Copy the policy's initial submission to create a new submission",
        "description" : "Copy the policy's initial submission to create a new submission (Since 1.2.0)",
        "operationId" : "copySubmission",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "Job",
          "operationType" : "custom-action",
          "resourceType" : "Policy"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully copied submission",
            "schema" : {
              "$ref" : "#/definitions/JobResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/costs" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve costs on a policy",
        "description" : "Retrieve costs on a policy",
        "operationId" : "getPolicyCosts",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Cost",
          "operationType" : "get-collection",
          "resourceType" : "Costs"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CostList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/documents" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of documents on a policy",
        "description" : "Retrieve a list of documents on a policy (Since 1.1.0)",
        "operationId" : "getPolicyDocuments",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "Document",
          "operationType" : "get-collection",
          "resourceType" : "PolicyDocuments"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/DocumentList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new document on a policy",
        "description" : "Create a new document on a policy (Since 1.1.0)",
        "operationId" : "createPolicyDocument",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "Document",
          "operationType" : "post-collection",
          "resourceType" : "PolicyDocuments"
        },
        "parameters" : [ {
          "name" : "metadata",
          "in" : "formData",
          "required" : true,
          "type" : "string",
          "x-gw-schema-ref" : "#/definitions/DocumentRequest"
        }, {
          "name" : "content",
          "in" : "formData",
          "type" : "file"
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created",
            "schema" : {
              "$ref" : "#/definitions/DocumentResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/issue" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Start a new issuance on a policy",
        "description" : "Start a new issuance on a policy (Since 1.1.0)",
        "operationId" : "issuePolicy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "Job",
          "operationType" : "custom-action",
          "resourceType" : "Issuance"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateIssuanceRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/JobResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/jobs" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of jobs associated with this policy.",
        "description" : "Retrieve a list of jobs associated with this policy. (Since 1.4.0)",
        "operationId" : "getPolicyJobs",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "Job",
          "operationType" : "get-collection",
          "resourceType" : "PolicyJobs"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of all jobs associated with this policy.",
            "schema" : {
              "$ref" : "#/definitions/PolicyJobList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of lines on a policy",
        "description" : "Retrieve a list of lines on a policy",
        "operationId" : "getPolicyLines",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PolicyLine",
          "operationType" : "get-collection",
          "resourceType" : "PolicyLines"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PolicyLineList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/AUPersonalMotorLine" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified au personal motor line",
        "description" : "Retrieve the specified au personal motor line",
        "operationId" : "getAUPersonalMotorLine",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "AUPersonalMotorLine"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/AUPersonalMotorLineResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/AUPersonalMotorLine/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of au personal motor line coverages",
        "description" : "Retrieve a list of au personal motor line coverages",
        "operationId" : "getAUPersonalMotorLineCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "AUPersonalMotorLineCoverage",
          "operationType" : "get-collection",
          "resourceType" : "AUPersonalMotorLineCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/AUPersonalMotorLine/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified au personal motor line coverage",
        "description" : "Retrieve the specified au personal motor line coverage",
        "operationId" : "getAUPersonalMotorLineCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "AUPersonalMotorLineCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/AUPersonalMotorLine/vehicles" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of vehicles",
        "description" : "Retrieve a list of vehicles",
        "operationId" : "getPMAVehicles",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PMAVehicle",
          "operationType" : "get-collection",
          "resourceType" : "PMAVehicles"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PMAVehicleList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/AUPersonalMotorLine/vehicles/{vehicleId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified vehicle",
        "description" : "Retrieve the specified vehicle",
        "operationId" : "getPMAVehicle",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PMAVehicle"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PMAVehicleResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/AUPersonalMotorLine/vehicles/{vehicleId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of vehicle coverages",
        "description" : "Retrieve a list of vehicle coverages",
        "operationId" : "getPMAVehicleCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PMAVehicleCoverage",
          "operationType" : "get-collection",
          "resourceType" : "PMAVehicleCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/AUPersonalMotorLine/vehicles/{vehicleId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified vehicle coverage",
        "description" : "Retrieve the specified vehicle coverage",
        "operationId" : "getPMAVehicleCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PMAVehicleCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/AUPersonalMotorLine/vehicles/{vehicleId}/drivers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of drivers",
        "description" : "Retrieve a list of drivers",
        "operationId" : "getPMADrivers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PMADriver",
          "operationType" : "get-collection",
          "resourceType" : "PMADrivers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PMADriverList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/AUPersonalMotorLine/vehicles/{vehicleId}/drivers/{driverId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      }, {
        "$ref" : "#/parameters/driverId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified driver",
        "description" : "Retrieve the specified driver",
        "operationId" : "getPMADriver",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PMADriver"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PMADriverResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line",
        "description" : "Retrieve the specified line",
        "operationId" : "getBOPLine",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "BOPLine"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/BOPLineResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line coverages",
        "description" : "Retrieve a list of line coverages",
        "operationId" : "getBOPLineCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "BOPLineCoverage",
          "operationType" : "get-collection",
          "resourceType" : "BOPLineCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line coverage",
        "description" : "Retrieve the specified line coverage",
        "operationId" : "getBOPLineCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "BOPLineCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/locations" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of locations",
        "description" : "Retrieve a list of locations",
        "operationId" : "getBOPLocations",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "BOPLocation",
          "operationType" : "get-collection",
          "resourceType" : "BOPLocations"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/BOPLocationList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/locations/{locationId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified location",
        "description" : "Retrieve the specified location",
        "operationId" : "getBOPLocation",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "BOPLocation"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/BOPLocationResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/locations/{locationId}/buildings" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of buildings",
        "description" : "Retrieve a list of buildings",
        "operationId" : "getBOPBuildings",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "BOPBuilding",
          "operationType" : "get-collection",
          "resourceType" : "BOPBuildings"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/BOPBuildingList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/locations/{locationId}/buildings/{buildingId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/buildingId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified building",
        "description" : "Retrieve the specified building",
        "operationId" : "getBOPBuilding",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "BOPBuilding"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/BOPBuildingResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/locations/{locationId}/buildings/{buildingId}/bldg-addl-interests" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/buildingId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of building additional interests",
        "description" : "Retrieve a list of building additional interests",
        "operationId" : "getBOPBldgAddlInterests",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "BOPBldgAddlInterest",
          "operationType" : "get-collection",
          "resourceType" : "BOPBldgAddlInterests"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/BOPBldgAddlInterestList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/locations/{locationId}/buildings/{buildingId}/bldg-addl-interests/{bldgAddlInterestId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/buildingId"
      }, {
        "$ref" : "#/parameters/bldgAddlInterestId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified building additional interest",
        "description" : "Retrieve the specified building additional interest",
        "operationId" : "getBOPBldgAddlInterest",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "BOPBldgAddlInterest"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/BOPBldgAddlInterestResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/locations/{locationId}/buildings/{buildingId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/buildingId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of building coverages",
        "description" : "Retrieve a list of building coverages",
        "operationId" : "getBOPBuildingCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "BOPBuildingCoverage",
          "operationType" : "get-collection",
          "resourceType" : "BOPBuildingCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/locations/{locationId}/buildings/{buildingId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/buildingId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified building coverage",
        "description" : "Retrieve the specified building coverage",
        "operationId" : "getBOPBuildingCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "BOPBuildingCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/locations/{locationId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of location coverages",
        "description" : "Retrieve a list of location coverages",
        "operationId" : "getBOPLocationCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "BOPLocationCoverage",
          "operationType" : "get-collection",
          "resourceType" : "BOPLocationCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/locations/{locationId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified location coverage",
        "description" : "Retrieve the specified location coverage",
        "operationId" : "getBOPLocationCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "BOPLocationCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/locations/{locationId}/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of location questions",
        "description" : "Retrieve a list of location questions",
        "operationId" : "getBOPLocationQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "BOPLocationQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/modifiers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line modifiers",
        "description" : "Retrieve a list of line modifiers",
        "operationId" : "getBOPLineModifiers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "BOPLineModifier",
          "operationType" : "get-collection",
          "resourceType" : "BOPLineModifiers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/modifiers/{modifierId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/modifierId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line modifier",
        "description" : "Retrieve the specified line modifier",
        "operationId" : "getBOPLineModifier",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "BOPLineModifier"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line questions",
        "description" : "Retrieve a list of line questions",
        "operationId" : "getBOPLineQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "BOPLineQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/scheduled-equipments" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of scheduled equipment",
        "description" : "Retrieve a list of scheduled equipment",
        "operationId" : "getBOPScheduledEquipments",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "BOPScheduledEquipment",
          "operationType" : "get-collection",
          "resourceType" : "BOPScheduledEquipments"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/BOPScheduledEquipmentList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/BOPLine/scheduled-equipments/{scheduledEquipmentId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/scheduledEquipmentId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified scheduled equipment",
        "description" : "Retrieve the specified scheduled equipment",
        "operationId" : "getBOPScheduledEquipment",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "BOPScheduledEquipment"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/BOPScheduledEquipmentResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line",
        "description" : "Retrieve the specified line",
        "operationId" : "getCPLine",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "CPLine"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CPLineResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/blankets" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of blankets",
        "description" : "Retrieve a list of blankets",
        "operationId" : "getCPBlankets",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "CPBlanket",
          "operationType" : "get-collection",
          "resourceType" : "CPBlankets"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CPBlanketList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/blankets/{blanketId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/blanketId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified blanket",
        "description" : "Retrieve the specified blanket",
        "operationId" : "getCPBlanket",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "CPBlanket"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CPBlanketResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/blankets/{blanketId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/blanketId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of blanket coverages",
        "description" : "Retrieve a list of blanket coverages",
        "operationId" : "getCPBlanketCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "CPBlanketCoverage",
          "operationType" : "get-collection",
          "resourceType" : "CPBlanketCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/blankets/{blanketId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/blanketId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified blanket coverage",
        "description" : "Retrieve the specified blanket coverage",
        "operationId" : "getCPBlanketCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "CPBlanketCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/locations" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of locations",
        "description" : "Retrieve a list of locations",
        "operationId" : "getCPLocations",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "CPLocation",
          "operationType" : "get-collection",
          "resourceType" : "CPLocations"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CPLocationList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/locations/{locationId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified location",
        "description" : "Retrieve the specified location",
        "operationId" : "getCPLocation",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "CPLocation"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CPLocationResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/locations/{locationId}/buildings" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of buildings",
        "description" : "Retrieve a list of buildings",
        "operationId" : "getCPBuildings",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "CPBuilding",
          "operationType" : "get-collection",
          "resourceType" : "CPBuildings"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CPBuildingList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/locations/{locationId}/buildings/{buildingId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/buildingId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified building",
        "description" : "Retrieve the specified building",
        "operationId" : "getCPBuilding",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "CPBuilding"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CPBuildingResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/locations/{locationId}/buildings/{buildingId}/bldg-addl-interests" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/buildingId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of building additional interests",
        "description" : "Retrieve a list of building additional interests",
        "operationId" : "getCPBldgAddlInterests",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "CPBldgAddlInterest",
          "operationType" : "get-collection",
          "resourceType" : "CPBldgAddlInterests"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CPBldgAddlInterestList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/locations/{locationId}/buildings/{buildingId}/bldg-addl-interests/{bldgAddlInterestId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/buildingId"
      }, {
        "$ref" : "#/parameters/bldgAddlInterestId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified building additional interest",
        "description" : "Retrieve the specified building additional interest",
        "operationId" : "getCPBldgAddlInterest",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "CPBldgAddlInterest"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CPBldgAddlInterestResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/locations/{locationId}/buildings/{buildingId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/buildingId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of building coverages",
        "description" : "Retrieve a list of building coverages",
        "operationId" : "getCPBuildingCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "CPBuildingCoverage",
          "operationType" : "get-collection",
          "resourceType" : "CPBuildingCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/locations/{locationId}/buildings/{buildingId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/buildingId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified building coverage",
        "description" : "Retrieve the specified building coverage",
        "operationId" : "getCPBuildingCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "CPBuildingCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/locations/{locationId}/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of location questions",
        "description" : "Retrieve a list of location questions",
        "operationId" : "getCPLocationQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "CPLocationQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/modifiers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line modifiers",
        "description" : "Retrieve a list of line modifiers",
        "operationId" : "getCPLineModifiers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "CPLineModifier",
          "operationType" : "get-collection",
          "resourceType" : "CPLineModifiers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/modifiers/{modifierId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/modifierId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line modifier",
        "description" : "Retrieve the specified line modifier",
        "operationId" : "getCPLineModifier",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "CPLineModifier"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/CPLine/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line questions",
        "description" : "Retrieve a list of line questions",
        "operationId" : "getCPLineQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "CPLineQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/GLLine" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line",
        "description" : "Retrieve the specified line",
        "operationId" : "getGLLine",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "GLLine"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/GLLineResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/GLLine/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line coverages",
        "description" : "Retrieve a list of line coverages",
        "operationId" : "getGLLineCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "GLLineCoverage",
          "operationType" : "get-collection",
          "resourceType" : "GLLineCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/GLLine/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line coverage",
        "description" : "Retrieve the specified line coverage",
        "operationId" : "getGLLineCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "GLLineCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/GLLine/exposures" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of exposures",
        "description" : "Retrieve a list of exposures",
        "operationId" : "getGLExposures",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "GLExposure",
          "operationType" : "get-collection",
          "resourceType" : "GLExposures"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/GLExposureList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/GLLine/exposures/{exposureId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/exposureId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified exposure",
        "description" : "Retrieve the specified exposure",
        "operationId" : "getGLExposure",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "GLExposure"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/GLExposureResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/GLLine/modifiers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line modifiers",
        "description" : "Retrieve a list of line modifiers",
        "operationId" : "getGLLineModifiers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "GLLineModifier",
          "operationType" : "get-collection",
          "resourceType" : "GLLineModifiers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/GLLine/modifiers/{modifierId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/modifierId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line modifier",
        "description" : "Retrieve the specified line modifier",
        "operationId" : "getGLLineModifier",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "GLLineModifier"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/GLLine/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line questions",
        "description" : "Retrieve a list of line questions",
        "operationId" : "getGLLineQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "GLLineQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line",
        "description" : "Retrieve the specified line",
        "operationId" : "getHOPLine",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPLine"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/HOPLineResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of coverage parts",
        "description" : "Retrieve a list of coverage parts",
        "operationId" : "getHOPCoverageParts",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "HOPCoveragePart",
          "operationType" : "get-collection",
          "resourceType" : "HOPCoverageParts"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/HOPCoveragePartList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified coverage part",
        "description" : "Retrieve the specified coverage part",
        "operationId" : "getHOPCoveragePart",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPCoveragePart"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/HOPCoveragePartResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of dwellings",
        "description" : "Retrieve a list of dwellings",
        "operationId" : "getHOPDwellings",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "HOPDwelling",
          "operationType" : "get-collection",
          "resourceType" : "HOPDwellings"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/HOPDwellingList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified dwelling",
        "description" : "Retrieve the specified dwelling",
        "operationId" : "getHOPDwelling",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPDwelling"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/HOPDwellingResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of dwelling coverages",
        "description" : "Retrieve a list of dwelling coverages",
        "operationId" : "getHOPDwellingCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "HOPDwellingCoverage",
          "operationType" : "get-collection",
          "resourceType" : "HOPDwellingCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified dwelling coverage",
        "description" : "Retrieve the specified dwelling coverage",
        "operationId" : "getHOPDwellingCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPDwellingCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/coverages/{coverageId}/scheduled-items" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of dwelling coverage scheduled items",
        "description" : "Retrieve a list of dwelling coverage scheduled items",
        "operationId" : "getHOPDwellingScheduledItems",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "HOPDwellingScheduledItem",
          "operationType" : "get-collection",
          "resourceType" : "HOPDwellingScheduledItems"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ScheduledItemList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/coverages/{coverageId}/scheduled-items/{scheduledItemId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      }, {
        "$ref" : "#/parameters/coverageId"
      }, {
        "$ref" : "#/parameters/scheduledItemId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified dwelling coverage scheduled item",
        "description" : "Retrieve the specified dwelling coverage scheduled item",
        "operationId" : "getHOPDwellingScheduledItem",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPDwellingScheduledItem"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ScheduledItemResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/dwell-addl-interests" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of dwelling additional interests",
        "description" : "Retrieve a list of dwelling additional interests",
        "operationId" : "getHOPDwellAddlInterests",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "HOPDwellAddlInterest",
          "operationType" : "get-collection",
          "resourceType" : "HOPDwellAddlInterests"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/HOPDwellAddlInterestList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/dwell-addl-interests/{dwellAddlInterestId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      }, {
        "$ref" : "#/parameters/dwellAddlInterestId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified dwelling additional interest",
        "description" : "Retrieve the specified dwelling additional interest",
        "operationId" : "getHOPDwellAddlInterest",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPDwellAddlInterest"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/HOPDwellAddlInterestResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/dwelling-animals" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of dwelling animals",
        "description" : "Retrieve a list of dwelling animals",
        "operationId" : "getDwellingAnimals",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "DwellingAnimal",
          "operationType" : "get-collection",
          "resourceType" : "DwellingAnimals"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/DwellingAnimalList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/dwelling-animals/{dwellingAnimalId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      }, {
        "$ref" : "#/parameters/dwellingAnimalId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified dwelling animal",
        "description" : "Retrieve the specified dwelling animal",
        "operationId" : "getDwellingAnimal",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "DwellingAnimal"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/DwellingAnimalResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/dwelling-hazards" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of dwelling hazards",
        "description" : "Retrieve a list of dwelling hazards",
        "operationId" : "getDwellingHazards",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "DwellingHazard",
          "operationType" : "get-collection",
          "resourceType" : "DwellingHazards"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/DwellingHazardList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/dwelling-hazards/{dwellingHazardId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      }, {
        "$ref" : "#/parameters/dwellingHazardId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified dwelling hazard",
        "description" : "Retrieve the specified dwelling hazard",
        "operationId" : "getDwellingHazard",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "DwellingHazard"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/DwellingHazardResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/modifiers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of dwelling modifiers",
        "description" : "Retrieve a list of dwelling modifiers",
        "operationId" : "getHOPDwellingModifiers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "HOPDwellingModifier",
          "operationType" : "get-collection",
          "resourceType" : "HOPDwellingModifiers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/modifiers/{modifierId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      }, {
        "$ref" : "#/parameters/modifierId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified dwelling modifier",
        "description" : "Retrieve the specified dwelling modifier",
        "operationId" : "getHOPDwellingModifier",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPDwellingModifier"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of dwelling questions",
        "description" : "Retrieve a list of dwelling questions",
        "operationId" : "getHOPDwellingQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPDwellingQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/swimming-pools" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of swimming pools",
        "description" : "Retrieve a list of swimming pools",
        "operationId" : "getHOPSwimmingPools",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "HOPSwimmingPool",
          "operationType" : "get-collection",
          "resourceType" : "HOPSwimmingPools"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/HOPSwimmingPoolList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/dwellings/{dwellingId}/swimming-pools/{swimmingPoolId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/dwellingId"
      }, {
        "$ref" : "#/parameters/swimmingPoolId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified swimming pool",
        "description" : "Retrieve the specified swimming pool",
        "operationId" : "getHOPSwimmingPool",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPSwimmingPool"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/HOPSwimmingPoolResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/modifiers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of coverage part modifiers",
        "description" : "Retrieve a list of coverage part modifiers",
        "operationId" : "getHOPCoveragePartModifiers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "HOPCoveragePartModifier",
          "operationType" : "get-collection",
          "resourceType" : "HOPCoveragePartModifiers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverage-parts/{coveragePartId}/modifiers/{modifierId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coveragePartId"
      }, {
        "$ref" : "#/parameters/modifierId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified coverage part modifier",
        "description" : "Retrieve the specified coverage part modifier",
        "operationId" : "getHOPCoveragePartModifier",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPCoveragePartModifier"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line coverages",
        "description" : "Retrieve a list of line coverages",
        "operationId" : "getHOPLineCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "HOPLineCoverage",
          "operationType" : "get-collection",
          "resourceType" : "HOPLineCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line coverage",
        "description" : "Retrieve the specified line coverage",
        "operationId" : "getHOPLineCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPLineCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverages/{coverageId}/scheduled-items" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line coverage scheduled items",
        "description" : "Retrieve a list of line coverage scheduled items",
        "operationId" : "getHOPLineScheduledItems",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "HOPLineScheduledItem",
          "operationType" : "get-collection",
          "resourceType" : "HOPLineScheduledItems"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ScheduledItemList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/coverages/{coverageId}/scheduled-items/{scheduledItemId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coverageId"
      }, {
        "$ref" : "#/parameters/scheduledItemId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line coverage scheduled item",
        "description" : "Retrieve the specified line coverage scheduled item",
        "operationId" : "getHOPLineScheduledItem",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPLineScheduledItem"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ScheduledItemResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/modifiers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line modifiers",
        "description" : "Retrieve a list of line modifiers",
        "operationId" : "getHOPLineModifiers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "HOPLineModifier",
          "operationType" : "get-collection",
          "resourceType" : "HOPLineModifiers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/modifiers/{modifierId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/modifierId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line modifier",
        "description" : "Retrieve the specified line modifier",
        "operationId" : "getHOPLineModifier",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPLineModifier"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/HOPLine/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line questions",
        "description" : "Retrieve a list of line questions",
        "operationId" : "getHOPLineQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "HOPLineQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line",
        "description" : "Retrieve the specified line",
        "operationId" : "getIMLine",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMLine"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMLineResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/accounts-rec-parts" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of accounts receivable parts",
        "description" : "Retrieve a list of accounts receivable parts",
        "operationId" : "getIMAccountsRecParts",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "IMAccountsRecPart",
          "operationType" : "get-collection",
          "resourceType" : "IMAccountsRecParts"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMAccountsRecPartList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/accounts-rec-parts/{accountsRecPartId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/accountsRecPartId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified accounts receivable part",
        "description" : "Retrieve the specified accounts receivable part",
        "operationId" : "getIMAccountsRecPart",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMAccountsRecPart"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMAccountsRecPartResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/accounts-rec-parts/{accountsRecPartId}/accounts-receivables" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/accountsRecPartId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of accounts receivable",
        "description" : "Retrieve a list of accounts receivable",
        "operationId" : "getIMAccountsReceivables",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "IMAccountsReceivable",
          "operationType" : "get-collection",
          "resourceType" : "IMAccountsReceivables"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMAccountsReceivableList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/accounts-rec-parts/{accountsRecPartId}/accounts-receivables/{accountsReceivableId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/accountsRecPartId"
      }, {
        "$ref" : "#/parameters/accountsReceivableId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified accounts receivable",
        "description" : "Retrieve the specified accounts receivable",
        "operationId" : "getIMAccountsReceivable",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMAccountsReceivable"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMAccountsReceivableResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/accounts-rec-parts/{accountsRecPartId}/accounts-receivables/{accountsReceivableId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/accountsRecPartId"
      }, {
        "$ref" : "#/parameters/accountsReceivableId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of accounts receivable coverages",
        "description" : "Retrieve a list of accounts receivable coverages",
        "operationId" : "getIMAccountsReceivableCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "IMAccountsReceivableCoverage",
          "operationType" : "get-collection",
          "resourceType" : "IMAccountsReceivableCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/accounts-rec-parts/{accountsRecPartId}/accounts-receivables/{accountsReceivableId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/accountsRecPartId"
      }, {
        "$ref" : "#/parameters/accountsReceivableId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified accounts receivable coverage",
        "description" : "Retrieve the specified accounts receivable coverage",
        "operationId" : "getIMAccountsReceivableCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMAccountsReceivableCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/accounts-rec-parts/{accountsRecPartId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/accountsRecPartId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of accounts receivable part coverages",
        "description" : "Retrieve a list of accounts receivable part coverages",
        "operationId" : "getIMAccountsRecPartCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "IMAccountsRecPartCoverage",
          "operationType" : "get-collection",
          "resourceType" : "IMAccountsRecPartCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/accounts-rec-parts/{accountsRecPartId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/accountsRecPartId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified accounts receivable part coverage",
        "description" : "Retrieve the specified accounts receivable part coverage",
        "operationId" : "getIMAccountsRecPartCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMAccountsRecPartCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/accounts-rec-parts/{accountsRecPartId}/excluded-accounts" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/accountsRecPartId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of excluded accounts",
        "description" : "Retrieve a list of excluded accounts",
        "operationId" : "getIMExcludedAccounts",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "IMExcludedAccount",
          "operationType" : "get-collection",
          "resourceType" : "IMExcludedAccounts"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMExcludedAccountList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/accounts-rec-parts/{accountsRecPartId}/excluded-accounts/{excludedAccountId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/accountsRecPartId"
      }, {
        "$ref" : "#/parameters/excludedAccountId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified excluded account",
        "description" : "Retrieve the specified excluded account",
        "operationId" : "getIMExcludedAccount",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMExcludedAccount"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMExcludedAccountResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/contractors-equip-parts" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of contractors' equipment parts",
        "description" : "Retrieve a list of contractors' equipment parts",
        "operationId" : "getContractorsEquipParts",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "ContractorsEquipPart",
          "operationType" : "get-collection",
          "resourceType" : "ContractorsEquipParts"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ContractorsEquipPartList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/contractors-equip-parts/{contractorsEquipPartId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contractorsEquipPartId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified contractors' equipment part",
        "description" : "Retrieve the specified contractors' equipment part",
        "operationId" : "getContractorsEquipPart",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ContractorsEquipPart"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ContractorsEquipPartResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/contractors-equip-parts/{contractorsEquipPartId}/contractors-equipments" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contractorsEquipPartId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of contractors' equipment",
        "description" : "Retrieve a list of contractors' equipment",
        "operationId" : "getContractorsEquipments",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "ContractorsEquipment",
          "operationType" : "get-collection",
          "resourceType" : "ContractorsEquipments"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ContractorsEquipmentList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/contractors-equip-parts/{contractorsEquipPartId}/contractors-equipments/{contractorsEquipmentId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contractorsEquipPartId"
      }, {
        "$ref" : "#/parameters/contractorsEquipmentId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified contractors' equipment",
        "description" : "Retrieve the specified contractors' equipment",
        "operationId" : "getContractorsEquipment",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ContractorsEquipment"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ContractorsEquipmentResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/contractors-equip-parts/{contractorsEquipPartId}/contractors-equipments/{contractorsEquipmentId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contractorsEquipPartId"
      }, {
        "$ref" : "#/parameters/contractorsEquipmentId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of contractors' equipment coverages",
        "description" : "Retrieve a list of contractors' equipment coverages",
        "operationId" : "getContractorsEquipmentCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "ContractorsEquipmentCoverage",
          "operationType" : "get-collection",
          "resourceType" : "ContractorsEquipmentCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/contractors-equip-parts/{contractorsEquipPartId}/contractors-equipments/{contractorsEquipmentId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contractorsEquipPartId"
      }, {
        "$ref" : "#/parameters/contractorsEquipmentId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified contractors' equipment coverage",
        "description" : "Retrieve the specified contractors' equipment coverage",
        "operationId" : "getContractorsEquipmentCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ContractorsEquipmentCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/contractors-equip-parts/{contractorsEquipPartId}/contractors-equipments/{contractorsEquipmentId}/sch-equip-addl-interests" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contractorsEquipPartId"
      }, {
        "$ref" : "#/parameters/contractorsEquipmentId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of scheduled equipment additional interests",
        "description" : "Retrieve a list of scheduled equipment additional interests",
        "operationId" : "getIMSchEquipAddlInterests",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "IMSchEquipAddlInterest",
          "operationType" : "get-collection",
          "resourceType" : "IMSchEquipAddlInterests"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMSchEquipAddlInterestList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/contractors-equip-parts/{contractorsEquipPartId}/contractors-equipments/{contractorsEquipmentId}/sch-equip-addl-interests/{schEquipAddlInterestId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contractorsEquipPartId"
      }, {
        "$ref" : "#/parameters/contractorsEquipmentId"
      }, {
        "$ref" : "#/parameters/schEquipAddlInterestId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified scheduled equipment additional interest",
        "description" : "Retrieve the specified scheduled equipment additional interest",
        "operationId" : "getIMSchEquipAddlInterest",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMSchEquipAddlInterest"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMSchEquipAddlInterestResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/contractors-equip-parts/{contractorsEquipPartId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contractorsEquipPartId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of contractors' equipment part coverages",
        "description" : "Retrieve a list of contractors' equipment part coverages",
        "operationId" : "getContractorsEquipPartCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "ContractorsEquipPartCoverage",
          "operationType" : "get-collection",
          "resourceType" : "ContractorsEquipPartCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/contractors-equip-parts/{contractorsEquipPartId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/contractorsEquipPartId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified contractors' equipment part coverage",
        "description" : "Retrieve the specified contractors' equipment part coverage",
        "operationId" : "getContractorsEquipPartCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ContractorsEquipPartCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/locations" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of locations",
        "description" : "Retrieve a list of locations",
        "operationId" : "getIMLocations",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "IMLocation",
          "operationType" : "get-collection",
          "resourceType" : "IMLocations"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMLocationList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/locations/{locationId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified location",
        "description" : "Retrieve the specified location",
        "operationId" : "getIMLocation",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMLocation"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMLocationResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/locations/{locationId}/buildings" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of buildings",
        "description" : "Retrieve a list of buildings",
        "operationId" : "getIMBuildings",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "IMBuilding",
          "operationType" : "get-collection",
          "resourceType" : "IMBuildings"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMBuildingList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/locations/{locationId}/buildings/{buildingId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      }, {
        "$ref" : "#/parameters/buildingId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified building",
        "description" : "Retrieve the specified building",
        "operationId" : "getIMBuilding",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMBuilding"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMBuildingResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/locations/{locationId}/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of location questions",
        "description" : "Retrieve a list of location questions",
        "operationId" : "getIMLocationQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMLocationQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line questions",
        "description" : "Retrieve a list of line questions",
        "operationId" : "getIMLineQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMLineQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/sign-parts" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of sign parts",
        "description" : "Retrieve a list of sign parts",
        "operationId" : "getIMSignParts",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "IMSignPart",
          "operationType" : "get-collection",
          "resourceType" : "IMSignParts"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMSignPartList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/sign-parts/{signPartId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/signPartId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified sign part",
        "description" : "Retrieve the specified sign part",
        "operationId" : "getIMSignPart",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMSignPart"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMSignPartResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/sign-parts/{signPartId}/signs" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/signPartId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of signs",
        "description" : "Retrieve a list of signs",
        "operationId" : "getIMSigns",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "IMSign",
          "operationType" : "get-collection",
          "resourceType" : "IMSigns"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMSignList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/sign-parts/{signPartId}/signs/{signId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/signPartId"
      }, {
        "$ref" : "#/parameters/signId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified sign",
        "description" : "Retrieve the specified sign",
        "operationId" : "getIMSign",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMSign"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IMSignResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/sign-parts/{signPartId}/signs/{signId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/signPartId"
      }, {
        "$ref" : "#/parameters/signId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of sign coverages",
        "description" : "Retrieve a list of sign coverages",
        "operationId" : "getIMSignCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "IMSignCoverage",
          "operationType" : "get-collection",
          "resourceType" : "IMSignCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/IMLine/sign-parts/{signPartId}/signs/{signId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/signPartId"
      }, {
        "$ref" : "#/parameters/signId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified sign coverage",
        "description" : "Retrieve the specified sign coverage",
        "operationId" : "getIMSignCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IMSignCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line",
        "description" : "Retrieve the specified line",
        "operationId" : "getPersonalAutoLine",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PersonalAutoLine"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PersonalAutoLineResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line coverages",
        "description" : "Retrieve a list of line coverages",
        "operationId" : "getPersonalAutoLineCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PersonalAutoLineCoverage",
          "operationType" : "get-collection",
          "resourceType" : "PersonalAutoLineCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line coverage",
        "description" : "Retrieve the specified line coverage",
        "operationId" : "getPersonalAutoLineCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PersonalAutoLineCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/modifiers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line modifiers",
        "description" : "Retrieve a list of line modifiers",
        "operationId" : "getPersonalAutoLineModifiers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PersonalAutoLineModifier",
          "operationType" : "get-collection",
          "resourceType" : "PersonalAutoLineModifiers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/modifiers/{modifierId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/modifierId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line modifier",
        "description" : "Retrieve the specified line modifier",
        "operationId" : "getPersonalAutoLineModifier",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PersonalAutoLineModifier"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/policy-driver-mvrs" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of policy driver motor vehicle records",
        "description" : "Retrieve a list of policy driver motor vehicle records",
        "operationId" : "getPolicyDriverMVRs",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PolicyDriverMVR",
          "operationType" : "get-collection",
          "resourceType" : "PolicyDriverMVRs"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PolicyDriverMVRList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/policy-driver-mvrs/{policyDriverMVRId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/policyDriverMVRId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified policy driver motor vehicle record",
        "description" : "Retrieve the specified policy driver motor vehicle record",
        "operationId" : "getPolicyDriverMVR",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PolicyDriverMVR"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PolicyDriverMVRResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line questions",
        "description" : "Retrieve a list of line questions",
        "operationId" : "getPersonalAutoLineQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PersonalAutoLineQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/vehicles" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of vehicles",
        "description" : "Retrieve a list of vehicles",
        "operationId" : "getPersonalVehicles",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PersonalVehicle",
          "operationType" : "get-collection",
          "resourceType" : "PersonalVehicles"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PersonalVehicleList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/vehicles/{vehicleId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified vehicle",
        "description" : "Retrieve the specified vehicle",
        "operationId" : "getPersonalVehicle",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PersonalVehicle"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PersonalVehicleResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/vehicles/{vehicleId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of vehicle coverages",
        "description" : "Retrieve a list of vehicle coverages",
        "operationId" : "getPersonalVehicleCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PersonalVehicleCoverage",
          "operationType" : "get-collection",
          "resourceType" : "PersonalVehicleCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/vehicles/{vehicleId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified vehicle coverage",
        "description" : "Retrieve the specified vehicle coverage",
        "operationId" : "getPersonalVehicleCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PersonalVehicleCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/vehicles/{vehicleId}/drivers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of drivers",
        "description" : "Retrieve a list of drivers",
        "operationId" : "getVehicleDrivers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "VehicleDriver",
          "operationType" : "get-collection",
          "resourceType" : "VehicleDrivers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/VehicleDriverList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/vehicles/{vehicleId}/drivers/{driverId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      }, {
        "$ref" : "#/parameters/driverId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified driver",
        "description" : "Retrieve the specified driver",
        "operationId" : "getVehicleDriver",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "VehicleDriver"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/VehicleDriverResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/vehicles/{vehicleId}/modifiers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of vehicle modifiers",
        "description" : "Retrieve a list of vehicle modifiers",
        "operationId" : "getPersonalVehicleModifiers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PersonalVehicleModifier",
          "operationType" : "get-collection",
          "resourceType" : "PersonalVehicleModifiers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/vehicles/{vehicleId}/modifiers/{modifierId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      }, {
        "$ref" : "#/parameters/modifierId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified vehicle modifier",
        "description" : "Retrieve the specified vehicle modifier",
        "operationId" : "getPersonalVehicleModifier",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PersonalVehicleModifier"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/vehicles/{vehicleId}/vhcle-addl-interests" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of vehicle additional interests",
        "description" : "Retrieve a list of vehicle additional interests",
        "operationId" : "getPAVhcleAddlInterests",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PAVhcleAddlInterest",
          "operationType" : "get-collection",
          "resourceType" : "PAVhcleAddlInterests"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PAVhcleAddlInterestList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/PersonalAutoLine/vehicles/{vehicleId}/vhcle-addl-interests/{vhcleAddlInterestId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleId"
      }, {
        "$ref" : "#/parameters/vhcleAddlInterestId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified vehicle additional interest",
        "description" : "Retrieve the specified vehicle additional interest",
        "operationId" : "getPAVhcleAddlInterest",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PAVhcleAddlInterest"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PAVhcleAddlInterestResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line",
        "description" : "Retrieve the specified line",
        "operationId" : "getWorkersCompLine",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WorkersCompLine"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WorkersCompLineResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/aircraft-seats" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of aircraft seats",
        "description" : "Retrieve a list of aircraft seats",
        "operationId" : "getWCAircraftSeats",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WCAircraftSeat",
          "operationType" : "get-collection",
          "resourceType" : "WCAircraftSeats"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCAircraftSeatList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/aircraft-seats/{aircraftSeatId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/aircraftSeatId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified aircraft seat",
        "description" : "Retrieve the specified aircraft seat",
        "operationId" : "getWCAircraftSeat",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WCAircraftSeat"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCAircraftSeatResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line coverages",
        "description" : "Retrieve a list of line coverages",
        "operationId" : "getWorkersCompLineCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WorkersCompLineCoverage",
          "operationType" : "get-collection",
          "resourceType" : "WorkersCompLineCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified line coverage",
        "description" : "Retrieve the specified line coverage",
        "operationId" : "getWorkersCompLineCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WorkersCompLineCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/employees" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of employees",
        "description" : "Retrieve a list of employees",
        "operationId" : "getWCCoveredEmployees",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WCCoveredEmployee",
          "operationType" : "get-collection",
          "resourceType" : "WCCoveredEmployees"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCCoveredEmployeeList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/employees/{employeeId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/employeeId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified employee",
        "description" : "Retrieve the specified employee",
        "operationId" : "getWCCoveredEmployee",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WCCoveredEmployee"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCCoveredEmployeeResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/excluded-workplaces" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of excluded workplaces",
        "description" : "Retrieve a list of excluded workplaces",
        "operationId" : "getWCExcludedWorkplaces",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WCExcludedWorkplace",
          "operationType" : "get-collection",
          "resourceType" : "WCExcludedWorkplaces"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCExcludedWorkplaceList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/excluded-workplaces/{excludedWorkplaceId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/excludedWorkplaceId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified excluded workplace",
        "description" : "Retrieve the specified excluded workplace",
        "operationId" : "getWCExcludedWorkplace",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WCExcludedWorkplace"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCExcludedWorkplaceResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/inclusion-persons" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of inclusion persons",
        "description" : "Retrieve a list of inclusion persons",
        "operationId" : "getInclusionPersons",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "InclusionPerson",
          "operationType" : "get-collection",
          "resourceType" : "InclusionPersons"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/InclusionPersonList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/inclusion-persons/{inclusionPersonId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/inclusionPersonId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified inclusion person",
        "description" : "Retrieve the specified inclusion person",
        "operationId" : "getInclusionPerson",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "InclusionPerson"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/InclusionPersonResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/jurisdictions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of jurisdictions",
        "description" : "Retrieve a list of jurisdictions",
        "operationId" : "getWCJurisdictions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WCJurisdiction",
          "operationType" : "get-collection",
          "resourceType" : "WCJurisdictions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCJurisdictionList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/jurisdictions/{jurisdictionId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/jurisdictionId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified jurisdiction",
        "description" : "Retrieve the specified jurisdiction",
        "operationId" : "getWCJurisdiction",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WCJurisdiction"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCJurisdictionResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/jurisdictions/{jurisdictionId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/jurisdictionId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of jurisdiction coverages",
        "description" : "Retrieve a list of jurisdiction coverages",
        "operationId" : "getWCJurisdictionCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WCJurisdictionCoverage",
          "operationType" : "get-collection",
          "resourceType" : "WCJurisdictionCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/jurisdictions/{jurisdictionId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/jurisdictionId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified jurisdiction coverage",
        "description" : "Retrieve the specified jurisdiction coverage",
        "operationId" : "getWCJurisdictionCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WCJurisdictionCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CoverageResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/jurisdictions/{jurisdictionId}/modifiers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/jurisdictionId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of jurisdiction modifiers",
        "description" : "Retrieve a list of jurisdiction modifiers",
        "operationId" : "getWCJurisdictionModifiers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WCJurisdictionModifier",
          "operationType" : "get-collection",
          "resourceType" : "WCJurisdictionModifiers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/jurisdictions/{jurisdictionId}/modifiers/{modifierId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/jurisdictionId"
      }, {
        "$ref" : "#/parameters/modifierId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified jurisdiction modifier",
        "description" : "Retrieve the specified jurisdiction modifier",
        "operationId" : "getWCJurisdictionModifier",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WCJurisdictionModifier"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ModifierResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/participating-plans" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of participating plans",
        "description" : "Retrieve a list of participating plans",
        "operationId" : "getWCParticipatingPlans",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WCParticipatingPlan",
          "operationType" : "get-collection",
          "resourceType" : "WCParticipatingPlans"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCParticipatingPlanList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/participating-plans/{participatingPlanId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/participatingPlanId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified participating plan",
        "description" : "Retrieve the specified participating plan",
        "operationId" : "getWCParticipatingPlan",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WCParticipatingPlan"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCParticipatingPlanResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of line questions",
        "description" : "Retrieve a list of line questions",
        "operationId" : "getWorkersCompLineQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WorkersCompLineQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/retro-rating-plans" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of retrospective rating plans",
        "description" : "Retrieve a list of retrospective rating plans",
        "operationId" : "getWCRetrospectiveRatingPlans",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WCRetrospectiveRatingPlan",
          "operationType" : "get-collection",
          "resourceType" : "WCRetrospectiveRatingPlans"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCRetrospectiveRatingPlanList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/retro-rating-plans/{retroRatingPlanId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/retroRatingPlanId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified retrospective rating plan",
        "description" : "Retrieve the specified retrospective rating plan",
        "operationId" : "getWCRetrospectiveRatingPlan",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WCRetrospectiveRatingPlan"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCRetrospectiveRatingPlanResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/retro-rating-plans/{retroRatingPlanId}/letters-of-credit" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/retroRatingPlanId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of letters of credit",
        "description" : "Retrieve a list of letters of credit",
        "operationId" : "getWCRetroRatingLettersOfCredit",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WCRetroRatingLetterOfCredit",
          "operationType" : "get-collection",
          "resourceType" : "WCRetroRatingLettersOfCredit"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCRetroRatingLetterOfCreditList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/retro-rating-plans/{retroRatingPlanId}/letters-of-credit/{letterOfCreditId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/retroRatingPlanId"
      }, {
        "$ref" : "#/parameters/letterOfCreditId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified letter of credit",
        "description" : "Retrieve the specified letter of credit",
        "operationId" : "getWCRetroRatingLetterOfCredit",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WCRetroRatingLetterOfCredit"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCRetroRatingLetterOfCreditResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/retro-rating-plans/{retroRatingPlanId}/state-multipliers" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/retroRatingPlanId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of state multipliers",
        "description" : "Retrieve a list of state multipliers",
        "operationId" : "getWCStateMultipliers",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WCStateMultiplier",
          "operationType" : "get-collection",
          "resourceType" : "WCStateMultipliers"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCStateMultiplierList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/retro-rating-plans/{retroRatingPlanId}/state-multipliers/{stateMultiplierId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/retroRatingPlanId"
      }, {
        "$ref" : "#/parameters/stateMultiplierId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified state multiplier",
        "description" : "Retrieve the specified state multiplier",
        "operationId" : "getWCStateMultiplier",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WCStateMultiplier"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCStateMultiplierResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/waivers-of-subro" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of waivers of subrogation",
        "description" : "Retrieve a list of waivers of subrogation",
        "operationId" : "getWCWaiversOfSubro",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "WCWaiverOfSubro",
          "operationType" : "get-collection",
          "resourceType" : "WCWaiversOfSubro"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCWaiverOfSubroList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/lines/WorkersCompLine/waivers-of-subro/{waiverOfSubroId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/waiverOfSubroId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified waiver of subrogation",
        "description" : "Retrieve the specified waiver of subrogation",
        "operationId" : "getWCWaiverOfSubro",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "WCWaiverOfSubro"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/WCWaiverOfSubroResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/locations" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of locations on a policy",
        "description" : "Retrieve a list of locations on a policy",
        "operationId" : "getPolicyLocations",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PolicyLocation",
          "operationType" : "get-collection",
          "resourceType" : "PolicyLocations"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PolicyLocationList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/locations/{locationId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve a location on a policy",
        "description" : "Retrieve a location on a policy",
        "operationId" : "getPolicyLocation",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PolicyLocation"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PolicyLocationResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/locations/{locationId}/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of questions on the policy location",
        "description" : "Retrieve a list of questions on the policy location",
        "operationId" : "getPolicyLocationQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PolicyLocationQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/notes" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Notes associated with a given policy",
        "description" : "Notes associated with a given policy (Since 1.1.0)",
        "operationId" : "getPolicyNotes",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "Note",
          "operationType" : "get-collection",
          "resourceType" : "PolicyNotes"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of notes associated with this policy",
            "schema" : {
              "$ref" : "#/definitions/NoteList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new note on this policy",
        "description" : "Create a new note on this policy (Since 1.1.0)",
        "operationId" : "createPolicyNote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "Note",
          "operationType" : "post-collection",
          "resourceType" : "PolicyNotes"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NoteRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "The details of a newly-created note",
            "schema" : {
              "$ref" : "#/definitions/NoteResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/payment-info" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve payment info on a policy",
        "description" : "Retrieve payment info on a policy",
        "operationId" : "getPaymentInfo",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PaymentInfo"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PaymentInfoResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/questions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of questions on a policy",
        "description" : "Retrieve a list of questions on a policy",
        "operationId" : "getPolicyQuestions",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PolicyQuestions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/QuestionAnswersResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/reinstate" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Start a new reinstatement on a policy",
        "description" : "Start a new reinstatement on a policy",
        "operationId" : "reinstatePolicy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Job",
          "operationType" : "custom-action",
          "resourceType" : "Reinstatement"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateReinstatementRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/JobResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/renew" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Start a new renewal on a policy",
        "description" : "Start a new renewal on a policy",
        "operationId" : "renewPolicy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Job",
          "operationType" : "custom-action",
          "resourceType" : "Renewal"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateRenewalRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/JobResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/rewrite" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Start a new rewrite on a policy",
        "description" : "Start a new rewrite on a policy",
        "operationId" : "rewritePolicy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Job",
          "operationType" : "custom-action",
          "resourceType" : "Rewrite"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateRewriteRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/JobResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/rewrite-account" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Rewrite a policy to a new account",
        "description" : "Rewrite a policy to a new account (Since 1.1.0)",
        "operationId" : "rewritePolicyToNewAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "Job",
          "operationType" : "custom-action",
          "resourceType" : "RewriteNewAccount"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateRewriteNewAccountRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/JobResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/set-prerenewal-direction" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Set pre-renewal direction fields",
        "description" : "Set pre-renewal direction fields (Since 1.3.0)",
        "operationId" : "setPreRenewalDirection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Policy"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SetPreRenewalDirectionRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/PolicyResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/uw-issues" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve the underwriting issues for a policy",
        "description" : "Retrieve the underwriting issues for a policy (Since 1.2.0)",
        "operationId" : "getPolicyUnderwritingIssues",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UWIssue",
          "operationType" : "get-collection",
          "resourceType" : "UWIssues"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/UWIssueList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/uw-issues/{uwIssueId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/uwIssueId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified underwriting issue",
        "description" : "Retrieve the specified underwriting issue (Since 1.2.0)",
        "operationId" : "getPolicyUnderwritingIssue",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "UWIssue"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/UWIssueResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/uw-issues/{uwIssueId}/history" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/uwIssueId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified underwriting issue's history",
        "description" : "Retrieve the specified underwriting issue's history (Since 1.2.0)",
        "operationId" : "getPolicyUnderwritingIssueHistory",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UWIssueHistory",
          "operationType" : "get-collection",
          "resourceType" : "UWIssueHistories"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/UWIssueHistoryList"
            }
          }
        }
      }
    },
    "/policies/{policyId}/uw-referral-reasons" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieve the underwriting referral reasons for a policy",
        "description" : "Retrieve the underwriting referral reasons for a policy (Since 1.3.0)",
        "operationId" : "getPolicyUWReferralReasons",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "UWReferralReason",
          "operationType" : "get-collection",
          "resourceType" : "UWReferralReasons"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/UWReferralReasonList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new underwriting referral reason on a policy",
        "description" : "Create a new underwriting referral reason on a policy (Since 1.3.0)",
        "operationId" : "createUWReferralReason",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "UWReferralReason",
          "operationType" : "post-collection",
          "resourceType" : "UWReferralReasons"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UWReferralReasonRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/UWReferralReasonResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/uw-referral-reasons/{uwReferralReasonId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/uwReferralReasonId"
      } ],
      "get" : {
        "summary" : "Retrieve the specified underwriting referral reason",
        "description" : "Retrieve the specified underwriting referral reason (Since 1.3.0)",
        "operationId" : "getPolicyUWReferralReason",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "UWReferralReason"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/asOfDate"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/UWReferralReasonResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/uw-referral-reasons/{uwReferralReasonId}/close" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/uwReferralReasonId"
      } ],
      "post" : {
        "summary" : "Close the specified underwriting referral reason",
        "description" : "Close the specified underwriting referral reason (Since 1.3.0)",
        "operationId" : "closePolicyUWReferralReason",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "UWReferralReason"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully closed the underwriting referral reason",
            "schema" : {
              "$ref" : "#/definitions/UWReferralReasonResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/uw-referral-reasons/{uwReferralReasonId}/reopen" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/uwReferralReasonId"
      } ],
      "post" : {
        "summary" : "Reopen the specified underwriting referral reason",
        "description" : "Reopen the specified underwriting referral reason (Since 1.3.0)",
        "operationId" : "reopenPolicyUWReferralReason",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "UWReferralReason"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully reopened the underwriting referral reason",
            "schema" : {
              "$ref" : "#/definitions/UWReferralReasonResponse"
            }
          }
        }
      }
    },
    "/policies/{policyId}/uw-referral-reasons/{uwReferralReasonId}/special-close" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/uwReferralReasonId"
      } ],
      "post" : {
        "summary" : "Close the specified underwriting referral reason using special permission",
        "description" : "Close the specified underwriting referral reason using special permission (Since 1.3.0)",
        "operationId" : "specialClosePolicyUWReferralReason",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "UWReferralReason"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully closed the underwriting referral reason",
            "schema" : {
              "$ref" : "#/definitions/UWReferralReasonResponse"
            }
          }
        }
      }
    },
    "/search/policies" : {
      "post" : {
        "summary" : "Search for policies that match the specified criteria",
        "description" : "Search for policies that match the specified criteria",
        "operationId" : "searchPolicies",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PolicySearchResult",
          "operationType" : "search-collection",
          "resourceType" : "PolicySearch"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PolicySearchRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a list of policies that match the search criteria",
            "schema" : {
              "$ref" : "#/definitions/PolicySearchResultList"
            }
          }
        }
      }
    },
    "/swagger.json" : {
      "get" : {
        "summary" : "Returns the Swagger schema for this API",
        "description" : "Returns a Swagger 2.0 schema for this API as json",
        "operationId" : "generateDocs",
        "produces" : [ "application/json" ],
        "x-gw-authenticated" : false,
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          }
        }
      }
    }
  },
  "parameters" : {
    "accountsRecPartId" : {
      "name" : "accountsRecPartId",
      "in" : "path",
      "description" : "The identifier for the accounts receivable part",
      "required" : true,
      "type" : "string"
    },
    "accountsReceivableId" : {
      "name" : "accountsReceivableId",
      "in" : "path",
      "description" : "The identifier for the accounts receivable",
      "required" : true,
      "type" : "string"
    },
    "additionalNamedInsuredId" : {
      "name" : "additionalNamedInsuredId",
      "in" : "path",
      "description" : "The identifier for the additional named insured (Since 1.4.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.4.0"
    },
    "aircraftSeatId" : {
      "name" : "aircraftSeatId",
      "in" : "path",
      "description" : "The identifier for the aircraft seat",
      "required" : true,
      "type" : "string"
    },
    "asOfDate" : {
      "name" : "asOfDate",
      "in" : "query",
      "description" : "The date on which to view the job or policy",
      "required" : false,
      "type" : "string",
      "format" : "date-time",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "blanketId" : {
      "name" : "blanketId",
      "in" : "path",
      "description" : "The identifier for the blanket",
      "required" : true,
      "type" : "string"
    },
    "bldgAddlInterestId" : {
      "name" : "bldgAddlInterestId",
      "in" : "path",
      "description" : "The identifier for the building additional interest",
      "required" : true,
      "type" : "string"
    },
    "buildingId" : {
      "name" : "buildingId",
      "in" : "path",
      "description" : "The identifier for the building",
      "required" : true,
      "type" : "string"
    },
    "contactId" : {
      "name" : "contactId",
      "in" : "path",
      "description" : "The identifier for the policy contact",
      "required" : true,
      "type" : "string"
    },
    "contingencyId" : {
      "name" : "contingencyId",
      "in" : "path",
      "description" : "The identifier for the contingency (Since 1.3.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.3.0"
    },
    "contractorsEquipPartId" : {
      "name" : "contractorsEquipPartId",
      "in" : "path",
      "description" : "The identifier for the contractors' equipment part",
      "required" : true,
      "type" : "string"
    },
    "contractorsEquipmentId" : {
      "name" : "contractorsEquipmentId",
      "in" : "path",
      "description" : "The identifier for the contractors' equipment",
      "required" : true,
      "type" : "string"
    },
    "coverageId" : {
      "name" : "coverageId",
      "in" : "path",
      "description" : "The identifier for the coverage",
      "required" : true,
      "type" : "string"
    },
    "coveragePartId" : {
      "name" : "coveragePartId",
      "in" : "path",
      "description" : "The identifier for the coverage part",
      "required" : true,
      "type" : "string"
    },
    "driverId" : {
      "name" : "driverId",
      "in" : "path",
      "description" : "The identifier for the driver",
      "required" : true,
      "type" : "string"
    },
    "dwellAddlInterestId" : {
      "name" : "dwellAddlInterestId",
      "in" : "path",
      "description" : "The identifier for the dwelling additional interest",
      "required" : true,
      "type" : "string"
    },
    "dwellingAnimalId" : {
      "name" : "dwellingAnimalId",
      "in" : "path",
      "description" : "The identifier for the dwelling animal",
      "required" : true,
      "type" : "string"
    },
    "dwellingHazardId" : {
      "name" : "dwellingHazardId",
      "in" : "path",
      "description" : "The identifier for the dwelling hazard",
      "required" : true,
      "type" : "string"
    },
    "dwellingId" : {
      "name" : "dwellingId",
      "in" : "path",
      "description" : "The identifier for the dwelling",
      "required" : true,
      "type" : "string"
    },
    "employeeId" : {
      "name" : "employeeId",
      "in" : "path",
      "description" : "The identifier for the employee",
      "required" : true,
      "type" : "string"
    },
    "enablePolymorphism" : {
      "name" : "enablePolymorphism",
      "in" : "query",
      "description" : "Whether or not to use the `discriminator`/`oneOf` pattern to output schemas in cases where the valid set of fields can vary based on some attribute of the data such as the country or subtype.  Defaults to `true`. See the documentation for more information.",
      "type" : "boolean",
      "default" : true
    },
    "excludedAccountId" : {
      "name" : "excludedAccountId",
      "in" : "path",
      "description" : "The identifier for the excluded account",
      "required" : true,
      "type" : "string"
    },
    "excludedWorkplaceId" : {
      "name" : "excludedWorkplaceId",
      "in" : "path",
      "description" : "The identifier for the excluded workplace",
      "required" : true,
      "type" : "string"
    },
    "exposureId" : {
      "name" : "exposureId",
      "in" : "path",
      "description" : "The identifier for the exposure",
      "required" : true,
      "type" : "string"
    },
    "fields" : {
      "name" : "fields",
      "in" : "query",
      "description" : "Allows the caller to specify the set of fields that should be included on the response. This can be used to limit the set of fields returned as well as to include optional fields that otherwise wouldn't normally be returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field list>`, where `<field list>` consists of a comma-separated list of field or field set names. See the documentation for more information.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "filter" : {
      "name" : "filter",
      "in" : "query",
      "description" : "Filters the list of results based on the specified field, operator, and value. The parameter is either of the form `filter=<field>:<operator>:<value>` or `filter=<include>:<field>:<operator>:<value>`. See the documentation for more information.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "filterByUser" : {
      "name" : "filterByUser",
      "in" : "query",
      "description" : "Whether or not to filter endpoints and schema properties by the authorization of the caller. Defaults to `false`.",
      "type" : "boolean",
      "default" : false
    },
    "gwLanguageHeader" : {
      "name" : "GW-Language",
      "in" : "header",
      "description" : "If specified, this header will set the language used when processing the request",
      "type" : "string"
    },
    "gwLocaleHeader" : {
      "name" : "GW-Locale",
      "in" : "header",
      "description" : "If specified, this header will set the locale used when processing the request",
      "type" : "string"
    },
    "gwSchemaProperty" : {
      "name" : "GW-IncludeSchemaProperty",
      "in" : "header",
      "description" : "If specified and the operation returns json with a defined schema, this will add a property, '$GW-Schema',  with the fully qualified name of the object's schema.",
      "type" : "boolean"
    },
    "gwTraceability" : {
      "name" : "X-Correlation-ID",
      "in" : "header",
      "description" : "This header permits a customer to trace a request from its initial reception through all of the subsequent applications that were invoked to handle that request. The actual traceability id present in the MDC and logs (and returned in the response), is dependent on the implementation of TraceabilityIDPlugin. The default implementation uses this value, if specified, or a generated UID.  However, another implementation may always generate a unique id and just log  the relationship between these incoming values and the generated UID. Note: that this header can be repeated, but the resulting string will just be the comma separated values.",
      "type" : "string"
    },
    "gwTransactionID" : {
      "name" : "GW-DBTransaction-ID",
      "in" : "header",
      "description" : "If specified and this operation results in a database commit, this header's value must not have been submitted before.  This value must be globally unique across all clients, apis and webservices. It is used for those transaction that are not idempotent. Unless this is explicitly referenced for an operation it is not required.",
      "required" : true,
      "type" : "string"
    },
    "gwUnknownPropertyHeader" : {
      "name" : "GW-UnknownPropertyHandling",
      "in" : "header",
      "description" : "If specified, this header will drive the behavior for unknown property handling",
      "type" : "string",
      "enum" : [ "log", "reject", "ignore" ]
    },
    "gwUnknownQueryParameterHeader" : {
      "name" : "GW-UnknownQueryParamHandling",
      "in" : "header",
      "description" : "If specified, this header will drive the behavior for unknown query parameter handling.  Default is to reject them.",
      "type" : "string",
      "enum" : [ "log", "reject", "ignore" ]
    },
    "gwValidateResponseHandling" : {
      "name" : "GW-ValidateResponseHandling",
      "in" : "header",
      "description" : "If specified, this header permits the client to override the behavior around validating response",
      "type" : "boolean"
    },
    "include" : {
      "name" : "include",
      "in" : "query",
      "description" : "Used to request that additional resources be returned with the API response in the `included` section of the responses. The `include` parameter can appear multiple times, and is a comma-separated list of additional resources to include. See the documentation for more information.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi"
    },
    "includeTotal" : {
      "name" : "includeTotal",
      "in" : "query",
      "description" : "Used to request that results should include a count of the total number of results available, which may be more than the total number of results currently being returned. This parameter is of the form `includeTotal=<true|false>` or `includeTotal=<include>:<true|false>`. If not specified, the default is considered to be `false`. See the documentation for more information about response pagination.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "inclusionPersonId" : {
      "name" : "inclusionPersonId",
      "in" : "path",
      "description" : "The identifier for the inclusion person",
      "required" : true,
      "type" : "string"
    },
    "jurisdictionId" : {
      "name" : "jurisdictionId",
      "in" : "path",
      "description" : "The identifier for the jurisdiction",
      "required" : true,
      "type" : "string"
    },
    "letterOfCreditId" : {
      "name" : "letterOfCreditId",
      "in" : "path",
      "description" : "The identifier for the letter of credit",
      "required" : true,
      "type" : "string"
    },
    "locationId" : {
      "name" : "locationId",
      "in" : "path",
      "description" : "The identifier for the location",
      "required" : true,
      "type" : "string"
    },
    "modifierId" : {
      "name" : "modifierId",
      "in" : "path",
      "description" : "The identifier for the modifier",
      "required" : true,
      "type" : "string"
    },
    "omitInclusions" : {
      "name" : "omitInclusions",
      "in" : "query",
      "description" : "Whether or not to omit the `included` properties on request and response schemas.  Defaults to `false`. See the documentation for more information. (Since 1.4.0)",
      "type" : "boolean",
      "default" : false,
      "x-gw-sinceVersion" : "1.4.0"
    },
    "pageOffset" : {
      "name" : "pageOffset",
      "in" : "query",
      "description" : "The offset of the first result to fetch when fetching a paginated set of results. The parameter is of the form `pageOffset=<number>` where the first result has an offset of 0. For example, `pageOffset=25` will skip the first 25 results in sorted order. If not specified, the default value is 0. See the documentation for more information about response pagination.",
      "type" : "string",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "pageSize" : {
      "name" : "pageSize",
      "in" : "query",
      "description" : "The maximum number of results to return in the response. The parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the default `pageSize` both depend on the specific API endpoint the request is made to. See the documentation for more information about response pagination.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "participatingPlanId" : {
      "name" : "participatingPlanId",
      "in" : "path",
      "description" : "The identifier for the participating plan",
      "required" : true,
      "type" : "string"
    },
    "paymentPlanId" : {
      "name" : "paymentPlanId",
      "in" : "path",
      "description" : "The identifier for the payment plan",
      "required" : true,
      "type" : "string"
    },
    "policyDriverMVRId" : {
      "name" : "policyDriverMVRId",
      "in" : "path",
      "description" : "The identifier for the policy driver motor vehicle record",
      "required" : true,
      "type" : "string"
    },
    "policyId" : {
      "name" : "policyId",
      "in" : "path",
      "description" : "The identifier for the policy",
      "required" : true,
      "type" : "string"
    },
    "prettyPrintSchema" : {
      "name" : "prettyPrint",
      "in" : "query",
      "description" : "Whether or not to pretty-print the returned schema, making it larger but more human readable.  Defaults to `false`.",
      "type" : "boolean",
      "default" : false
    },
    "retroRatingPlanId" : {
      "name" : "retroRatingPlanId",
      "in" : "path",
      "description" : "The identifier for the retrospective rating plan",
      "required" : true,
      "type" : "string"
    },
    "schEquipAddlInterestId" : {
      "name" : "schEquipAddlInterestId",
      "in" : "path",
      "description" : "The identifier for the scheduled equipment additional interest",
      "required" : true,
      "type" : "string"
    },
    "scheduledEquipmentId" : {
      "name" : "scheduledEquipmentId",
      "in" : "path",
      "description" : "The identifier for the scheduled equipment",
      "required" : true,
      "type" : "string"
    },
    "scheduledItemId" : {
      "name" : "scheduledItemId",
      "in" : "path",
      "description" : "The identifier for the scheduled item",
      "required" : true,
      "type" : "string"
    },
    "signId" : {
      "name" : "signId",
      "in" : "path",
      "description" : "The identifier for the sign",
      "required" : true,
      "type" : "string"
    },
    "signPartId" : {
      "name" : "signPartId",
      "in" : "path",
      "description" : "The identifier for the sign part",
      "required" : true,
      "type" : "string"
    },
    "sort" : {
      "name" : "sort",
      "in" : "query",
      "description" : "Controls the sorting of elements within a response. The sort parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where `<fields>` represents a comma-separated list of field names to sort on. Field names can be prefixed with `-` to request a descending sort, otherwise the sort will be ascending. See the documentation for more information.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "stateMultiplierId" : {
      "name" : "stateMultiplierId",
      "in" : "path",
      "description" : "The identifier for the state multiplier",
      "required" : true,
      "type" : "string"
    },
    "swimmingPoolId" : {
      "name" : "swimmingPoolId",
      "in" : "path",
      "description" : "The identifier for the swimming pool",
      "required" : true,
      "type" : "string"
    },
    "uwIssueId" : {
      "name" : "uwIssueId",
      "in" : "path",
      "description" : "The identifier for the underwriting issue (Since 1.2.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.2.0"
    },
    "uwReferralReasonId" : {
      "name" : "uwReferralReasonId",
      "in" : "path",
      "description" : "The identifier for the underwriting referral reason (Since 1.3.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.3.0"
    },
    "vehicleId" : {
      "name" : "vehicleId",
      "in" : "path",
      "description" : "The identifier for the vehicle",
      "required" : true,
      "type" : "string"
    },
    "vhcleAddlInterestId" : {
      "name" : "vhcleAddlInterestId",
      "in" : "path",
      "description" : "The identifier for the vehicle additional interest",
      "required" : true,
      "type" : "string"
    },
    "waiverOfSubroId" : {
      "name" : "waiverOfSubroId",
      "in" : "path",
      "description" : "The identifier for the waiver of subrogation",
      "required" : true,
      "type" : "string"
    }
  },
  "responses" : {
    "AuthenticationError" : {
      "description" : "401 error that is returned if the request's user cannot be authenticated",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "BadInput" : {
      "description" : "400 error that is returned if the input to this endpoint is not valid; this can happen because of missing required parameters, malformed json, json that does not validate against the declared schema, etc.",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "InternalServerError" : {
      "description" : "500 error that is returned if a server-side error prevented this request from being processed",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "NotAcceptable" : {
      "description" : "406 error that is returned if the Accept header provided by the client does not match any types produced by this endpoint",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "NotAuthorized" : {
      "description" : "403 error that is returned if the authenticated user is not authorized to access a given resource",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "NotFound" : {
      "description" : "404 error that is returned if the specified resource does not exist",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "OperationNotSupported" : {
      "description" : "405 error that is returned if the specified HTTP verb is not allowed on a given resource",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "ServiceUnavailable" : {
      "description" : "503 error that is returned if the server's runlevel is not adequate to service this request",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "UnsupportedContentType" : {
      "description" : "415 error that is returned if the Content-Type of the request is not consumable by this endpoint",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "security" : [ {
    "basicAuth" : [ ]
  } ],
  "definitions" : {
    "AUPersonalMotorLineData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/AUPersonalMotorLine"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "AUPersonalMotorLineRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AUPersonalMotorLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "AUPersonalMotorLineResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AUPersonalMotorLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "AccountContactData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountContact"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "AccountContactList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AccountContactData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountInclusions"
        }
      }
    },
    "AccountContactRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountContactData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountInclusions"
        }
      }
    },
    "AccountContactResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountContactData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountInclusions"
        }
      }
    },
    "AccountData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Account"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "AccountInclusions" : {
      "type" : "object",
      "properties" : {
        "Account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AccountData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "AccountContact" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AccountContactData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "AccountLocation" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AccountLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Activity" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ActivityData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ActivityPattern" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ActivityPatternData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "AdditionalNamedInsured" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AdditionalNamedInsuredData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Assignee" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssigneeData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Contingency" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ContingencyData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Cost" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CostData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Document" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DocumentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "DocumentContent" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DocumentContentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Job" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/JobData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "JobRoles" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/JobRolesData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "JobVersion" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/JobVersionData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Note" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/NoteData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "OOSConflicts" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/OOSConflictsData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PaymentInfo" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PaymentInfoData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PaymentPlan" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PaymentPlanData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Policy" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyContact" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyContactData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyLineData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyLocation" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyLocationQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "UWIssue" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UWIssueData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "UWIssueHistory" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UWIssueHistoryData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "UWReferralReason" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UWReferralReasonData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "AccountJobList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/JobData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountInclusions"
        }
      }
    },
    "AccountList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AccountData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountInclusions"
        }
      }
    },
    "AccountLocationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountLocation"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "AccountLocationList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AccountLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountInclusions"
        }
      }
    },
    "AccountLocationRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountLocationData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountInclusions"
        }
      }
    },
    "AccountLocationResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountLocationData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountInclusions"
        }
      }
    },
    "AccountPolicyList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountInclusions"
        }
      }
    },
    "AccountRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountInclusions"
        }
      }
    },
    "AccountResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountInclusions"
        }
      }
    },
    "AccountSearchRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountSearchRequestData"
        }
      }
    },
    "AccountSearchRequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/AccountSearchRequestAttributes"
        }
      }
    },
    "Activity" : {
      "type" : "object",
      "title" : "Activity",
      "description" : "An `Activity` is an assignable item that represents a task to be done, a decision to be made, or information to be aware of",
      "properties" : {
        "activityPattern" : {
          "type" : "string",
          "title" : "Activity pattern",
          "description" : "The code of the `ActivityPattern` used to create this activity and set its initial values",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "activityType" : {
          "type" : "object",
          "title" : "Activity type",
          "description" : "The type of this activity, such as `general` or `approval`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ActivityType"
          }
        },
        "approvalIssue" : {
          "type" : "string",
          "title" : "Approval issue",
          "description" : "The reason approval is needed. Only applicable to activities with an `activityType` of `approval`."
        },
        "approvalRationale" : {
          "type" : "string",
          "title" : "Approval rationale",
          "description" : "Rationale for approving or rejecting this activity. Only applicable to activities with an `activityType` of `approval`."
        },
        "approved" : {
          "type" : "boolean",
          "title" : "Approved",
          "description" : "This field is `true` if this activity has been approved, `false` if this activity has been rejected, and omitted otherwise. Only applicable to activities with an `activityType` of `approval`.",
          "readOnly" : true
        },
        "assignedByUser" : {
          "type" : "object",
          "title" : "Assigned by user",
          "description" : "A reference to the `User` who last assigned or re-assigned this activity",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "assignedGroup" : {
          "type" : "object",
          "title" : "Assigned group",
          "description" : "A reference to the `Group` that this activity is currently assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true
        },
        "assignedQueue" : {
          "type" : "object",
          "title" : "Assigned queue",
          "description" : "A reference to the `Queue` that this activity is currently assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true
        },
        "assignedUser" : {
          "type" : "object",
          "title" : "Assigned user",
          "description" : "A reference to the `User` that this activity is currently assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User",
            "sortable" : true
          }
        },
        "assignmentStatus" : {
          "type" : "object",
          "title" : "Assignment status",
          "description" : "The current assignment status of this activity, such as `assigned` or `unassigned`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "AssignmentStatus"
          }
        },
        "associatedRole" : {
          "type" : "object",
          "title" : "Associated role",
          "description" : "The role on the parent element that this activity is assigned to. For example, if this activity was created for a job, the activity might be assigned to the `Creator` or `Underwriter` role for that job.",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "UserRole"
          }
        },
        "closeDate" : {
          "type" : "string",
          "title" : "Close date",
          "description" : "The date and time when this activity was completed, skipped, approved, or rejected",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "closeUser" : {
          "type" : "object",
          "title" : "Close user",
          "description" : "A reference to the `User` that completed, skipped, approved, or rejected this activity",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `Activity` was created (Since 1.1.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this activity",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "dueDate" : {
          "type" : "string",
          "title" : "Due date",
          "description" : "Date and time by which a person should complete the activity. If not completed by this time, the activity is considered overdue. Not applicable to activities that represent events rather than tasks.",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "endDate" : {
          "type" : "string",
          "title" : "End date",
          "description" : "Date and time at which the activity is expected to end. Only applicable to activities that represent events.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "escalated" : {
          "type" : "boolean",
          "title" : "Escalated",
          "description" : "A `true` value for this field indicates that the activity has been escalated",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "escalationDate" : {
          "type" : "string",
          "title" : "Escalation date",
          "description" : "Date and time at which this activity will be escalated if it has not yet been completed",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "externallyOwned" : {
          "type" : "boolean",
          "title" : "Externally owned",
          "description" : "A `true` value for this field indicates that the activity is owned by a user or group outside of the insurer",
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Activity`",
          "readOnly" : true
        },
        "initialAssignment" : {
          "type" : "object",
          "title" : "Initial assignment",
          "description" : "The `Assignee` that this activity should be assigned to when it is first created",
          "$ref" : "#/definitions/Assignee",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "mandatory" : {
          "type" : "boolean",
          "title" : "Mandatory",
          "description" : "A `true` value for this field indicates that the activity is mandatory and cannot be skipped"
        },
        "priority" : {
          "type" : "object",
          "title" : "Priority",
          "description" : "The priority of this activity",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "Priority"
          }
        },
        "recurring" : {
          "type" : "boolean",
          "title" : "Recurring",
          "description" : "A `true` value indicates that this activity is recurring"
        },
        "startDate" : {
          "type" : "string",
          "title" : "Start date",
          "description" : "Date and time at which the activity is scheduled to begin. Only applicable to activities that represent events.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The status of this activity, such as `open` or `complete`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ActivityStatus"
          }
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "A brief title for the activity",
          "minLength" : 1,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        }
      }
    },
    "ActivityData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Activity"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ActivityList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ActivityData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "ActivityPattern" : {
      "type" : "object",
      "title" : "Activity pattern",
      "description" : "An `ActivityPattern` is a template for an activity, and is used to create a new activity and set defaults for some of its fields",
      "properties" : {
        "activityClass" : {
          "type" : "object",
          "title" : "Activity class",
          "description" : "The class of activity that this activity pattern creates, such as `task` or `event`",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ActivityClass"
          }
        },
        "activityType" : {
          "type" : "object",
          "title" : "Activity type",
          "description" : "The type of activity that this activity pattern creates, such as `general` or `approval`",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ActivityType"
          }
        },
        "category" : {
          "type" : "object",
          "title" : "Category",
          "description" : "The category of the activity pattern. Used to help organize `ActivityPatterns` when presenting them to a user.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ActivityCategory"
          }
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code that uniquely identifies this `ActivityPattern`",
          "x-gw-extensions" : {
            "createOnly" : true,
            "sortable" : true
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The default `description` for activities created from this activity pattern"
        },
        "dueDate" : {
          "type" : "string",
          "title" : "Due date",
          "description" : "The default `dueDate` for activities created from this activity pattern, calculated based on the current date and time",
          "format" : "date-time"
        },
        "escalationDate" : {
          "type" : "string",
          "title" : "Escalation date",
          "description" : "The default `escalationDate` for activities created from this activity pattern, calculated based on the current date and time",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `ActivityPattern`"
        },
        "mandatory" : {
          "type" : "boolean",
          "title" : "Mandatory",
          "description" : "The default `mandatory` value for activities created from this activity pattern"
        },
        "patternLevel" : {
          "type" : "object",
          "title" : "Pattern level",
          "description" : "The type of parent element, such as `Job` or `Account`, that this activity pattern applies to",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ActivityPatternLevel"
          }
        },
        "priority" : {
          "type" : "object",
          "title" : "Priority",
          "description" : "The default `priority` for activities created from this activity pattern",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "Priority"
          }
        },
        "recurring" : {
          "type" : "boolean",
          "title" : "Recurring",
          "description" : "The default `recurring` value for activities created from this activity pattern"
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "The default `subject` for activities created from this activity pattern"
        }
      }
    },
    "ActivityPatternData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityPattern"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ActivityPatternList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ActivityPatternData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ActivityRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityRequestInclusions"
        }
      }
    },
    "ActivityRequestInclusions" : {
      "type" : "object",
      "properties" : {
        "Note" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/NoteData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ActivityResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "ActivityResponseInclusions" : {
      "type" : "object",
      "properties" : {
        "Assignee" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssigneeData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Note" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/NoteData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "AdditionalNamedInsuredData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to request envelopes. See the Cloud API documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included on the response due to use of the `include` query parameter on the request. Only applicable to response envelopes. See the Cloud API documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the Cloud API documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/AdditionalNamedInsured"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to response envelopes.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to request envelopes. See the Cloud API documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to request envelopes. See the Cloud API documentation for more information about request inclusion."
        }
      }
    },
    "AdditionalNamedInsuredList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AdditionalNamedInsuredData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "AdditionalNamedInsuredRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AdditionalNamedInsuredData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "AdditionalNamedInsuredResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AdditionalNamedInsuredData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "Address" : {
      "type" : "object",
      "title" : "Address",
      "description" : "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
      "x-gw-extensions" : {
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the address",
          "x-gw-nullable" : true
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the address",
          "x-gw-nullable" : true
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the address",
          "x-gw-nullable" : true
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the address (Since 1.2.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AddressType"
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the address",
          "x-gw-nullable" : true
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of the address (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
          "readOnly" : true
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Address`",
          "readOnly" : true
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "spatialPoint" : {
          "type" : "object",
          "title" : "Spatial point",
          "description" : "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
          "$ref" : "#/definitions/SpatialPoint",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "validUntil" : {
          "type" : "string",
          "title" : "Valid until",
          "description" : "The date and time that the address is valid until (Since 1.2.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        }
      }
    },
    "Assignee" : {
      "type" : "object",
      "title" : "Assignee",
      "description" : "An `Assignee` represents the target of an assignment action, such as a user/group combination, assignment queue, or automatic rule-based assignment",
      "properties" : {
        "assigneeId" : {
          "type" : "string",
          "title" : "Assignee ID",
          "description" : "Unique ID to reference this `Assignee` for includes (Since 1.4.0)",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true
        },
        "autoAssign" : {
          "type" : "boolean",
          "title" : "Auto assign",
          "description" : "Set to `true` to indicate the assignment should be done automatically by the system. Cannot be combined with any other fields."
        },
        "groupId" : {
          "type" : "string",
          "title" : "Group ID",
          "description" : "The ID of the `Group` that the resource should be assigned to. If specified without the `userId` field, the `User` within the `Group` is selected by assignment rules. If specified along with the `userId` field, that specific `User` is assigned the element."
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "A human-readable name for the type of assignment that this `Assignee` represents",
          "readOnly" : true
        },
        "queueId" : {
          "type" : "string",
          "title" : "Queue ID",
          "description" : "The ID of the `Queue` that the resource should be assigned to. Cannot be combined with any other fields."
        },
        "role" : {
          "type" : "object",
          "title" : "Role",
          "description" : "Requests assignment of the element to the user that has the specified role on the element or its parent. Cannot be combined with any other fields.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UserRole"
          }
        },
        "userId" : {
          "type" : "string",
          "title" : "User ID",
          "description" : "The ID of the `User` that the resource should be assigned to. The `groupId` field must also be specified if the `userId` field is specified, and the `User` must be a member of that `Group` and have permission to be assigned the element."
        }
      }
    },
    "AssigneeData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Assignee"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "AssigneeList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssigneeData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "BOPBldgAddlInterestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPBldgAddlInterest"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "BOPBldgAddlInterestList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BOPBldgAddlInterestData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "BOPBldgAddlInterestRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPBldgAddlInterestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "BOPBldgAddlInterestResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPBldgAddlInterestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "BOPBuildingData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPBuilding"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "BOPBuildingList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BOPBuildingData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "BOPBuildingRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPBuildingData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "BOPBuildingResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPBuildingData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "BOPLineData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPLine"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "BOPLineRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "BOPLineResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "BOPLocationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPLocation"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "BOPLocationList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BOPLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "BOPLocationRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPLocationData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "BOPLocationResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPLocationData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "BOPScheduledEquipmentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPScheduledEquipment"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "BOPScheduledEquipmentList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BOPScheduledEquipmentData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "BOPScheduledEquipmentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPScheduledEquipmentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "BOPScheduledEquipmentResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/BOPScheduledEquipmentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CPBlanketData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CPBlanket"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CPBlanketList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CPBlanketData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "CPBlanketRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CPBlanketData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CPBlanketResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CPBlanketData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CPBldgAddlInterestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CPBldgAddlInterest"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CPBldgAddlInterestList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CPBldgAddlInterestData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "CPBldgAddlInterestRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CPBldgAddlInterestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CPBldgAddlInterestResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CPBldgAddlInterestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CPBuildingData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CPBuilding"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CPBuildingList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CPBuildingData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "CPBuildingRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CPBuildingData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CPBuildingResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CPBuildingData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CPLineData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CPLine"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CPLineRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CPLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CPLineResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CPLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CPLocationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CPLocation"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CPLocationList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CPLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "CPLocationRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CPLocationData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CPLocationResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CPLocationData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CompareJobsData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CompareJobsAttributes"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CompareJobsRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CompareJobsData"
        }
      }
    },
    "CompareJobsResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CompareJobsResponseData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CompareJobsResponseData" : {
      "type" : "object",
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/JobComparisonDiffs"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "Contact" : {
      "type" : "object",
      "title" : "Contact",
      "description" : "A `Contact` represents a person or company",
      "properties" : {
        "addressBookUID" : {
          "type" : "string",
          "title" : "Address book UID",
          "description" : "The unique ID of this `Contact` within the contact management system. Only applicable if the `Contact` has been linked to a contact management system.",
          "x-gw-nullable" : true
        },
        "cellPhone" : {
          "type" : "object",
          "title" : "Cell phone",
          "description" : "The person's mobile phone number. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The name of the company represented by this `Contact`. Only applicable for a `Contact` that represents a company.",
          "x-gw-extensions" : {
            "entitySubtype" : "Company"
          }
        },
        "dateOfBirth" : {
          "type" : "string",
          "title" : "Date of birth",
          "description" : "The person's date of birth. Only applicable for a `Contact` that represents a person.",
          "format" : "date",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now",
            "entitySubtype" : "Person"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "A formatted representation of the full name for this `Contact', including all applicable fields such as `firstName` or `lastName`",
          "readOnly" : true,
          "x-gw-nullable" : true
        },
        "emailAddress1" : {
          "type" : "string",
          "title" : "E-mail address 1",
          "description" : "The contact's primary e-mail address",
          "x-gw-nullable" : true
        },
        "emailAddress2" : {
          "type" : "string",
          "title" : "E-mail address 2",
          "description" : "The contact's secondary e-mail address",
          "x-gw-nullable" : true
        },
        "externalId" : {
          "type" : "string",
          "title" : "External ID",
          "description" : "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The persons's first name. Only applicable for a `Contact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "homePhone" : {
          "type" : "object",
          "title" : "Home phone",
          "description" : "The person's home phone number. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Contact`",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The person's last name. Only applicable for a `Contact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "preferred" : {
          "type" : "boolean",
          "title" : "Preferred",
          "description" : "A `true` value for this field indicates that the vendor is one of the insurer's preferred vendors. Only applicable for a `Contact` that represents a vendor.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : [ "CompanyVendor", "PersonVendor" ]
          }
        },
        "primaryAddress" : {
          "type" : "object",
          "title" : "Primary address",
          "description" : "The contact's primary address",
          "$ref" : "#/definitions/Address",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "primaryLanguage" : {
          "type" : "object",
          "title" : "Primary language",
          "description" : "The contact's primary language",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "primaryLocale" : {
          "type" : "object",
          "title" : "Primary locale",
          "description" : "The contact's primary locale",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LocaleType"
          }
        },
        "primaryPhone" : {
          "type" : "string",
          "title" : "Primary phone",
          "description" : "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
          "readOnly" : true
        },
        "primaryPhoneType" : {
          "type" : "object",
          "title" : "Primary phone type",
          "description" : "The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "PrimaryPhoneType"
          }
        },
        "subtype" : {
          "type" : "object",
          "title" : "Subtype",
          "description" : "The specific type of contact that this `Contact` represents, such as `Person` or `Company`. The set of fields that can be set on a `Contact` depend on its `subtype`.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "typelist" : "Contact"
          }
        },
        "taxId" : {
          "type" : "string",
          "title" : "Tax ID",
          "description" : "The contact's tax ID"
        },
        "workPhone" : {
          "type" : "object",
          "title" : "Work phone",
          "description" : "The contact's work phone number, if this `Contact` represents a person, or the business's phone number, if this `Contact` represents a company",
          "$ref" : "#/definitions/PhoneNumber",
          "x-gw-nullable" : true
        }
      }
    },
    "ContingencyData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Contingency"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ContingencyList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ContingencyData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ContingencyRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ContingencyData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ContingencyResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ContingencyData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ContractorsEquipPartData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ContractorsEquipPart"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ContractorsEquipPartList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ContractorsEquipPartData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ContractorsEquipPartRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ContractorsEquipPartData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ContractorsEquipPartResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ContractorsEquipPartData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ContractorsEquipmentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ContractorsEquipment"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ContractorsEquipmentList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ContractorsEquipmentData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ContractorsEquipmentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ContractorsEquipmentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ContractorsEquipmentResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ContractorsEquipmentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CostData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Cost"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CostList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CostData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CoverageData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Coverage"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CoverageList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CoverageRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CoverageData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CoverageResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CoverageData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "CreateCancellationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateCancellationAttributes"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CreateCancellationRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateCancellationData"
        }
      }
    },
    "CreateIssuanceData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateIssuanceAttributes"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CreateIssuanceRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateIssuanceData"
        }
      }
    },
    "CreatePolicyChangeData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CreatePolicyChangeAttributes"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CreatePolicyChangeRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CreatePolicyChangeData"
        }
      }
    },
    "CreateReinstatementData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateReinstatementAttributes"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CreateReinstatementRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateReinstatementData"
        }
      }
    },
    "CreateRenewalData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateRenewalAttributes"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CreateRenewalRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateRenewalData"
        }
      }
    },
    "CreateRewriteData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateRewriteAttributes"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CreateRewriteNewAccountData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateRewriteNewAccountAttributes"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CreateRewriteNewAccountRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateRewriteNewAccountData"
        }
      }
    },
    "CreateRewriteRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CreateRewriteData"
        }
      }
    },
    "DataEnvelope" : {
      "type" : "object",
      "title" : "Data envelope",
      "description" : "Data envelope for requests and responses for individual elements. The primary data for the element will be in the `attributes` field.",
      "properties" : {
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "DataListEnvelope" : {
      "type" : "object",
      "title" : "Data list envelope",
      "description" : "Data envelope for responses for lists of elements. The primary list of elements will be in the `data` field.",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        }
      }
    },
    "Document" : {
      "type" : "object",
      "title" : "Document",
      "description" : "A `Document` represents a document within the application, which can have additional metadata such as the author of the document or a specific security level. The actual contents of the document are generally stored in a separate document management system that this application is linked to. (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "properties" : {
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "author" : {
          "type" : "string",
          "title" : "Author",
          "description" : "The name of the person who created this document",
          "x-gw-nullable" : true
        },
        "contingency" : {
          "type" : "object",
          "title" : "Contingency",
          "description" : "A reference to the `Contingency` that this document is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Contingency"
          }
        },
        "dateModified" : {
          "type" : "string",
          "title" : "Date modified",
          "description" : "The date and time that this `Document` was most recently updated",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of this document",
          "x-gw-nullable" : true
        },
        "docUID" : {
          "type" : "string",
          "title" : "Document UID",
          "description" : "The unique identifier for this `Document` in the linked document management system. The exact format of the identifier depends upon the specifics of the document management system the application is linked to.",
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Document`",
          "readOnly" : true
        },
        "inbound" : {
          "type" : "boolean",
          "title" : "Inbound",
          "description" : "This field indicates whether this document is considered to be inbound, outbound, or neither",
          "x-gw-nullable" : true
        },
        "job" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the `Job` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Job"
          }
        },
        "language" : {
          "type" : "object",
          "title" : "Language",
          "description" : "The language in which this document was produced",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "mimeType" : {
          "type" : "string",
          "title" : "MIME type",
          "description" : "The MIME type of this document, such as `application/msword` for a Microsoft Word document"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this document",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          }
        },
        "obsolete" : {
          "type" : "boolean",
          "title" : "Obsolete",
          "description" : "Setting this field to `true` indicates that the information in this document can no longer be relied upon to be current and relevant. This is often used instead of deletion to preserve history.",
          "x-gw-nullable" : true
        },
        "policy" : {
          "type" : "object",
          "title" : "Policy",
          "description" : "A reference to the `Policy` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "recipient" : {
          "type" : "string",
          "title" : "Recipient",
          "description" : "The name of the intended recipient of this document",
          "x-gw-nullable" : true
        },
        "section" : {
          "type" : "object",
          "title" : "Section",
          "description" : "The section to which this document belongs",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "DocumentSection"
          }
        },
        "securityType" : {
          "type" : "object",
          "title" : "Security type",
          "description" : "The security level that has been assigned to this document",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DocumentSecurityType"
          }
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The current status of this document, such as `draft` or `approved`",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "typelist" : "DocumentStatusType"
          }
        },
        "type" : {
          "type" : "object",
          "title" : "Type",
          "description" : "The specific type of document",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "requiredForCreate" : true,
            "typelist" : "DocumentType"
          }
        }
      }
    },
    "DocumentContent" : {
      "type" : "object",
      "title" : "Document content",
      "description" : "The contents of a `Document` (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "properties" : {
        "contents" : {
          "type" : "string",
          "title" : "Contents",
          "description" : "The contents of this document as a Base64-encoded string",
          "format" : "byte",
          "readOnly" : true
        },
        "responseMimeType" : {
          "type" : "string",
          "title" : "Response MIME type",
          "description" : "The MIME type of this document's contents, such as `application/msword` for a Microsoft Word document",
          "readOnly" : true
        },
        "url" : {
          "type" : "string",
          "title" : "URL",
          "description" : "The URL of this document within the linked document management system",
          "readOnly" : true
        }
      }
    },
    "DocumentContentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/DocumentContent"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "DocumentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Document"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "DocumentList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DocumentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/DocumentResponseInclusions"
        }
      }
    },
    "DocumentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/DocumentData"
        }
      }
    },
    "DocumentResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/DocumentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/DocumentResponseInclusions"
        }
      }
    },
    "DocumentResponseInclusions" : {
      "type" : "object",
      "properties" : {
        "DocumentContent" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DocumentContentData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "DwellingAnimalData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/DwellingAnimal"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "DwellingAnimalList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DwellingAnimalData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "DwellingAnimalRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/DwellingAnimalData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "DwellingAnimalResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/DwellingAnimalData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "DwellingHazardData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/DwellingHazard"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "DwellingHazardList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DwellingHazardData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "DwellingHazardRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/DwellingHazardData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "DwellingHazardResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/DwellingHazardData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ExclusiveStateSet" : {
      "type" : "object",
      "title" : "Exclusive state set",
      "description" : "A set of states that can be used either as an inclusive set or an exclusive set (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "required" : [ "inclusionType", "states" ],
      "properties" : {
        "inclusionType" : {
          "type" : "string",
          "title" : "Inclusion type",
          "description" : "Whether the set of states is inclusive or exclusive",
          "enum" : [ "exclusive", "inclusive" ]
        },
        "states" : {
          "type" : "array",
          "title" : "States",
          "description" : "The states that comprise the set",
          "minItems" : 1,
          "items" : {
            "type" : "string",
            "x-gw-type" : "typekey.State"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "GLExposureData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/GLExposure"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "GLExposureList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/GLExposureData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "GLExposureRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/GLExposureData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "GLExposureResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/GLExposureData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "GLLineData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/GLLine"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "GLLineRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/GLLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "GLLineResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/GLLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "GenericRelation" : {
      "type" : "object",
      "title" : "Generic relation",
      "description" : "A reference to a related element",
      "required" : [ "id", "type" ],
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the referenced element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "GroupDetail" : {
      "type" : "object",
      "title" : "Group detail",
      "description" : "Used to represent a reference to a `Group`",
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The name of the `Group`"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Group`"
        }
      }
    },
    "GroupReference" : {
      "type" : "object",
      "title" : "Group reference",
      "description" : "A reference to `Group` element (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "branchCode" : {
          "type" : "string",
          "title" : "Branch code",
          "description" : "The `branchCode` of the group",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the group"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced `Group` within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "HOPCoveragePartData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPCoveragePart"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "HOPCoveragePartList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/HOPCoveragePartData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "HOPCoveragePartRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPCoveragePartData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "HOPCoveragePartResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPCoveragePartData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "HOPDwellAddlInterestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPDwellAddlInterest"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "HOPDwellAddlInterestList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/HOPDwellAddlInterestData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "HOPDwellAddlInterestRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPDwellAddlInterestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "HOPDwellAddlInterestResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPDwellAddlInterestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "HOPDwellingData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPDwelling"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "HOPDwellingList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/HOPDwellingData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "HOPDwellingRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPDwellingData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "HOPDwellingResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPDwellingData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "HOPLineData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPLine"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "HOPLineRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "HOPLineResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "HOPSwimmingPoolData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPSwimmingPool"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "HOPSwimmingPoolList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/HOPSwimmingPoolData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "HOPSwimmingPoolRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPSwimmingPoolData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "HOPSwimmingPoolResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/HOPSwimmingPoolData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMAccountsRecPartData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/IMAccountsRecPart"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "IMAccountsRecPartList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMAccountsRecPartData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "IMAccountsRecPartRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMAccountsRecPartData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMAccountsRecPartResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMAccountsRecPartData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMAccountsReceivableData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/IMAccountsReceivable"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "IMAccountsReceivableList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMAccountsReceivableData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "IMAccountsReceivableRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMAccountsReceivableData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMAccountsReceivableResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMAccountsReceivableData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMBuildingData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/IMBuilding"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "IMBuildingList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMBuildingData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "IMBuildingRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMBuildingData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMBuildingResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMBuildingData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMExcludedAccountData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/IMExcludedAccount"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "IMExcludedAccountList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMExcludedAccountData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "IMExcludedAccountRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMExcludedAccountData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMExcludedAccountResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMExcludedAccountData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMLineData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/IMLine"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "IMLineRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMLineResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMLocationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/IMLocation"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "IMLocationList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "IMLocationRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMLocationData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMLocationResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMLocationData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMSchEquipAddlInterestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/IMSchEquipAddlInterest"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "IMSchEquipAddlInterestList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMSchEquipAddlInterestData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "IMSchEquipAddlInterestRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMSchEquipAddlInterestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMSchEquipAddlInterestResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMSchEquipAddlInterestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMSignData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/IMSign"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "IMSignList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMSignData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "IMSignPartData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/IMSignPart"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "IMSignPartList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMSignPartData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "IMSignPartRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMSignPartData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMSignPartResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMSignPartData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMSignRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMSignData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "IMSignResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IMSignData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "InclusionPersonData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/InclusionPerson"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "InclusionPersonList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/InclusionPersonData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "InclusionPersonRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/InclusionPersonData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "InclusionPersonResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/InclusionPersonData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "JobData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Job"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "JobResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/JobData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "JobRoleData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/JobRole"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "JobRolesData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/JobRoles"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "JobRolesResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/JobRolesData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "JobVersionData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/JobVersion"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "LinkObject" : {
      "type" : "object",
      "title" : "Linked object",
      "description" : "A standard HTTP link",
      "properties" : {
        "href" : {
          "type" : "string",
          "title" : "HREF",
          "description" : "The URL of the link"
        },
        "methods" : {
          "type" : "array",
          "title" : "Methods",
          "description" : "An array of HTTP method names that can be used with the link URL",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "Links" : {
      "type" : "object",
      "title" : "Links",
      "description" : "A set of named links",
      "additionalProperties" : {
        "type" : "object",
        "title" : "Links",
        "description" : "A set of named links. Each key represents the name of the link, such as a child of the current element, an action that can be taken on it, or a navigation option.",
        "$ref" : "#/definitions/LinkObject"
      }
    },
    "MergeAccountData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/MergeAccountAttributes"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "MergeAccountRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/MergeAccountData"
        }
      }
    },
    "MetaObject" : {
      "type" : "object",
      "title" : "Meta object",
      "description" : "An element",
      "properties" : {
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "The checksum of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "The set of links related to the element",
          "$ref" : "#/definitions/Links"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "related" : {
          "type" : "object",
          "title" : "Related collections",
          "description" : "The set of related collections included with the element",
          "$ref" : "#/definitions/RelatedCollections"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of element"
        }
      }
    },
    "ModifierData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Modifier"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ModifierList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ModifierData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ModifierRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ModifierData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ModifierResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ModifierData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "MonetaryAmount" : {
      "type" : "object",
      "title" : "Monetary amount",
      "description" : "A monetary amount that combines a decimal amount with a currency",
      "required" : [ "amount", "currency" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "title" : "Amount",
          "description" : "The decimal amount",
          "format" : "gw-bigdecimal"
        },
        "currency" : {
          "type" : "string",
          "title" : "Currency",
          "description" : "The currency for the amount",
          "x-gw-type" : "typekey.Currency"
        }
      }
    },
    "MovePoliciesData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/MovePoliciesAttributes"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "MovePoliciesRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/MovePoliciesData"
        }
      }
    },
    "Note" : {
      "type" : "object",
      "title" : "Note",
      "description" : "A `Note` is used to capture any sort of additional text that needs to be associated with another business object. A `Note` consists of a `body` that contains the actual text of the note, along with other fields the represent additional metadata about the note.",
      "properties" : {
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "author" : {
          "type" : "object",
          "title" : "Author",
          "description" : "The `User` who authored this note",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "body" : {
          "type" : "string",
          "title" : "Body",
          "description" : "The text of this note",
          "minLength" : 1,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "requiredForCreate" : true
          }
        },
        "bodySummary" : {
          "type" : "string",
          "title" : "Body summary",
          "description" : "A shorter summary of this note's `body` field, more suitable for displaying in a list of notes",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "summary" ]
          }
        },
        "confidential" : {
          "type" : "boolean",
          "title" : "Confidential",
          "description" : "A `true` value for this field indicates that the note contains confidential information"
        },
        "contingency" : {
          "type" : "object",
          "title" : "Contingency",
          "description" : "A reference to the `Contingency` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Contingency"
          }
        },
        "createdDate" : {
          "type" : "string",
          "title" : "Created date",
          "description" : "The date and time that this `Note` was created",
          "format" : "date-time",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "Unique identifier of this `Note`",
          "readOnly" : true
        },
        "job" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the `Job` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Job"
          }
        },
        "policy" : {
          "type" : "object",
          "title" : "Policy",
          "description" : "A reference to the `Policy` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "securityType" : {
          "type" : "object",
          "title" : "Security type",
          "description" : "The security level that has been assigned to this note",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "NoteSecurityType"
          }
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "The subject of this note",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "topic" : {
          "type" : "object",
          "title" : "Topic",
          "description" : "The topic of this note",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "NoteTopicType"
          }
        },
        "updateTime" : {
          "type" : "string",
          "title" : "Update time",
          "description" : "The date and time when this `Note` was most recently updated",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        }
      }
    },
    "NoteData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Note"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "NoteList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/NoteData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "NoteRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/NoteData"
        }
      }
    },
    "NoteResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/NoteData"
        }
      }
    },
    "OOSConflictsData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/OOSConflicts"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PAVhcleAddlInterestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PAVhcleAddlInterest"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PAVhcleAddlInterestList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PAVhcleAddlInterestData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "PAVhcleAddlInterestRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PAVhcleAddlInterestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PAVhcleAddlInterestResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PAVhcleAddlInterestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PMADriverData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PMADriver"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PMADriverList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PMADriverData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PMADriverRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PMADriverData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PMADriverResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PMADriverData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PMAVehicleData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PMAVehicle"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PMAVehicleList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PMAVehicleData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PMAVehicleRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PMAVehicleData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PMAVehicleResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PMAVehicleData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PaymentInfoData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PaymentInfo"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PaymentInfoRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PaymentInfoData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PaymentInfoResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PaymentInfoData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PaymentPlanData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PaymentPlan"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PaymentPlanList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PaymentPlanData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PaymentPlanResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PaymentPlanData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PersonalAutoLineData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PersonalAutoLine"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PersonalAutoLineRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PersonalAutoLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PersonalAutoLineResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PersonalAutoLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PersonalVehicleData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PersonalVehicle"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PersonalVehicleList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PersonalVehicleData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "PersonalVehicleRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PersonalVehicleData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PersonalVehicleResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PersonalVehicleData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PhoneNumber" : {
      "type" : "object",
      "title" : "Phone number",
      "description" : "A phone number, with different components of the number broken out as separate fields",
      "required" : [ "countryCode", "number" ],
      "properties" : {
        "countryCode" : {
          "type" : "object",
          "title" : "Country code",
          "description" : "The country code for the phone number",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "PhoneCountryCode"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The phone number formatted in a standardized way",
          "readOnly" : true
        },
        "extension" : {
          "type" : "string",
          "title" : "Extension",
          "description" : "The extension for the phone number",
          "x-gw-nullable" : true
        },
        "number" : {
          "type" : "string",
          "title" : "Number",
          "description" : "The actual phone number, including area code, but excluding the country code and extension"
        }
      }
    },
    "PolicyContactData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyContact"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PolicyContactList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyContactData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyContactRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyContactData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyContactResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyContactData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Policy"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PolicyDriverMVRData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyDriverMVR"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PolicyDriverMVRList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyDriverMVRData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "PolicyDriverMVRRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyDriverMVRData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyDriverMVRResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyDriverMVRData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyJobList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/JobData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyLineData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyLine"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PolicyLineList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyLineData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyLineRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyLineResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyLocationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyLocation"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PolicyLocationList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyLocationRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyLocationData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyLocationResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyLocationData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicyPeriodInclusions" : {
      "type" : "object",
      "properties" : {
        "AUPersonalMotorLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AUPersonalMotorLineData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "AUPersonalMotorLineCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AccountData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "AccountContact" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AccountContactData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "AccountLocation" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AccountLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Activity" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ActivityData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ActivityPattern" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ActivityPatternData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "AdditionalNamedInsured" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AdditionalNamedInsuredData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Assignee" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssigneeData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "BOPBldgAddlInterest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BOPBldgAddlInterestData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "BOPBuilding" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BOPBuildingData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "BOPBuildingCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "BOPLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BOPLineData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "BOPLineCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "BOPLineModifier" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ModifierData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "BOPLineQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "BOPLocation" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BOPLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "BOPLocationCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "BOPLocationQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "BOPScheduledEquipment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BOPScheduledEquipmentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "CPBlanket" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CPBlanketData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "CPBlanketCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "CPBldgAddlInterest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CPBldgAddlInterestData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "CPBuilding" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CPBuildingData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "CPBuildingCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "CPLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CPLineData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "CPLineModifier" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ModifierData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "CPLineQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "CPLocation" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CPLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "CPLocationQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Contingency" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ContingencyData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ContractorsEquipPart" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ContractorsEquipPartData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ContractorsEquipPartCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ContractorsEquipment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ContractorsEquipmentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ContractorsEquipmentCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Cost" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CostData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Document" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DocumentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "DocumentContent" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DocumentContentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "DwellingAnimal" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DwellingAnimalData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "DwellingHazard" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DwellingHazardData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "GLExposure" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/GLExposureData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "GLLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/GLLineData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "GLLineCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "GLLineModifier" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ModifierData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "GLLineQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPCoveragePart" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/HOPCoveragePartData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPCoveragePartModifier" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ModifierData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPDwellAddlInterest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/HOPDwellAddlInterestData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPDwelling" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/HOPDwellingData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPDwellingCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPDwellingModifier" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ModifierData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPDwellingQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPDwellingScheduledItem" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ScheduledItemData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/HOPLineData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPLineCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPLineModifier" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ModifierData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPLineQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPLineScheduledItem" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ScheduledItemData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "HOPSwimmingPool" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/HOPSwimmingPoolData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMAccountsRecPart" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMAccountsRecPartData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMAccountsRecPartCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMAccountsReceivable" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMAccountsReceivableData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMAccountsReceivableCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMBuilding" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMBuildingData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMExcludedAccount" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMExcludedAccountData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMLineData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMLineQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMLocation" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMLocationQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMSchEquipAddlInterest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMSchEquipAddlInterestData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMSign" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMSignData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMSignCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "IMSignPart" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IMSignPartData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "InclusionPerson" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/InclusionPersonData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Job" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/JobData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "JobRoles" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/JobRolesData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "JobVersion" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/JobVersionData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Note" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/NoteData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "OOSConflicts" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/OOSConflictsData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PAVhcleAddlInterest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PAVhcleAddlInterestData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PMADriver" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PMADriverData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PMAVehicle" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PMAVehicleData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PMAVehicleCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PaymentInfo" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PaymentInfoData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PaymentPlan" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PaymentPlanData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PersonalAutoLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PersonalAutoLineData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PersonalAutoLineCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PersonalAutoLineModifier" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ModifierData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PersonalAutoLineQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PersonalVehicle" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PersonalVehicleData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PersonalVehicleCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PersonalVehicleModifier" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ModifierData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Policy" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyContact" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyContactData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyDriverMVR" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyDriverMVRData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyLineData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyLocation" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyLocationQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "UWIssue" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UWIssueData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "UWIssueHistory" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UWIssueHistoryData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "UWReferralReason" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UWReferralReasonData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "VehicleDriver" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/VehicleDriverData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WCAircraftSeat" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCAircraftSeatData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WCCoveredEmployee" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCCoveredEmployeeData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WCExcludedWorkplace" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCExcludedWorkplaceData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WCJurisdiction" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCJurisdictionData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WCJurisdictionCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WCJurisdictionModifier" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ModifierData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WCParticipatingPlan" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCParticipatingPlanData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WCRetroRatingLetterOfCredit" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCRetroRatingLetterOfCreditData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WCRetrospectiveRatingPlan" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCRetrospectiveRatingPlanData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WCStateMultiplier" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCStateMultiplierData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WCWaiverOfSubro" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCWaiverOfSubroData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WorkersCompLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WorkersCompLineData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WorkersCompLineCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "WorkersCompLineQuestions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/QuestionAnswersData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "PolicyResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "PolicySearchRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicySearchRequestData"
        }
      }
    },
    "PolicySearchRequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicySearchRequestAttributes"
        }
      }
    },
    "PolicySearchResultData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicySearchResult"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PolicySearchResultList" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicySearchResultData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ProducerCodeData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ProducerCode"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ProducerCodeList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ProducerCodeData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "QuestionAnswersData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/QuestionAnswers"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "QuestionAnswersRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/QuestionAnswersData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "QuestionAnswersResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/QuestionAnswersData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "QueueDetail" : {
      "type" : "object",
      "title" : "Queue detail",
      "description" : "Used to represent a reference to a `Queue`",
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The name of the `Queue`"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Queue`"
        }
      }
    },
    "ReferenceTableEntry" : {
      "type" : "object",
      "title" : "Reference table entry",
      "description" : "A single element from a reference table. Reference tables typically represent things like standardized lists of codes.",
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code of the reference table entry"
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of the reference table entry"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        }
      }
    },
    "RelatedCollection" : {
      "type" : "object",
      "title" : "Related collection",
      "description" : "A set of element references that are related to the element in some way. Used to link elements with their relations when a request is made using the `include` query parameter.",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements included in the `data` array"
        },
        "data" : {
          "type" : "array",
          "title" : "Data",
          "description" : "The list of references to the related elements",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/SimpleReference"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements in the related set of elements. Only present if the `includeTotal` query parameter is used to request that the total be calculated for an included collection."
        }
      }
    },
    "RelatedCollections" : {
      "type" : "object",
      "title" : "Related collections",
      "description" : "A set of `RelatedCollection` elements that contain references to elements included using the `include` query parameter on a request",
      "additionalProperties" : {
        "type" : "object",
        "title" : "Related collections",
        "description" : "The related collections. Each key in this object will match the name of the inclusion requested via the `include` query parameter.",
        "$ref" : "#/definitions/RelatedCollection"
      }
    },
    "ReviewJobDiffResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ReviewJobDiffResponseData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ReviewJobDiffResponseData" : {
      "type" : "object",
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/JobReviewDiffs"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ScheduledItemData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ScheduledItem"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ScheduledItemList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ScheduledItemData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ScheduledItemRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ScheduledItemData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "ScheduledItemResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ScheduledItemData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "SetPreRenewalDirectionData" : {
      "type" : "object",
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PreRenewalDirectionRequest"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "SetPreRenewalDirectionRequest" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/SetPreRenewalDirectionData"
        }
      }
    },
    "SimpleReference" : {
      "type" : "object",
      "title" : "Simple reference",
      "description" : "A reference to an element",
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "SpatialPoint" : {
      "type" : "object",
      "title" : "Spatial point",
      "description" : "An object that combines a latitude with a longitude (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "required" : [ "latitude", "longitude" ],
      "properties" : {
        "latitude" : {
          "type" : "string",
          "title" : "Latitude",
          "description" : "The latitude of the spatial point",
          "format" : "gw-bigdecimal"
        },
        "longitude" : {
          "type" : "string",
          "title" : "Longitude",
          "description" : "The longitude of the spatial point",
          "format" : "gw-bigdecimal"
        }
      }
    },
    "SplitPeriod" : {
      "type" : "object",
      "required" : [ "splitDate" ],
      "properties" : {
        "splitDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "SplitPeriodData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/SplitPeriod"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "SplitPeriodRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/SplitPeriodData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "TypeFilter" : {
      "type" : "object",
      "title" : "TypeFilter",
      "description" : "A `TypeFilter` represents a filtered set of the `TypeKey` values from a `TypeList`",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this `TypeFilter`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this `TypeFilter`"
        },
        "typeKeys" : {
          "type" : "array",
          "title" : "TypeKeys",
          "description" : "The `code` values for the `TypeKeys` that are included by this `TypeFilter`",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "TypeKey" : {
      "type" : "object",
      "title" : "TypeKey",
      "description" : "A `TypeKey` represents one of the possible enumerated values of a `TypeList`",
      "properties" : {
        "categories" : {
          "type" : "array",
          "title" : "Categories",
          "description" : "The categories that this `TypeKey` belongs to. Categories are formatted by combining the name of the `TypeList` with the `code` for its `TypeKey`, separated by a `.` character.",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code for this `TypeKey`. `TypeKey` codes are unique within a `TypeList`."
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The longer description of this `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The human-readable name of this `TypeKey`"
        },
        "priority" : {
          "type" : "integer",
          "title" : "Priority",
          "description" : "The order of this `TypeKey` relative to other `TypeKeys` in the same `TypeList`. A `TypeKey` with a lower `priority` will appear before a `TypeKey` with a higher priority when the values for a `TypeList` are presented in sorted order."
        },
        "retired" : {
          "type" : "boolean",
          "title" : "Retried",
          "description" : "A `true` value for this field indicates that the `TypeKey` value should no longer be used. Retired `TypeKey` values are retained only for the sake of historical data that may already be using the `TypeKey`.",
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        }
      }
    },
    "TypeKeyReference" : {
      "type" : "object",
      "title" : "TypeKey reference",
      "description" : "A reference to a `TypeKey` element that defines an enumerated value from a `TypeList`",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The `name` of the `TypeKey`"
        }
      }
    },
    "TypeList" : {
      "type" : "object",
      "title" : "TypeList",
      "description" : "A `TypeList` represents a list of enumerated `TypeKey` values",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this `TypeList`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this `TypeList`",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "typeFilters" : {
          "type" : "array",
          "title" : "TypeFilters",
          "description" : "The set of `TypeFilters` available on this `TypeList`. A `TypeFilter` represents a filtered subset of the `TypeKeys` in this `TypeList`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TypeFilter"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "typeKeys" : {
          "type" : "array",
          "title" : "TypeKeys",
          "description" : "The list of `TypeKeys` available on this `TypeList`. A `TypeKey` represents one of the enumerated values that comprise this `TypeList`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TypeKey"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "UWIssueData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/UWIssue"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "UWIssueHistoryData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to request envelopes. See the Cloud API documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included on the response due to use of the `include` query parameter on the request. Only applicable to response envelopes. See the Cloud API documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the Cloud API documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/UWIssueHistory"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to response envelopes.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to request envelopes. See the Cloud API documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to request envelopes. See the Cloud API documentation for more information about request inclusion."
        }
      }
    },
    "UWIssueHistoryList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UWIssueHistoryData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "UWIssueList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UWIssueData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "UWIssueResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/UWIssueData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "UWIssueTypeReference" : {
      "type" : "object",
      "title" : "Underwriting issue type reference",
      "description" : "A reference to a `UWIssueType` that represents a type of underwriting issue (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `UWIssueType`",
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the `UWIssueType`"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced `UWIssueType` within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "UWReferralReasonData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/UWReferralReason"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "UWReferralReasonList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UWReferralReasonData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "UWReferralReasonRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/UWReferralReasonData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "UWReferralReasonResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/UWReferralReasonData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "VehicleDriverData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/VehicleDriver"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "VehicleDriverList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/VehicleDriverData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "VehicleDriverRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/VehicleDriverData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "VehicleDriverResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/VehicleDriverData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCAircraftSeatData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/WCAircraftSeat"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "WCAircraftSeatList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCAircraftSeatData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "WCAircraftSeatRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCAircraftSeatData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCAircraftSeatResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCAircraftSeatData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCCoveredEmployeeData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/WCCoveredEmployee"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "WCCoveredEmployeeList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCCoveredEmployeeData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "WCCoveredEmployeeRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCCoveredEmployeeData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCCoveredEmployeeResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCCoveredEmployeeData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCExcludedWorkplaceData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/WCExcludedWorkplace"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "WCExcludedWorkplaceList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCExcludedWorkplaceData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "WCExcludedWorkplaceRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCExcludedWorkplaceData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCExcludedWorkplaceResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCExcludedWorkplaceData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCJurisdictionData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/WCJurisdiction"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "WCJurisdictionList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCJurisdictionData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "WCJurisdictionRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCJurisdictionData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCJurisdictionResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCJurisdictionData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCParticipatingPlanData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/WCParticipatingPlan"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "WCParticipatingPlanList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCParticipatingPlanData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "WCParticipatingPlanRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCParticipatingPlanData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCParticipatingPlanResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCParticipatingPlanData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCRetroRatingLetterOfCreditData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/WCRetroRatingLetterOfCredit"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "WCRetroRatingLetterOfCreditList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCRetroRatingLetterOfCreditData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "WCRetroRatingLetterOfCreditRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCRetroRatingLetterOfCreditData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCRetroRatingLetterOfCreditResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCRetroRatingLetterOfCreditData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCRetrospectiveRatingPlanData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/WCRetrospectiveRatingPlan"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "WCRetrospectiveRatingPlanList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCRetrospectiveRatingPlanData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "WCRetrospectiveRatingPlanRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCRetrospectiveRatingPlanData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCRetrospectiveRatingPlanResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCRetrospectiveRatingPlanData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCStateMultiplierData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/WCStateMultiplier"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "WCStateMultiplierList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCStateMultiplierData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "WCStateMultiplierRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCStateMultiplierData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCStateMultiplierResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCStateMultiplierData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCWaiverOfSubroData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/WCWaiverOfSubro"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "WCWaiverOfSubroList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/WCWaiverOfSubroData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "WCWaiverOfSubroRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCWaiverOfSubroData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WCWaiverOfSubroResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WCWaiverOfSubroData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WorkersCompLineData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/WorkersCompLine"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "WorkersCompLineRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WorkersCompLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "WorkersCompLineResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/WorkersCompLineData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyPeriodInclusions"
        }
      }
    },
    "Account" : {
      "type" : "object",
      "title" : "Account",
      "description" : "An `Account` represents a person or company that applies for or purchases insurance from the insurer",
      "x-gw-extensions" : {
        "dynamicProperties" : {
          "accountHolderCreation" : {
            "forbiddenError" : "Exactly one of either 'accountHolder' or 'initialAccountHolder' is required on creation",
            "jsonLogic" : {
              "if" : [ {
                "===" : [ {
                  "var" : "accountHolder"
                }, null ]
              }, {
                "x-gw-dynamicPropertiesMarker" : true,
                "x-gw-requiredForCreate" : [ "initialAccountHolder" ]
              }, {
                "x-gw-dynamicPropertiesMarker" : true,
                "x-gw-forbidden" : [ "initialAccountHolder" ]
              } ]
            },
            "requiredError" : "Exactly one of either 'accountHolder' or 'initialAccountHolder' is required on creation"
          },
          "primaryLocationCreation" : {
            "forbiddenError" : "Exactly one of either 'primaryLocation' or 'initialPrimaryLocation' is required on creation",
            "jsonLogic" : {
              "if" : [ {
                "===" : [ {
                  "var" : "primaryLocation"
                }, null ]
              }, {
                "x-gw-dynamicPropertiesMarker" : true,
                "x-gw-requiredForCreate" : [ "initialPrimaryLocation" ]
              }, {
                "x-gw-dynamicPropertiesMarker" : true,
                "x-gw-forbidden" : [ "initialPrimaryLocation" ]
              } ]
            },
            "requiredError" : "Exactly one of either 'primaryLocation' or 'initialPrimaryLocation' is required on creation"
          }
        }
      },
      "properties" : {
        "accountHolder" : {
          "type" : "object",
          "title" : "Account holder",
          "description" : "A reference to the `AccountContact` that represents the owner of the policies for this account",
          "$ref" : "#/definitions/account_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "AccountContact"
          }
        },
        "accountNumber" : {
          "type" : "string",
          "title" : "Account number",
          "description" : "The number assigned to this account",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "accountStatus" : {
          "type" : "object",
          "title" : "Account status",
          "description" : "The current status of this account",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "AccountStatus"
          }
        },
        "accountStatusUpdateTime" : {
          "type" : "string",
          "title" : "Account status update time",
          "description" : "The date and time when the `accountStatus` was last updated",
          "format" : "date-time",
          "readOnly" : true
        },
        "businessOperationsDescription" : {
          "type" : "string",
          "title" : "Business and operations description",
          "description" : "A brief description of the type of business done by the company represented by this account",
          "maxLength" : 240,
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S"
        },
        "createdDate" : {
          "type" : "string",
          "title" : "Created date",
          "description" : "The date and time when this `Account` was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "frozen" : {
          "type" : "boolean",
          "title" : "Frozen",
          "description" : "A `true` value indicates that this `Account` is frozen and cannot currently be edited",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "industryCode" : {
          "type" : "object",
          "title" : "Industry code",
          "description" : "A reference to the `IndustryCode` that defines the type of business done by the company represented by this account. Only applicable for an `Account` that represents a company.",
          "$ref" : "#/definitions/account_ReferenceTableEntry",
          "readOnly" : true,
          "x-gw-nullable" : true
        },
        "initialAccountHolder" : {
          "type" : "object",
          "title" : "Initial account holder",
          "description" : "The details of the `AccountContact` that should be set as the `accountHolder` for a newly created account",
          "$ref" : "#/definitions/AccountContact",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "initialPrimaryLocation" : {
          "type" : "object",
          "title" : "Initial primary location",
          "description" : "The details of the `AccountLocation` that should be set as the `primaryLocation` for a newly created account",
          "$ref" : "#/definitions/AccountLocation",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "locked" : {
          "type" : "boolean",
          "title" : "If true then policies cannot be created or retrieved on this account",
          "description" : "A `true` value indicates that policies cannot be created or retrieved on this account. A locked account usually indicates that the account is being merged with another account. (Since 1.4.0)",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true
        },
        "nickname" : {
          "type" : "string",
          "title" : "Nickname",
          "description" : "A nickname for the account, which can be used to distinguish between different accounts held by the same account holder",
          "maxLength" : 30,
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S"
        },
        "numberOfContacts" : {
          "type" : "string",
          "title" : "Number of contacts",
          "description" : "The number of `AccountContact` elements on this `Account`",
          "readOnly" : true
        },
        "organizationType" : {
          "type" : "object",
          "title" : "Organization type",
          "description" : "The type of organization of the company or person represented by this account, such as `individual` or `corporation`",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AccountOrgType"
          }
        },
        "originationDate" : {
          "type" : "string",
          "title" : "Origination date",
          "description" : "The date and time at which the company or person represented by this account first became a client of the insurer",
          "format" : "date-time",
          "readOnly" : true
        },
        "otherOrganizationTypeDescription" : {
          "type" : "string",
          "title" : "Other organization type description",
          "description" : "A description of the organization type. Only applicable if `organizationType` is `other`.",
          "maxLength" : 40,
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S"
        },
        "preferredCoverageCurrency" : {
          "type" : "object",
          "title" : "Preferred coverage currency",
          "description" : "The preferred currency used for defining coverages on policies for this account",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Currency"
          }
        },
        "preferredSettlementCurrency" : {
          "type" : "object",
          "title" : "Preferred settlement currency",
          "description" : "The preferred currency used for billing this account",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Currency"
          }
        },
        "primaryLanguage" : {
          "type" : "object",
          "title" : "Primary language",
          "description" : "The preferred language for this account",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "primaryLocale" : {
          "type" : "object",
          "title" : "Primary locale",
          "description" : "The preferred locale for this account",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LocaleType"
          }
        },
        "primaryLocation" : {
          "type" : "object",
          "title" : "Primary location",
          "description" : "A reference to the `AccountLocation` that is the primary location for this account. This location will be used as the default location when creating policies for certain products.",
          "$ref" : "#/definitions/account_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "AccountLocation"
          }
        },
        "producerCodes" : {
          "type" : "array",
          "title" : "Producer codes",
          "description" : "When an `Account` is being created, this list should include a reference to the single `ProducerCode` that represents the default producer for the account. For an `Account` that already exists, this list will include `ProducerCode` references for all producers that have created or serviced policies for this account.",
          "minItems" : 1,
          "maxItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/account_SimpleReference",
            "x-gw-extensions" : {
              "resourceType" : "ProducerCode"
            }
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "serviceTier" : {
          "type" : "object",
          "title" : "Service tier",
          "description" : "The customer service tier assigned to this account",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "CustomerServiceTier"
          }
        },
        "stateBureauNum" : {
          "type" : "string",
          "title" : "State bureau number",
          "description" : "The state bureau number for this account",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "yearBusinessStarted" : {
          "type" : "integer",
          "title" : "Year business started",
          "description" : "The year that the company represented by this account was started",
          "x-gw-nullable" : true
        }
      }
    },
    "AccountContact" : {
      "type" : "object",
      "title" : "Account contact",
      "description" : "An `AccountContact` represents a person or company that is part of an account or policy on that account. Each `PolicyContact` on a policy for this account will also be linked to an `AccountContact` on this account. Changes to this `AccountContact` will be reflected on new jobs created for this account.",
      "x-gw-extensions" : {
        "discriminatorProperty" : "contactSubtype"
      },
      "properties" : {
        "active" : {
          "type" : "boolean",
          "title" : "Active",
          "description" : "A `true` value for this field indicates that the contact is available to be added to jobs (Since 1.4.0)",
          "x-gw-sinceVersion" : "1.4.0",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "addressBookUID" : {
          "type" : "string",
          "title" : "Address book UID",
          "description" : "The unique ID of this contact within the contact management system. This field is only set if the contact has been linked to a contact management system.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        },
        "busOpsDescription" : {
          "type" : "string",
          "title" : "Named insured business operation description",
          "description" : "The description of the contact's business operations, if this contact represents a named insured on the policy",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "cellPhone" : {
          "type" : "object",
          "title" : "Cell phone",
          "description" : "The person's mobile phone number. Only applicable for an `AccountContact` that represents a person.",
          "$ref" : "#/definitions/account_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The name of the company represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a company.",
          "x-gw-extensions" : {
            "entitySubtype" : "Company",
            "requiredForCreate" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "companyNameKanji" : {
          "type" : "string",
          "title" : "Company name kanji",
          "description" : "The kanji version of the name of the company represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a company. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "contactSubtype" : {
          "type" : "string",
          "title" : "Contact subtype",
          "description" : "The specific type of contact represented by this `AccountContact`, such as `Person` or `Company`",
          "x-gw-type" : "typekey.Contact",
          "x-gw-extensions" : {
            "requiredForCreate" : true
          }
        },
        "dateCompletedTrainingClass" : {
          "type" : "string",
          "title" : "Driver training class completion date",
          "description" : "The date that the person completed a driver training class. Only applicable for an `AccountContact` that represents a person.",
          "format" : "date",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now",
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "dateOfBirth" : {
          "type" : "string",
          "title" : "Date of birth",
          "description" : "The person's date of birth. Only applicable for an `AccountContact` that represents a person.",
          "format" : "date",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now",
            "entitySubtype" : "Person"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "A formatted representation of the full name for this `AccountContact', including all applicable fields such as `firstName` or `lastName`",
          "readOnly" : true
        },
        "emailAddress1" : {
          "type" : "string",
          "title" : "E-mail address 1",
          "description" : "The contact's primary e-mail address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "emailAddress2" : {
          "type" : "string",
          "title" : "E-mail address 2",
          "description" : "The contact's secondary e-mail address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "externalId" : {
          "type" : "string",
          "title" : "External ID",
          "description" : "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The persons's first name. Only applicable for an `AccountContact` that represents a person.",
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "requiredForCreate" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "firstNameKanji" : {
          "type" : "string",
          "title" : "First name kanji",
          "description" : "The kanji version of the first name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "goodDriverDiscount" : {
          "type" : "boolean",
          "title" : "Good driver discount",
          "description" : "A `true` value indicates that the person qualifies for a good driver discount. Only applicable for an `AccountContact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "homePhone" : {
          "type" : "object",
          "title" : "Home phone",
          "description" : "The person's home phone number. Only applicable for an `AccountContact` that represents a person.",
          "$ref" : "#/definitions/account_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "industryCode" : {
          "type" : "object",
          "title" : "Named insured industry code",
          "description" : "The relevant industry code, if this contact represents a named insured on the policy. Only applicable for a named insured that represents a company.",
          "$ref" : "#/definitions/account_ReferenceTableEntry",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The person's last name. Only applicable for an `AccountContact` that represents a person.",
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "requiredForCreate" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "lastNameKanji" : {
          "type" : "string",
          "title" : "Last name kanji",
          "description" : "The kanji version of the last name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "licenseNumber" : {
          "type" : "string",
          "title" : "Driver's license number",
          "description" : "The person's driver's license number. Only applicable for an `AccountContact` that represents a person. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 20
        },
        "licenseState" : {
          "type" : "object",
          "title" : "Driver's license state",
          "description" : "The person's driver's license state. Only applicable for an `AccountContact` that represents a person. (Since 1.1.0)",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "Jurisdiction"
          }
        },
        "maritalStatus" : {
          "type" : "object",
          "title" : "Marital status",
          "description" : "The person's marital status. Only applicable for an `AccountContact` that represents a person. (Since 1.1.0)",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "MaritalStatus"
          }
        },
        "numberOfAccidents" : {
          "type" : "object",
          "title" : "Number of accidents",
          "description" : "The person's number of vehicular accidents. Only applicable for an `AccountContact` that represents a person.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "typelist" : "NumberOfAccidents",
            "validateSubtype" : false
          }
        },
        "numberOfViolations" : {
          "type" : "object",
          "title" : "Number of violations",
          "description" : "The person's number of driving violations. Only applicable for an `AccountContact` that represents a person.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "typelist" : "NumberOfAccidents",
            "validateSubtype" : false
          }
        },
        "officialIds" : {
          "type" : "object",
          "title" : "Official IDs",
          "description" : "The contact's official identifiers in various jurisdictions (Since 1.4.0)",
          "$ref" : "#/definitions/OfficialIDMap",
          "x-gw-sinceVersion" : "1.4.0"
        },
        "orgType" : {
          "type" : "string",
          "title" : "Named insured organization type",
          "description" : "The organization type of the named insured's company, if this contact represents a named insured on the policy",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "particle" : {
          "type" : "string",
          "title" : "Particle",
          "description" : "The particle portion of the name of the person represented by this `AccountContact`. Only applicable for an `AccountContact` that represents a person. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "primaryAddress" : {
          "type" : "object",
          "title" : "Primary address",
          "description" : "The contact's primary address",
          "$ref" : "#/definitions/account_Address",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "requiredForCreate" : true
          }
        },
        "primaryLanguage" : {
          "type" : "object",
          "title" : "Primary language",
          "description" : "The contact's primary language",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "typelist" : "LanguageType"
          }
        },
        "primaryLocale" : {
          "type" : "object",
          "title" : "Primary locale",
          "description" : "The contact's primary locale",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "typelist" : "LocaleType"
          }
        },
        "primaryPhone" : {
          "type" : "string",
          "title" : "Primary phone",
          "description" : "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
          "readOnly" : true
        },
        "primaryPhoneType" : {
          "type" : "object",
          "title" : "Primary phone type",
          "description" : "The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for an `AccountContact` that represents a person.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "typelist" : "PrimaryPhoneType"
          }
        },
        "relationshipTitle" : {
          "type" : "object",
          "title" : "Owner/officer relationship title",
          "description" : "The relationship this person has to the insured company, if this person is an owner or officer for the company. Only applicable for an `AccountContact` that represents a person.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "typelist" : "Relationship",
            "validateSubtype" : false
          }
        },
        "student" : {
          "type" : "boolean",
          "title" : "Student",
          "description" : "A `true` value indicates that the person qualifies as a student. Only applicable for an `AccountContact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "taxId" : {
          "type" : "string",
          "title" : "Tax ID",
          "description" : "The contact's tax ID",
          "minLength" : 1,
          "maxLength" : 30,
          "pattern" : "\\S",
          "x-gw-nullable" : true
        },
        "trainingClassType" : {
          "type" : "object",
          "title" : "Driver training class type",
          "description" : "The type of driver training class completed. Only applicable for an `AccountContact` that represents a person.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "typelist" : "TrainingClassType",
            "validateSubtype" : false
          }
        },
        "workPhone" : {
          "type" : "object",
          "title" : "Work phone",
          "description" : "The contact's work phone number, if this `AccountContact` represents a person, or the business's phone number, if this `AccountContact` represents a company",
          "$ref" : "#/definitions/account_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "yearLicensed" : {
          "type" : "integer",
          "title" : "Year licensed",
          "description" : "The year that the person first acquired a driver's license. Only applicable for an `AccountContact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        }
      }
    },
    "AccountLocation" : {
      "type" : "object",
      "title" : "Account location",
      "description" : "An `AccountLocation` represents a location relevant to the account or one of its policies. It combines an address for the location with other attributes of the location that may be relevant to the policy. Each `PolicyLocation` on a policy for this account will also be linked to an `AccountLocation` on this account. Changes to this `AccountLocation` will be reflected on new jobs created for this account.",
      "x-gw-extensions" : {
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "CEDEX" : {
          "type" : "string",
          "title" : "CEDEX",
          "description" : "The CEDEX bureau of the location's address. Only applicable in certain countries.",
          "maxLength" : 2,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "active" : {
          "type" : "boolean",
          "title" : "Active",
          "description" : "A `true` value indicates that this `AccountLocation` is available to be added as a `PolicyLocation` to new submissions for this account. A `false` value indicates that the `AccountLocation` is no longer active and should not be available to new submissions."
        },
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the location's address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine1Kanji" : {
          "type" : "string",
          "title" : "Address line 1 kanji",
          "description" : "The kanji version of the first line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine2Kanji" : {
          "type" : "string",
          "title" : "Address line 2 kanji",
          "description" : "The kanji version of the second line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the location's address",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "typelist" : "AddressType"
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the location's address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "cityKanji" : {
          "type" : "string",
          "title" : "City kanji",
          "description" : "The kanji version of the city of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the location represented by this `AccountLocation`, including all standard fields for the address's country",
          "readOnly" : true
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "employeeCount" : {
          "type" : "integer",
          "title" : "Employee count",
          "description" : "The number of employees at this location",
          "x-gw-nullable" : true,
          "minimum" : 0
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "locationCode" : {
          "type" : "string",
          "title" : "Location code",
          "description" : "A code assigned to this location by the insurer",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "locationName" : {
          "type" : "string",
          "title" : "Location name",
          "description" : "A shorthand name for this location",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "locationNum" : {
          "type" : "integer",
          "title" : "Location number",
          "description" : "The number automatically assigned to this location in the context of this account",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "nonSpecific" : {
          "type" : "boolean",
          "title" : "Non-specific",
          "description" : "A `true` value indicates that this `AccountLocation` does not represent a specific address and instead only represents a more general area such as a state or city. Non-specific locations do not require standard address fields like `addressLine1`, but can only be used in certain types of policies.",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "phone" : {
          "type" : "object",
          "title" : "Phone",
          "description" : "A phone number for the location",
          "$ref" : "#/definitions/account_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        }
      }
    },
    "AccountSearchRequestAttributes" : {
      "type" : "object",
      "title" : "Account search request attributes",
      "description" : "Details of the account to search for (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "x-gw-extensions" : {
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "accountNumber" : {
          "type" : "string",
          "title" : "Account number",
          "description" : "The `accountNumber` of the account"
        },
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The `addressLine1` of the `primaryAddress` on the account's `accountHolder`"
        },
        "addressLine1Kanji" : {
          "type" : "string",
          "title" : "Address line 1 kanji",
          "description" : "The `addressLine1Kanji` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The `addressLine2` of the `primaryAddress` on the account's `accountHolder`"
        },
        "addressLine2Kanji" : {
          "type" : "string",
          "title" : "Address line 2 kanji",
          "description" : "The `addressLine2Kanji` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The `area` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The `city` of the `primaryAddress` on the account's `accountHolder`"
        },
        "cityKanji" : {
          "type" : "string",
          "title" : "City kanji",
          "description" : "The `cityKanji` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The `companyName` of the account's `accountHolder`"
        },
        "companyNameKanji" : {
          "type" : "string",
          "title" : "Company name kanji",
          "description" : "The `companyNameKanji` of the account's `accountHolder`"
        },
        "companyNamePartialMatch" : {
          "type" : "boolean",
          "title" : "Company name partial match",
          "description" : "A `true` value for this field indicates that the `companyName` field value should allow for partial matches. Otherwise, the `companyName` field must match exactly.",
          "default" : false
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The `country` of the `primaryAddress` on the account's `accountHolder`",
          "x-gw-type" : "typekey.Country"
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The `county` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The `department` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The `emirate` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The `firstName` of the account's `accountHolder`"
        },
        "firstNameKanji" : {
          "type" : "string",
          "title" : "First name kanji",
          "description" : "The `firstNameKanji` of the account's `accountHolder`"
        },
        "firstNamePartialMatch" : {
          "type" : "boolean",
          "title" : "First name partial match",
          "description" : "A `true` value for this field indicates that the `firstName` field value should allow for partial matches. Otherwise, the `firstName` field must match exactly.",
          "default" : false
        },
        "industryCode" : {
          "type" : "object",
          "title" : "Industry code",
          "description" : "The `industryCode` of the account",
          "$ref" : "#/definitions/account_SimpleReference"
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The `island` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The `lastName` of the account's `accountHolder`"
        },
        "lastNameKanji" : {
          "type" : "string",
          "title" : "Last name kanji",
          "description" : "The `lastNameKanji` of the account's `accountHolder`"
        },
        "lastNamePartialMatch" : {
          "type" : "boolean",
          "title" : "Last name partial match",
          "description" : "A `true` value for this field indicates that the `lastName` field value should allow for partial matches. Otherwise, the `lastName` field must match exactly.",
          "default" : false
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The `oblast` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "organization" : {
          "type" : "object",
          "title" : "Organization",
          "description" : "The `organization` of a `ProducerCode` associated with this account",
          "$ref" : "#/definitions/account_SimpleReference"
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The `parish` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "particle" : {
          "type" : "string",
          "title" : "Particle",
          "description" : "The `particle` of the account's `accountHolder`"
        },
        "phoneNumber" : {
          "type" : "string",
          "title" : "Phone number",
          "description" : "The `workPhone` of the account's `accountHolder`"
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The `postalCode` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The `prefecture` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "producerCode" : {
          "type" : "object",
          "title" : "Producer code",
          "description" : "A `ProducerCode` associated with this account",
          "$ref" : "#/definitions/account_SimpleReference"
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The `province` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The `state` of the `primaryAddress` on the account's `accountHolder`. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "taxId" : {
          "type" : "string",
          "title" : "Tax ID",
          "description" : "The `taxId` of the account's `accountHolder`"
        }
      }
    },
    "account_Activity" : {
      "type" : "object",
      "title" : "Activity",
      "description" : "An `Activity` is an assignable item that represents a task to be done, a decision to be made, or information to be aware of",
      "xml" : {
        "name" : "Activity"
      },
      "properties" : {
        "activityPattern" : {
          "type" : "string",
          "title" : "Activity pattern",
          "description" : "The code of the `ActivityPattern` used to create this activity and set its initial values",
          "x-gw-extensions" : {
            "createOnly" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "activityType" : {
          "type" : "object",
          "title" : "Activity type",
          "description" : "The type of this activity, such as `general` or `approval`",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ActivityType"
          }
        },
        "approvalIssue" : {
          "type" : "string",
          "title" : "Approval issue",
          "description" : "The reason approval is needed. Only applicable to activities with an `activityType` of `approval`.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "approvalRationale" : {
          "type" : "string",
          "title" : "Approval rationale",
          "description" : "Rationale for approving or rejecting this activity. Only applicable to activities with an `activityType` of `approval`.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "approved" : {
          "type" : "boolean",
          "title" : "Approved",
          "description" : "This field is `true` if this activity has been approved, `false` if this activity has been rejected, and omitted otherwise. Only applicable to activities with an `activityType` of `approval`.",
          "readOnly" : true
        },
        "assignedByUser" : {
          "type" : "object",
          "title" : "Assigned by user",
          "description" : "A reference to the `User` who last assigned or re-assigned this activity",
          "$ref" : "#/definitions/account_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "assignedGroup" : {
          "type" : "object",
          "title" : "Assigned group",
          "description" : "A reference to the `Group` that this activity is currently assigned to",
          "$ref" : "#/definitions/account_SimpleReference",
          "readOnly" : true
        },
        "assignedQueue" : {
          "type" : "object",
          "title" : "Assigned queue",
          "description" : "A reference to the `Queue` that this activity is currently assigned to",
          "$ref" : "#/definitions/account_SimpleReference",
          "readOnly" : true
        },
        "assignedUser" : {
          "type" : "object",
          "title" : "Assigned user",
          "description" : "A reference to the `User` that this activity is currently assigned to",
          "$ref" : "#/definitions/account_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User",
            "sortable" : true
          }
        },
        "assignmentStatus" : {
          "type" : "object",
          "title" : "Assignment status",
          "description" : "The current assignment status of this activity, such as `assigned` or `unassigned`",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "AssignmentStatus"
          }
        },
        "associatedRole" : {
          "type" : "object",
          "title" : "Associated role",
          "description" : "The role on the parent element that this activity is assigned to. For example, if this activity was created for a job, the activity might be assigned to the `Creator` or `Underwriter` role for that job.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "UserRole"
          }
        },
        "closeDate" : {
          "type" : "string",
          "title" : "Close date",
          "description" : "The date and time when this activity was completed, skipped, approved, or rejected",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "closeUser" : {
          "type" : "object",
          "title" : "Close user",
          "description" : "A reference to the `User` that completed, skipped, approved, or rejected this activity",
          "$ref" : "#/definitions/account_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `Activity` was created (Since 1.1.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this activity",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "dueDate" : {
          "type" : "string",
          "title" : "Due date",
          "description" : "Date and time by which a person should complete the activity. If not completed by this time, the activity is considered overdue. Not applicable to activities that represent events rather than tasks.",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "endDate" : {
          "type" : "string",
          "title" : "End date",
          "description" : "Date and time at which the activity is expected to end. Only applicable to activities that represent events.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "escalated" : {
          "type" : "boolean",
          "title" : "Escalated",
          "description" : "A `true` value for this field indicates that the activity has been escalated",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "escalationDate" : {
          "type" : "string",
          "title" : "Escalation date",
          "description" : "Date and time at which this activity will be escalated if it has not yet been completed",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "externallyOwned" : {
          "type" : "boolean",
          "title" : "Externally owned",
          "description" : "A `true` value for this field indicates that the activity is owned by a user or group outside of the insurer",
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Activity`",
          "readOnly" : true
        },
        "initialAssignment" : {
          "type" : "object",
          "title" : "Initial assignment",
          "description" : "The `Assignee` that this activity should be assigned to when it is first created",
          "$ref" : "#/definitions/account_Assignee",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "mandatory" : {
          "type" : "boolean",
          "title" : "Mandatory",
          "description" : "A `true` value for this field indicates that the activity is mandatory and cannot be skipped"
        },
        "priority" : {
          "type" : "object",
          "title" : "Priority",
          "description" : "The priority of this activity",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "Priority"
          }
        },
        "recurring" : {
          "type" : "boolean",
          "title" : "Recurring",
          "description" : "A `true` value indicates that this activity is recurring"
        },
        "startDate" : {
          "type" : "string",
          "title" : "Start date",
          "description" : "Date and time at which the activity is scheduled to begin. Only applicable to activities that represent events.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The status of this activity, such as `open` or `complete`",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ActivityStatus"
          }
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "A brief title for the activity",
          "minLength" : 1,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "pattern" : "\\S",
          "maxLength" : 255
        }
      }
    },
    "account_ActivityPattern" : {
      "type" : "object",
      "title" : "Activity pattern",
      "description" : "An `ActivityPattern` is a template for an activity, and is used to create a new activity and set defaults for some of its fields",
      "xml" : {
        "name" : "ActivityPattern"
      },
      "properties" : {
        "activityClass" : {
          "type" : "object",
          "title" : "Activity class",
          "description" : "The class of activity that this activity pattern creates, such as `task` or `event`",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ActivityClass"
          }
        },
        "activityType" : {
          "type" : "object",
          "title" : "Activity type",
          "description" : "The type of activity that this activity pattern creates, such as `general` or `approval`",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ActivityType"
          }
        },
        "category" : {
          "type" : "object",
          "title" : "Category",
          "description" : "The category of the activity pattern. Used to help organize `ActivityPatterns` when presenting them to a user.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ActivityCategory",
            "filterBy" : [ "activityType" ]
          }
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code that uniquely identifies this `ActivityPattern`",
          "x-gw-extensions" : {
            "createOnly" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The default `description` for activities created from this activity pattern",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "dueDate" : {
          "type" : "string",
          "title" : "Due date",
          "description" : "The default `dueDate` for activities created from this activity pattern, calculated based on the current date and time",
          "format" : "date-time"
        },
        "escalationDate" : {
          "type" : "string",
          "title" : "Escalation date",
          "description" : "The default `escalationDate` for activities created from this activity pattern, calculated based on the current date and time",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `ActivityPattern`"
        },
        "mandatory" : {
          "type" : "boolean",
          "title" : "Mandatory",
          "description" : "The default `mandatory` value for activities created from this activity pattern"
        },
        "patternLevel" : {
          "type" : "object",
          "title" : "Pattern level",
          "description" : "The type of parent element, such as `Job` or `Account`, that this activity pattern applies to",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ActivityPatternLevel"
          }
        },
        "priority" : {
          "type" : "object",
          "title" : "Priority",
          "description" : "The default `priority` for activities created from this activity pattern",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "Priority"
          }
        },
        "recurring" : {
          "type" : "boolean",
          "title" : "Recurring",
          "description" : "The default `recurring` value for activities created from this activity pattern"
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "The default `subject` for activities created from this activity pattern",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        }
      }
    },
    "account_Address" : {
      "type" : "object",
      "title" : "Address",
      "description" : "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
      "xml" : {
        "name" : "Address"
      },
      "x-gw-extensions" : {
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "CEDEX" : {
          "type" : "string",
          "title" : "CEDEX",
          "description" : "The CEDEX bureau of the address. Only applicable in certain countries.",
          "maxLength" : 2,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine1Kanji" : {
          "type" : "string",
          "title" : "Address line 1 kanji",
          "description" : "The kanji version of the first line of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine2Kanji" : {
          "type" : "string",
          "title" : "Address line 2 kanji",
          "description" : "The kanji version of the second line of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the address (Since 1.2.0)",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AddressType"
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "cityKanji" : {
          "type" : "string",
          "title" : "City kanji",
          "description" : "The kanji version of the city of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of the address (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
          "readOnly" : true
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Address`",
          "readOnly" : true
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "spatialPoint" : {
          "type" : "object",
          "title" : "Spatial point",
          "description" : "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
          "$ref" : "#/definitions/account_SpatialPoint",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "validUntil" : {
          "type" : "string",
          "title" : "Valid until",
          "description" : "The date and time that the address is valid until (Since 1.2.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        }
      }
    },
    "account_Assignee" : {
      "type" : "object",
      "title" : "Assignee",
      "description" : "An `Assignee` represents the target of an assignment action, such as a user/group combination, assignment queue, or automatic rule-based assignment",
      "xml" : {
        "name" : "Assignee"
      },
      "properties" : {
        "assigneeId" : {
          "type" : "string",
          "title" : "Assignee ID",
          "description" : "Unique ID to reference this `Assignee` for includes (Since 1.4.0)",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true
        },
        "autoAssign" : {
          "type" : "boolean",
          "title" : "Auto assign",
          "description" : "Set to `true` to indicate the assignment should be done automatically by the system. Cannot be combined with any other fields."
        },
        "groupId" : {
          "type" : "string",
          "title" : "Group ID",
          "description" : "The ID of the `Group` that the resource should be assigned to. If specified without the `userId` field, the `User` within the `Group` is selected by assignment rules. If specified along with the `userId` field, that specific `User` is assigned the element."
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "A human-readable name for the type of assignment that this `Assignee` represents",
          "readOnly" : true
        },
        "queueId" : {
          "type" : "string",
          "title" : "Queue ID",
          "description" : "The ID of the `Queue` that the resource should be assigned to. Cannot be combined with any other fields."
        },
        "role" : {
          "type" : "object",
          "title" : "Role",
          "description" : "Requests assignment of the element to the user that has the specified role on the element or its parent. Cannot be combined with any other fields.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UserRole"
          }
        },
        "userId" : {
          "type" : "string",
          "title" : "User ID",
          "description" : "The ID of the `User` that the resource should be assigned to. The `groupId` field must also be specified if the `userId` field is specified, and the `User` must be a member of that `Group` and have permission to be assigned the element."
        }
      }
    },
    "account_Contact" : {
      "type" : "object",
      "title" : "Contact",
      "description" : "A `Contact` represents a person or company",
      "xml" : {
        "name" : "Contact"
      },
      "properties" : {
        "addressBookUID" : {
          "type" : "string",
          "title" : "Address book UID",
          "description" : "The unique ID of this `Contact` within the contact management system. Only applicable if the `Contact` has been linked to a contact management system.",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        },
        "cellPhone" : {
          "type" : "object",
          "title" : "Cell phone",
          "description" : "The person's mobile phone number. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/account_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The name of the company represented by this `Contact`. Only applicable for a `Contact` that represents a company.",
          "x-gw-extensions" : {
            "entitySubtype" : "Company"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "dateOfBirth" : {
          "type" : "string",
          "title" : "Date of birth",
          "description" : "The person's date of birth. Only applicable for a `Contact` that represents a person.",
          "format" : "date",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now",
            "entitySubtype" : "Person"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "A formatted representation of the full name for this `Contact', including all applicable fields such as `firstName` or `lastName`",
          "readOnly" : true,
          "x-gw-nullable" : true
        },
        "emailAddress1" : {
          "type" : "string",
          "title" : "E-mail address 1",
          "description" : "The contact's primary e-mail address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "emailAddress2" : {
          "type" : "string",
          "title" : "E-mail address 2",
          "description" : "The contact's secondary e-mail address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "externalId" : {
          "type" : "string",
          "title" : "External ID",
          "description" : "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
          "x-gw-extensions" : {
            "filterable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The persons's first name. Only applicable for a `Contact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "homePhone" : {
          "type" : "object",
          "title" : "Home phone",
          "description" : "The person's home phone number. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/account_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Contact`",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The person's last name. Only applicable for a `Contact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "preferred" : {
          "type" : "boolean",
          "title" : "Preferred",
          "description" : "A `true` value for this field indicates that the vendor is one of the insurer's preferred vendors. Only applicable for a `Contact` that represents a vendor.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : [ "CompanyVendor", "PersonVendor" ]
          }
        },
        "primaryAddress" : {
          "type" : "object",
          "title" : "Primary address",
          "description" : "The contact's primary address",
          "$ref" : "#/definitions/account_Address",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "primaryLanguage" : {
          "type" : "object",
          "title" : "Primary language",
          "description" : "The contact's primary language",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "primaryLocale" : {
          "type" : "object",
          "title" : "Primary locale",
          "description" : "The contact's primary locale",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LocaleType"
          }
        },
        "primaryPhone" : {
          "type" : "string",
          "title" : "Primary phone",
          "description" : "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
          "readOnly" : true
        },
        "primaryPhoneType" : {
          "type" : "object",
          "title" : "Primary phone type",
          "description" : "The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "PrimaryPhoneType"
          }
        },
        "subtype" : {
          "type" : "object",
          "title" : "Subtype",
          "description" : "The specific type of contact that this `Contact` represents, such as `Person` or `Company`. The set of fields that can be set on a `Contact` depend on its `subtype`.",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "typelist" : "Contact"
          }
        },
        "taxId" : {
          "type" : "string",
          "title" : "Tax ID",
          "description" : "The contact's tax ID",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "workPhone" : {
          "type" : "object",
          "title" : "Work phone",
          "description" : "The contact's work phone number, if this `Contact` represents a person, or the business's phone number, if this `Contact` represents a company",
          "$ref" : "#/definitions/account_PhoneNumber",
          "x-gw-nullable" : true
        }
      }
    },
    "account_Document" : {
      "type" : "object",
      "title" : "Document",
      "description" : "A `Document` represents a document within the application, which can have additional metadata such as the author of the document or a specific security level. The actual contents of the document are generally stored in a separate document management system that this application is linked to. (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "xml" : {
        "name" : "Document"
      },
      "properties" : {
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/account_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "author" : {
          "type" : "string",
          "title" : "Author",
          "description" : "The name of the person who created this document",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "contingency" : {
          "type" : "object",
          "title" : "Contingency",
          "description" : "A reference to the `Contingency` that this document is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/account_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Contingency"
          }
        },
        "dateModified" : {
          "type" : "string",
          "title" : "Date modified",
          "description" : "The date and time that this `Document` was most recently updated",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of this document",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "docUID" : {
          "type" : "string",
          "title" : "Document UID",
          "description" : "The unique identifier for this `Document` in the linked document management system. The exact format of the identifier depends upon the specifics of the document management system the application is linked to.",
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Document`",
          "readOnly" : true
        },
        "inbound" : {
          "type" : "boolean",
          "title" : "Inbound",
          "description" : "This field indicates whether this document is considered to be inbound, outbound, or neither",
          "x-gw-nullable" : true
        },
        "job" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the `Job` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/account_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Job"
          }
        },
        "language" : {
          "type" : "object",
          "title" : "Language",
          "description" : "The language in which this document was produced",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "mimeType" : {
          "type" : "string",
          "title" : "MIME type",
          "description" : "The MIME type of this document, such as `application/msword` for a Microsoft Word document",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 80
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this document",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 80
        },
        "obsolete" : {
          "type" : "boolean",
          "title" : "Obsolete",
          "description" : "Setting this field to `true` indicates that the information in this document can no longer be relied upon to be current and relevant. This is often used instead of deletion to preserve history.",
          "x-gw-nullable" : true
        },
        "policy" : {
          "type" : "object",
          "title" : "Policy",
          "description" : "A reference to the `Policy` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/account_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "recipient" : {
          "type" : "string",
          "title" : "Recipient",
          "description" : "The name of the intended recipient of this document",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "section" : {
          "type" : "object",
          "title" : "Section",
          "description" : "The section to which this document belongs",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "DocumentSection"
          }
        },
        "securityType" : {
          "type" : "object",
          "title" : "Security type",
          "description" : "The security level that has been assigned to this document",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DocumentSecurityType"
          }
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The current status of this document, such as `draft` or `approved`",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "typelist" : "DocumentStatusType"
          }
        },
        "type" : {
          "type" : "object",
          "title" : "Type",
          "description" : "The specific type of document",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "requiredForCreate" : true,
            "typelist" : "DocumentType"
          }
        }
      }
    },
    "account_DocumentContent" : {
      "type" : "object",
      "title" : "Document content",
      "description" : "The contents of a `Document` (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "xml" : {
        "name" : "DocumentContent"
      },
      "properties" : {
        "contents" : {
          "type" : "string",
          "title" : "Contents",
          "description" : "The contents of this document as a Base64-encoded string",
          "format" : "byte",
          "readOnly" : true
        },
        "responseMimeType" : {
          "type" : "string",
          "title" : "Response MIME type",
          "description" : "The MIME type of this document's contents, such as `application/msword` for a Microsoft Word document",
          "readOnly" : true
        },
        "url" : {
          "type" : "string",
          "title" : "URL",
          "description" : "The URL of this document within the linked document management system",
          "readOnly" : true
        }
      }
    },
    "account_ExclusiveStateSet" : {
      "type" : "object",
      "title" : "Exclusive state set",
      "description" : "A set of states that can be used either as an inclusive set or an exclusive set (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "ExclusiveStateSet"
      },
      "required" : [ "inclusionType", "states" ],
      "properties" : {
        "inclusionType" : {
          "type" : "string",
          "title" : "Inclusion type",
          "description" : "Whether the set of states is inclusive or exclusive",
          "enum" : [ "exclusive", "inclusive" ]
        },
        "states" : {
          "type" : "array",
          "title" : "States",
          "description" : "The states that comprise the set",
          "minItems" : 1,
          "items" : {
            "type" : "string",
            "x-gw-type" : "typekey.State"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "account_GenericRelation" : {
      "type" : "object",
      "title" : "Generic relation",
      "description" : "A reference to a related element",
      "xml" : {
        "name" : "GenericRelation"
      },
      "required" : [ "id", "type" ],
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the referenced element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "account_GroupDetail" : {
      "type" : "object",
      "title" : "Group detail",
      "description" : "Used to represent a reference to a `Group`",
      "xml" : {
        "name" : "GroupDetail"
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The name of the `Group`"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Group`"
        }
      }
    },
    "account_GroupReference" : {
      "type" : "object",
      "title" : "Group reference",
      "description" : "A reference to `Group` element (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "GroupReference"
      },
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "branchCode" : {
          "type" : "string",
          "title" : "Branch code",
          "description" : "The `branchCode` of the group",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the group"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced `Group` within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "account_LinkObject" : {
      "type" : "object",
      "title" : "Linked object",
      "description" : "A standard HTTP link",
      "xml" : {
        "name" : "LinkObject"
      },
      "properties" : {
        "href" : {
          "type" : "string",
          "title" : "HREF",
          "description" : "The URL of the link"
        },
        "methods" : {
          "type" : "array",
          "title" : "Methods",
          "description" : "An array of HTTP method names that can be used with the link URL",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "account_Links" : {
      "type" : "object",
      "title" : "Links",
      "description" : "A set of named links",
      "xml" : {
        "name" : "Links"
      },
      "additionalProperties" : {
        "type" : "object",
        "title" : "Links",
        "description" : "A set of named links. Each key represents the name of the link, such as a child of the current element, an action that can be taken on it, or a navigation option.",
        "$ref" : "#/definitions/account_LinkObject"
      }
    },
    "MergeAccountAttributes" : {
      "type" : "object",
      "title" : "Merge account attributes",
      "description" : "Details of the account that will be deleted after moving its policies, notes, contacts, and assignments to the merged account (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "required" : [ "account" ],
      "properties" : {
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "An `Account` represents a person or company that applies for or purchases insurance from the insurer",
          "$ref" : "#/definitions/account_SimpleReference"
        }
      }
    },
    "account_MetaObject" : {
      "type" : "object",
      "title" : "Meta object",
      "description" : "An element",
      "xml" : {
        "name" : "MetaObject"
      },
      "properties" : {
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "The checksum of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "The set of links related to the element",
          "$ref" : "#/definitions/account_Links"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "related" : {
          "type" : "object",
          "title" : "Related collections",
          "description" : "The set of related collections included with the element",
          "$ref" : "#/definitions/account_RelatedCollections"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of element"
        }
      }
    },
    "account_MonetaryAmount" : {
      "type" : "object",
      "title" : "Monetary amount",
      "description" : "A monetary amount that combines a decimal amount with a currency",
      "xml" : {
        "name" : "MonetaryAmount"
      },
      "required" : [ "amount", "currency" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "title" : "Amount",
          "description" : "The decimal amount",
          "format" : "gw-bigdecimal"
        },
        "currency" : {
          "type" : "string",
          "title" : "Currency",
          "description" : "The currency for the amount",
          "x-gw-type" : "typekey.Currency"
        }
      }
    },
    "MovePoliciesAttributes" : {
      "type" : "object",
      "title" : "Move policies attributes",
      "description" : "Details of the policies to move to this account (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "required" : [ "policies" ],
      "properties" : {
        "policies" : {
          "type" : "array",
          "title" : "Policies",
          "description" : "An array of `Policy` references that represent the policies that should be moved to this account",
          "minItems" : 1,
          "maxItems" : 25,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/account_SimpleReference"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "account_Note" : {
      "type" : "object",
      "title" : "Note",
      "description" : "A `Note` is used to capture any sort of additional text that needs to be associated with another business object. A `Note` consists of a `body` that contains the actual text of the note, along with other fields the represent additional metadata about the note.",
      "xml" : {
        "name" : "Note"
      },
      "properties" : {
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/account_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "author" : {
          "type" : "object",
          "title" : "Author",
          "description" : "The `User` who authored this note",
          "$ref" : "#/definitions/account_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "body" : {
          "type" : "string",
          "title" : "Body",
          "description" : "The text of this note",
          "minLength" : 1,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "requiredForCreate" : true
          },
          "pattern" : "\\S",
          "maxLength" : 65000
        },
        "bodySummary" : {
          "type" : "string",
          "title" : "Body summary",
          "description" : "A shorter summary of this note's `body` field, more suitable for displaying in a list of notes",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "summary" ]
          }
        },
        "confidential" : {
          "type" : "boolean",
          "title" : "Confidential",
          "description" : "A `true` value for this field indicates that the note contains confidential information"
        },
        "contingency" : {
          "type" : "object",
          "title" : "Contingency",
          "description" : "A reference to the `Contingency` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/account_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Contingency"
          }
        },
        "createdDate" : {
          "type" : "string",
          "title" : "Created date",
          "description" : "The date and time that this `Note` was created",
          "format" : "date-time",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "Unique identifier of this `Note`",
          "readOnly" : true
        },
        "job" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the `Job` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/account_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Job"
          }
        },
        "policy" : {
          "type" : "object",
          "title" : "Policy",
          "description" : "A reference to the `Policy` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/account_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "securityType" : {
          "type" : "object",
          "title" : "Security type",
          "description" : "The security level that has been assigned to this note",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "NoteSecurityType"
          }
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "The subject of this note",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "topic" : {
          "type" : "object",
          "title" : "Topic",
          "description" : "The topic of this note",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "NoteTopicType"
          }
        },
        "updateTime" : {
          "type" : "string",
          "title" : "Update time",
          "description" : "The date and time when this `Note` was most recently updated",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        }
      }
    },
    "OfficialID" : {
      "type" : "object",
      "title" : "Official ID",
      "description" : "An `OfficialID` represents a pairing of a particular jurisdiction with some form of official identifier applicable to that jurisdiction, such as a driver's license number or state tax ID number",
      "properties" : {
        "officialIDType" : {
          "type" : "object",
          "title" : "Official ID type",
          "description" : "The type of identifier, such as `BureauID`",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "OfficialIDType"
          }
        },
        "officialIDValue" : {
          "type" : "string",
          "title" : "Official ID value",
          "description" : "The actual identifier value",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The jurisdiction that this identifier applies to",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        }
      }
    },
    "OfficialIDMap" : {
      "type" : "object",
      "title" : "Official ID map",
      "description" : "A map of `OfficialID` values for various jurisdictions and types of identifier. The keys in the map will be of the form `<code>-<state>` or `<code>-ALL` for values that do not have an assigned `state`.",
      "additionalProperties" : {
        "type" : "object",
        "title" : "IDs",
        "description" : "The identifier values. The property keys will be of the form `<code>-<state>` or `<code>-ALL` for values that do not have an assigned `state`.",
        "$ref" : "#/definitions/OfficialID"
      }
    },
    "account_PhoneNumber" : {
      "type" : "object",
      "title" : "Phone number",
      "description" : "A phone number, with different components of the number broken out as separate fields",
      "xml" : {
        "name" : "PhoneNumber"
      },
      "required" : [ "countryCode", "number" ],
      "properties" : {
        "countryCode" : {
          "type" : "object",
          "title" : "Country code",
          "description" : "The country code for the phone number",
          "$ref" : "#/definitions/account_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "PhoneCountryCode"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The phone number formatted in a standardized way",
          "readOnly" : true
        },
        "extension" : {
          "type" : "string",
          "title" : "Extension",
          "description" : "The extension for the phone number",
          "x-gw-nullable" : true
        },
        "number" : {
          "type" : "string",
          "title" : "Number",
          "description" : "The actual phone number, including area code, but excluding the country code and extension"
        }
      }
    },
    "account_QueueDetail" : {
      "type" : "object",
      "title" : "Queue detail",
      "description" : "Used to represent a reference to a `Queue`",
      "xml" : {
        "name" : "QueueDetail"
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The name of the `Queue`",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Queue`"
        }
      }
    },
    "account_ReferenceTableEntry" : {
      "type" : "object",
      "title" : "Reference table entry",
      "description" : "A single element from a reference table. Reference tables typically represent things like standardized lists of codes.",
      "xml" : {
        "name" : "ReferenceTableEntry"
      },
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code of the reference table entry",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of the reference table entry",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        }
      }
    },
    "account_RelatedCollection" : {
      "type" : "object",
      "title" : "Related collection",
      "description" : "A set of element references that are related to the element in some way. Used to link elements with their relations when a request is made using the `include` query parameter.",
      "xml" : {
        "name" : "RelatedCollection"
      },
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements included in the `data` array"
        },
        "data" : {
          "type" : "array",
          "title" : "Data",
          "description" : "The list of references to the related elements",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/account_SimpleReference"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements in the related set of elements. Only present if the `includeTotal` query parameter is used to request that the total be calculated for an included collection."
        }
      }
    },
    "account_RelatedCollections" : {
      "type" : "object",
      "title" : "Related collections",
      "description" : "A set of `RelatedCollection` elements that contain references to elements included using the `include` query parameter on a request",
      "xml" : {
        "name" : "RelatedCollections"
      },
      "additionalProperties" : {
        "type" : "object",
        "title" : "Related collections",
        "description" : "The related collections. Each key in this object will match the name of the inclusion requested via the `include` query parameter.",
        "$ref" : "#/definitions/account_RelatedCollection"
      }
    },
    "account_SimpleReference" : {
      "type" : "object",
      "title" : "Simple reference",
      "description" : "A reference to an element",
      "xml" : {
        "name" : "SimpleReference"
      },
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "account_SpatialPoint" : {
      "type" : "object",
      "title" : "Spatial point",
      "description" : "An object that combines a latitude with a longitude (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "SpatialPoint"
      },
      "required" : [ "latitude", "longitude" ],
      "properties" : {
        "latitude" : {
          "type" : "string",
          "title" : "Latitude",
          "description" : "The latitude of the spatial point",
          "format" : "gw-bigdecimal"
        },
        "longitude" : {
          "type" : "string",
          "title" : "Longitude",
          "description" : "The longitude of the spatial point",
          "format" : "gw-bigdecimal"
        }
      }
    },
    "account_TypeFilter" : {
      "type" : "object",
      "title" : "TypeFilter",
      "description" : "A `TypeFilter` represents a filtered set of the `TypeKey` values from a `TypeList`",
      "xml" : {
        "name" : "TypeFilter"
      },
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this `TypeFilter`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this `TypeFilter`"
        },
        "typeKeys" : {
          "type" : "array",
          "title" : "TypeKeys",
          "description" : "The `code` values for the `TypeKeys` that are included by this `TypeFilter`",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "account_TypeKey" : {
      "type" : "object",
      "title" : "TypeKey",
      "description" : "A `TypeKey` represents one of the possible enumerated values of a `TypeList`",
      "xml" : {
        "name" : "TypeKey"
      },
      "properties" : {
        "categories" : {
          "type" : "array",
          "title" : "Categories",
          "description" : "The categories that this `TypeKey` belongs to. Categories are formatted by combining the name of the `TypeList` with the `code` for its `TypeKey`, separated by a `.` character.",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code for this `TypeKey`. `TypeKey` codes are unique within a `TypeList`."
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The longer description of this `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The human-readable name of this `TypeKey`"
        },
        "priority" : {
          "type" : "integer",
          "title" : "Priority",
          "description" : "The order of this `TypeKey` relative to other `TypeKeys` in the same `TypeList`. A `TypeKey` with a lower `priority` will appear before a `TypeKey` with a higher priority when the values for a `TypeList` are presented in sorted order."
        },
        "retired" : {
          "type" : "boolean",
          "title" : "Retried",
          "description" : "A `true` value for this field indicates that the `TypeKey` value should no longer be used. Retired `TypeKey` values are retained only for the sake of historical data that may already be using the `TypeKey`.",
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        }
      }
    },
    "account_TypeKeyReference" : {
      "type" : "object",
      "title" : "TypeKey reference",
      "description" : "A reference to a `TypeKey` element that defines an enumerated value from a `TypeList`",
      "xml" : {
        "name" : "TypeKeyReference"
      },
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The `name` of the `TypeKey`"
        }
      }
    },
    "account_TypeList" : {
      "type" : "object",
      "title" : "TypeList",
      "description" : "A `TypeList` represents a list of enumerated `TypeKey` values",
      "xml" : {
        "name" : "TypeList"
      },
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this `TypeList`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this `TypeList`",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "typeFilters" : {
          "type" : "array",
          "title" : "TypeFilters",
          "description" : "The set of `TypeFilters` available on this `TypeList`. A `TypeFilter` represents a filtered subset of the `TypeKeys` in this `TypeList`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/account_TypeFilter"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "typeKeys" : {
          "type" : "array",
          "title" : "TypeKeys",
          "description" : "The list of `TypeKeys` available on this `TypeList`. A `TypeKey` represents one of the enumerated values that comprise this `TypeList`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/account_TypeKey"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "account_UWIssueTypeReference" : {
      "type" : "object",
      "title" : "Underwriting issue type reference",
      "description" : "A reference to a `UWIssueType` that represents a type of underwriting issue (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "UWIssueTypeReference"
      },
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `UWIssueType`",
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the `UWIssueType`"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced `UWIssueType` within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "admin_Activity" : {
      "type" : "object",
      "title" : "Activity",
      "description" : "An `Activity` is an assignable item that represents a task to be done, a decision to be made, or information to be aware of",
      "xml" : {
        "name" : "Activity"
      },
      "properties" : {
        "activityPattern" : {
          "type" : "string",
          "title" : "Activity pattern",
          "description" : "The code of the `ActivityPattern` used to create this activity and set its initial values",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "activityType" : {
          "type" : "object",
          "title" : "Activity type",
          "description" : "The type of this activity, such as `general` or `approval`",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ActivityType"
          }
        },
        "approvalIssue" : {
          "type" : "string",
          "title" : "Approval issue",
          "description" : "The reason approval is needed. Only applicable to activities with an `activityType` of `approval`."
        },
        "approvalRationale" : {
          "type" : "string",
          "title" : "Approval rationale",
          "description" : "Rationale for approving or rejecting this activity. Only applicable to activities with an `activityType` of `approval`."
        },
        "approved" : {
          "type" : "boolean",
          "title" : "Approved",
          "description" : "This field is `true` if this activity has been approved, `false` if this activity has been rejected, and omitted otherwise. Only applicable to activities with an `activityType` of `approval`.",
          "readOnly" : true
        },
        "assignedByUser" : {
          "type" : "object",
          "title" : "Assigned by user",
          "description" : "A reference to the `User` who last assigned or re-assigned this activity",
          "$ref" : "#/definitions/admin_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "assignedGroup" : {
          "type" : "object",
          "title" : "Assigned group",
          "description" : "A reference to the `Group` that this activity is currently assigned to",
          "$ref" : "#/definitions/admin_SimpleReference",
          "readOnly" : true
        },
        "assignedQueue" : {
          "type" : "object",
          "title" : "Assigned queue",
          "description" : "A reference to the `Queue` that this activity is currently assigned to",
          "$ref" : "#/definitions/admin_SimpleReference",
          "readOnly" : true
        },
        "assignedUser" : {
          "type" : "object",
          "title" : "Assigned user",
          "description" : "A reference to the `User` that this activity is currently assigned to",
          "$ref" : "#/definitions/admin_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User",
            "sortable" : true
          }
        },
        "assignmentStatus" : {
          "type" : "object",
          "title" : "Assignment status",
          "description" : "The current assignment status of this activity, such as `assigned` or `unassigned`",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "AssignmentStatus"
          }
        },
        "associatedRole" : {
          "type" : "object",
          "title" : "Associated role",
          "description" : "The role on the parent element that this activity is assigned to. For example, if this activity was created for a job, the activity might be assigned to the `Creator` or `Underwriter` role for that job.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "UserRole"
          }
        },
        "closeDate" : {
          "type" : "string",
          "title" : "Close date",
          "description" : "The date and time when this activity was completed, skipped, approved, or rejected",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "closeUser" : {
          "type" : "object",
          "title" : "Close user",
          "description" : "A reference to the `User` that completed, skipped, approved, or rejected this activity",
          "$ref" : "#/definitions/admin_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `Activity` was created (Since 1.1.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this activity",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "dueDate" : {
          "type" : "string",
          "title" : "Due date",
          "description" : "Date and time by which a person should complete the activity. If not completed by this time, the activity is considered overdue. Not applicable to activities that represent events rather than tasks.",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "endDate" : {
          "type" : "string",
          "title" : "End date",
          "description" : "Date and time at which the activity is expected to end. Only applicable to activities that represent events.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "escalated" : {
          "type" : "boolean",
          "title" : "Escalated",
          "description" : "A `true` value for this field indicates that the activity has been escalated",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "escalationDate" : {
          "type" : "string",
          "title" : "Escalation date",
          "description" : "Date and time at which this activity will be escalated if it has not yet been completed",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "externallyOwned" : {
          "type" : "boolean",
          "title" : "Externally owned",
          "description" : "A `true` value for this field indicates that the activity is owned by a user or group outside of the insurer",
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Activity`",
          "readOnly" : true
        },
        "initialAssignment" : {
          "type" : "object",
          "title" : "Initial assignment",
          "description" : "The `Assignee` that this activity should be assigned to when it is first created",
          "$ref" : "#/definitions/admin_Assignee",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "mandatory" : {
          "type" : "boolean",
          "title" : "Mandatory",
          "description" : "A `true` value for this field indicates that the activity is mandatory and cannot be skipped"
        },
        "priority" : {
          "type" : "object",
          "title" : "Priority",
          "description" : "The priority of this activity",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "Priority"
          }
        },
        "recurring" : {
          "type" : "boolean",
          "title" : "Recurring",
          "description" : "A `true` value indicates that this activity is recurring"
        },
        "startDate" : {
          "type" : "string",
          "title" : "Start date",
          "description" : "Date and time at which the activity is scheduled to begin. Only applicable to activities that represent events.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The status of this activity, such as `open` or `complete`",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ActivityStatus"
          }
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "A brief title for the activity",
          "minLength" : 1,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        }
      }
    },
    "admin_ActivityPattern" : {
      "type" : "object",
      "title" : "Activity pattern",
      "description" : "An `ActivityPattern` is a template for an activity, and is used to create a new activity and set defaults for some of its fields",
      "xml" : {
        "name" : "ActivityPattern"
      },
      "properties" : {
        "activityClass" : {
          "type" : "object",
          "title" : "Activity class",
          "description" : "The class of activity that this activity pattern creates, such as `task` or `event`",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ActivityClass"
          }
        },
        "activityType" : {
          "type" : "object",
          "title" : "Activity type",
          "description" : "The type of activity that this activity pattern creates, such as `general` or `approval`",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ActivityType"
          }
        },
        "category" : {
          "type" : "object",
          "title" : "Category",
          "description" : "The category of the activity pattern. Used to help organize `ActivityPatterns` when presenting them to a user.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ActivityCategory"
          }
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code that uniquely identifies this `ActivityPattern`",
          "x-gw-extensions" : {
            "createOnly" : true,
            "sortable" : true
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The default `description` for activities created from this activity pattern"
        },
        "dueDate" : {
          "type" : "string",
          "title" : "Due date",
          "description" : "The default `dueDate` for activities created from this activity pattern, calculated based on the current date and time",
          "format" : "date-time"
        },
        "escalationDate" : {
          "type" : "string",
          "title" : "Escalation date",
          "description" : "The default `escalationDate` for activities created from this activity pattern, calculated based on the current date and time",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `ActivityPattern`"
        },
        "mandatory" : {
          "type" : "boolean",
          "title" : "Mandatory",
          "description" : "The default `mandatory` value for activities created from this activity pattern"
        },
        "patternLevel" : {
          "type" : "object",
          "title" : "Pattern level",
          "description" : "The type of parent element, such as `Job` or `Account`, that this activity pattern applies to",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ActivityPatternLevel"
          }
        },
        "priority" : {
          "type" : "object",
          "title" : "Priority",
          "description" : "The default `priority` for activities created from this activity pattern",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "Priority"
          }
        },
        "recurring" : {
          "type" : "boolean",
          "title" : "Recurring",
          "description" : "The default `recurring` value for activities created from this activity pattern"
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "The default `subject` for activities created from this activity pattern"
        }
      }
    },
    "admin_Address" : {
      "type" : "object",
      "title" : "Address",
      "description" : "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
      "xml" : {
        "name" : "Address"
      },
      "x-gw-extensions" : {
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the address",
          "x-gw-nullable" : true
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the address",
          "x-gw-nullable" : true
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the address",
          "x-gw-nullable" : true
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the address (Since 1.2.0)",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AddressType"
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the address",
          "x-gw-nullable" : true
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of the address (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
          "readOnly" : true
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Address`",
          "readOnly" : true
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "spatialPoint" : {
          "type" : "object",
          "title" : "Spatial point",
          "description" : "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
          "$ref" : "#/definitions/admin_SpatialPoint",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State"
          }
        },
        "validUntil" : {
          "type" : "string",
          "title" : "Valid until",
          "description" : "The date and time that the address is valid until (Since 1.2.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        }
      }
    },
    "admin_Assignee" : {
      "type" : "object",
      "title" : "Assignee",
      "description" : "An `Assignee` represents the target of an assignment action, such as a user/group combination, assignment queue, or automatic rule-based assignment",
      "xml" : {
        "name" : "Assignee"
      },
      "properties" : {
        "assigneeId" : {
          "type" : "string",
          "title" : "Assignee ID",
          "description" : "Unique ID to reference this `Assignee` for includes (Since 1.4.0)",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true
        },
        "autoAssign" : {
          "type" : "boolean",
          "title" : "Auto assign",
          "description" : "Set to `true` to indicate the assignment should be done automatically by the system. Cannot be combined with any other fields."
        },
        "groupId" : {
          "type" : "string",
          "title" : "Group ID",
          "description" : "The ID of the `Group` that the resource should be assigned to. If specified without the `userId` field, the `User` within the `Group` is selected by assignment rules. If specified along with the `userId` field, that specific `User` is assigned the element."
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "A human-readable name for the type of assignment that this `Assignee` represents",
          "readOnly" : true
        },
        "queueId" : {
          "type" : "string",
          "title" : "Queue ID",
          "description" : "The ID of the `Queue` that the resource should be assigned to. Cannot be combined with any other fields."
        },
        "role" : {
          "type" : "object",
          "title" : "Role",
          "description" : "Requests assignment of the element to the user that has the specified role on the element or its parent. Cannot be combined with any other fields.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UserRole"
          }
        },
        "userId" : {
          "type" : "string",
          "title" : "User ID",
          "description" : "The ID of the `User` that the resource should be assigned to. The `groupId` field must also be specified if the `userId` field is specified, and the `User` must be a member of that `Group` and have permission to be assigned the element."
        }
      }
    },
    "CommissionPlan" : {
      "type" : "object",
      "title" : "Commission plan",
      "description" : "A plan for how commissions are paid, configured for a particular producer code (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "commissionPlanId" : {
          "type" : "string",
          "title" : "Commission plan ID",
          "description" : "The ID of the commission plan in the linked billing system",
          "readOnly" : true
        },
        "currency" : {
          "type" : "object",
          "title" : "Currency",
          "description" : "The currency used by this commission plan",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "Currency"
          }
        }
      }
    },
    "admin_Contact" : {
      "type" : "object",
      "title" : "Contact",
      "description" : "A `Contact` represents a person or company",
      "xml" : {
        "name" : "Contact"
      },
      "properties" : {
        "addressBookUID" : {
          "type" : "string",
          "title" : "Address book UID",
          "description" : "The unique ID of this `Contact` within the contact management system. Only applicable if the `Contact` has been linked to a contact management system.",
          "x-gw-nullable" : true
        },
        "cellPhone" : {
          "type" : "object",
          "title" : "Cell phone",
          "description" : "The person's mobile phone number. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/admin_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The name of the company represented by this `Contact`. Only applicable for a `Contact` that represents a company.",
          "x-gw-extensions" : {
            "entitySubtype" : "Company"
          }
        },
        "dateOfBirth" : {
          "type" : "string",
          "title" : "Date of birth",
          "description" : "The person's date of birth. Only applicable for a `Contact` that represents a person.",
          "format" : "date",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now",
            "entitySubtype" : "Person"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "A formatted representation of the full name for this `Contact', including all applicable fields such as `firstName` or `lastName`",
          "readOnly" : true,
          "x-gw-nullable" : true
        },
        "emailAddress1" : {
          "type" : "string",
          "title" : "E-mail address 1",
          "description" : "The contact's primary e-mail address",
          "x-gw-nullable" : true
        },
        "emailAddress2" : {
          "type" : "string",
          "title" : "E-mail address 2",
          "description" : "The contact's secondary e-mail address",
          "x-gw-nullable" : true
        },
        "externalId" : {
          "type" : "string",
          "title" : "External ID",
          "description" : "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The persons's first name. Only applicable for a `Contact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "homePhone" : {
          "type" : "object",
          "title" : "Home phone",
          "description" : "The person's home phone number. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/admin_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Contact`",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The person's last name. Only applicable for a `Contact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "preferred" : {
          "type" : "boolean",
          "title" : "Preferred",
          "description" : "A `true` value for this field indicates that the vendor is one of the insurer's preferred vendors. Only applicable for a `Contact` that represents a vendor.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : [ "CompanyVendor", "PersonVendor" ]
          }
        },
        "primaryAddress" : {
          "type" : "object",
          "title" : "Primary address",
          "description" : "The contact's primary address",
          "$ref" : "#/definitions/admin_Address",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "primaryLanguage" : {
          "type" : "object",
          "title" : "Primary language",
          "description" : "The contact's primary language",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "primaryLocale" : {
          "type" : "object",
          "title" : "Primary locale",
          "description" : "The contact's primary locale",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LocaleType"
          }
        },
        "primaryPhone" : {
          "type" : "string",
          "title" : "Primary phone",
          "description" : "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
          "readOnly" : true
        },
        "primaryPhoneType" : {
          "type" : "object",
          "title" : "Primary phone type",
          "description" : "The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "PrimaryPhoneType"
          }
        },
        "subtype" : {
          "type" : "object",
          "title" : "Subtype",
          "description" : "The specific type of contact that this `Contact` represents, such as `Person` or `Company`. The set of fields that can be set on a `Contact` depend on its `subtype`.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "typelist" : "Contact"
          }
        },
        "taxId" : {
          "type" : "string",
          "title" : "Tax ID",
          "description" : "The contact's tax ID"
        },
        "workPhone" : {
          "type" : "object",
          "title" : "Work phone",
          "description" : "The contact's work phone number, if this `Contact` represents a person, or the business's phone number, if this `Contact` represents a company",
          "$ref" : "#/definitions/admin_PhoneNumber",
          "x-gw-nullable" : true
        }
      }
    },
    "admin_Document" : {
      "type" : "object",
      "title" : "Document",
      "description" : "A `Document` represents a document within the application, which can have additional metadata such as the author of the document or a specific security level. The actual contents of the document are generally stored in a separate document management system that this application is linked to. (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "xml" : {
        "name" : "Document"
      },
      "properties" : {
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "author" : {
          "type" : "string",
          "title" : "Author",
          "description" : "The name of the person who created this document",
          "x-gw-nullable" : true
        },
        "contingency" : {
          "type" : "object",
          "title" : "Contingency",
          "description" : "A reference to the `Contingency` that this document is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Contingency"
          }
        },
        "dateModified" : {
          "type" : "string",
          "title" : "Date modified",
          "description" : "The date and time that this `Document` was most recently updated",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of this document",
          "x-gw-nullable" : true
        },
        "docUID" : {
          "type" : "string",
          "title" : "Document UID",
          "description" : "The unique identifier for this `Document` in the linked document management system. The exact format of the identifier depends upon the specifics of the document management system the application is linked to.",
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Document`",
          "readOnly" : true
        },
        "inbound" : {
          "type" : "boolean",
          "title" : "Inbound",
          "description" : "This field indicates whether this document is considered to be inbound, outbound, or neither",
          "x-gw-nullable" : true
        },
        "job" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the `Job` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Job"
          }
        },
        "language" : {
          "type" : "object",
          "title" : "Language",
          "description" : "The language in which this document was produced",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "mimeType" : {
          "type" : "string",
          "title" : "MIME type",
          "description" : "The MIME type of this document, such as `application/msword` for a Microsoft Word document"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this document",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          }
        },
        "obsolete" : {
          "type" : "boolean",
          "title" : "Obsolete",
          "description" : "Setting this field to `true` indicates that the information in this document can no longer be relied upon to be current and relevant. This is often used instead of deletion to preserve history.",
          "x-gw-nullable" : true
        },
        "policy" : {
          "type" : "object",
          "title" : "Policy",
          "description" : "A reference to the `Policy` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "recipient" : {
          "type" : "string",
          "title" : "Recipient",
          "description" : "The name of the intended recipient of this document",
          "x-gw-nullable" : true
        },
        "section" : {
          "type" : "object",
          "title" : "Section",
          "description" : "The section to which this document belongs",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "DocumentSection"
          }
        },
        "securityType" : {
          "type" : "object",
          "title" : "Security type",
          "description" : "The security level that has been assigned to this document",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DocumentSecurityType"
          }
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The current status of this document, such as `draft` or `approved`",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "typelist" : "DocumentStatusType"
          }
        },
        "type" : {
          "type" : "object",
          "title" : "Type",
          "description" : "The specific type of document",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "requiredForCreate" : true,
            "typelist" : "DocumentType"
          }
        }
      }
    },
    "admin_DocumentContent" : {
      "type" : "object",
      "title" : "Document content",
      "description" : "The contents of a `Document` (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "xml" : {
        "name" : "DocumentContent"
      },
      "properties" : {
        "contents" : {
          "type" : "string",
          "title" : "Contents",
          "description" : "The contents of this document as a Base64-encoded string",
          "format" : "byte",
          "readOnly" : true
        },
        "responseMimeType" : {
          "type" : "string",
          "title" : "Response MIME type",
          "description" : "The MIME type of this document's contents, such as `application/msword` for a Microsoft Word document",
          "readOnly" : true
        },
        "url" : {
          "type" : "string",
          "title" : "URL",
          "description" : "The URL of this document within the linked document management system",
          "readOnly" : true
        }
      }
    },
    "admin_ExclusiveStateSet" : {
      "type" : "object",
      "title" : "Exclusive state set",
      "description" : "A set of states that can be used either as an inclusive set or an exclusive set (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "ExclusiveStateSet"
      },
      "required" : [ "inclusionType", "states" ],
      "properties" : {
        "inclusionType" : {
          "type" : "string",
          "title" : "Inclusion type",
          "description" : "Whether the set of states is inclusive or exclusive",
          "enum" : [ "exclusive", "inclusive" ]
        },
        "states" : {
          "type" : "array",
          "title" : "States",
          "description" : "The states that comprise the set",
          "minItems" : 1,
          "items" : {
            "type" : "string",
            "x-gw-type" : "typekey.State"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "admin_GenericRelation" : {
      "type" : "object",
      "title" : "Generic relation",
      "description" : "A reference to a related element",
      "xml" : {
        "name" : "GenericRelation"
      },
      "required" : [ "id", "type" ],
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the referenced element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "Group" : {
      "type" : "object",
      "title" : "Group",
      "description" : "A named group within the system (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of this group",
          "readOnly" : true
        },
        "groupType" : {
          "type" : "object",
          "title" : "Group type",
          "description" : "Type of this group",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "GroupType"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this group",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this group",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "parent" : {
          "type" : "object",
          "title" : "Parent",
          "description" : "A reference to the `Group` that is the parent of this group",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "Group"
          }
        },
        "securityZone" : {
          "type" : "object",
          "title" : "Security zone",
          "description" : "A reference to the `SecurityZone` that this group belongs to",
          "$ref" : "#/definitions/admin_SimpleReference"
        },
        "supervisor" : {
          "type" : "object",
          "title" : "Supervisor",
          "description" : "A reference to the `User` that represents the supervisor of this group",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        }
      }
    },
    "admin_GroupDetail" : {
      "type" : "object",
      "title" : "Group detail",
      "description" : "Used to represent a reference to a `Group`",
      "xml" : {
        "name" : "GroupDetail"
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The name of the `Group`"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Group`"
        }
      }
    },
    "admin_GroupReference" : {
      "type" : "object",
      "title" : "Group reference",
      "description" : "A reference to `Group` element (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "GroupReference"
      },
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "branchCode" : {
          "type" : "string",
          "title" : "Branch code",
          "description" : "The `branchCode` of the group",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the group"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced `Group` within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "GroupUser" : {
      "type" : "object",
      "title" : "Details about a user's involvement in a group",
      "description" : "Details about a user's involvement in a group (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "loadFactor" : {
          "type" : "integer",
          "title" : "Load factor",
          "description" : "Percentage value of normal workload to be given to this user in this group",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "loadFactorType" : {
          "type" : "object",
          "title" : "Load factor type",
          "description" : "Type of load factor privileges the user has in this group",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "LoadFactorType"
          }
        },
        "manager" : {
          "type" : "boolean",
          "title" : "Manager",
          "description" : "Flag indicating whether the user has permission to see activity within the group",
          "x-gw-nullable" : false,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "member" : {
          "type" : "boolean",
          "title" : "Member",
          "description" : "Flag indicating whether the user is a working member of the group (for purposes of work assignment, for example), as opposed to simply being associated with the group as a manager or other auxiliary person",
          "x-gw-nullable" : false,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "user" : {
          "type" : "object",
          "title" : "User",
          "description" : "The associated user",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-nullable" : false,
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "resourceType" : "User",
            "sortable" : true
          }
        }
      }
    },
    "admin_LinkObject" : {
      "type" : "object",
      "title" : "Linked object",
      "description" : "A standard HTTP link",
      "xml" : {
        "name" : "LinkObject"
      },
      "properties" : {
        "href" : {
          "type" : "string",
          "title" : "HREF",
          "description" : "The URL of the link"
        },
        "methods" : {
          "type" : "array",
          "title" : "Methods",
          "description" : "An array of HTTP method names that can be used with the link URL",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "admin_Links" : {
      "type" : "object",
      "title" : "Links",
      "description" : "A set of named links",
      "xml" : {
        "name" : "Links"
      },
      "additionalProperties" : {
        "type" : "object",
        "title" : "Links",
        "description" : "A set of named links. Each key represents the name of the link, such as a child of the current element, an action that can be taken on it, or a navigation option.",
        "$ref" : "#/definitions/admin_LinkObject"
      }
    },
    "admin_MetaObject" : {
      "type" : "object",
      "title" : "Meta object",
      "description" : "An element",
      "xml" : {
        "name" : "MetaObject"
      },
      "properties" : {
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "The checksum of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "The set of links related to the element",
          "$ref" : "#/definitions/admin_Links"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "related" : {
          "type" : "object",
          "title" : "Related collections",
          "description" : "The set of related collections included with the element",
          "$ref" : "#/definitions/admin_RelatedCollections"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of element"
        }
      }
    },
    "admin_MonetaryAmount" : {
      "type" : "object",
      "title" : "Monetary amount",
      "description" : "A monetary amount that combines a decimal amount with a currency",
      "xml" : {
        "name" : "MonetaryAmount"
      },
      "required" : [ "amount", "currency" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "title" : "Amount",
          "description" : "The decimal amount",
          "format" : "gw-bigdecimal"
        },
        "currency" : {
          "type" : "string",
          "title" : "Currency",
          "description" : "The currency for the amount",
          "x-gw-type" : "typekey.Currency"
        }
      }
    },
    "admin_Note" : {
      "type" : "object",
      "title" : "Note",
      "description" : "A `Note` is used to capture any sort of additional text that needs to be associated with another business object. A `Note` consists of a `body` that contains the actual text of the note, along with other fields the represent additional metadata about the note.",
      "xml" : {
        "name" : "Note"
      },
      "properties" : {
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "author" : {
          "type" : "object",
          "title" : "Author",
          "description" : "The `User` who authored this note",
          "$ref" : "#/definitions/admin_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "body" : {
          "type" : "string",
          "title" : "Body",
          "description" : "The text of this note",
          "minLength" : 1,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "requiredForCreate" : true
          }
        },
        "bodySummary" : {
          "type" : "string",
          "title" : "Body summary",
          "description" : "A shorter summary of this note's `body` field, more suitable for displaying in a list of notes",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "summary" ]
          }
        },
        "confidential" : {
          "type" : "boolean",
          "title" : "Confidential",
          "description" : "A `true` value for this field indicates that the note contains confidential information"
        },
        "contingency" : {
          "type" : "object",
          "title" : "Contingency",
          "description" : "A reference to the `Contingency` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Contingency"
          }
        },
        "createdDate" : {
          "type" : "string",
          "title" : "Created date",
          "description" : "The date and time that this `Note` was created",
          "format" : "date-time",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "Unique identifier of this `Note`",
          "readOnly" : true
        },
        "job" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the `Job` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Job"
          }
        },
        "policy" : {
          "type" : "object",
          "title" : "Policy",
          "description" : "A reference to the `Policy` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "securityType" : {
          "type" : "object",
          "title" : "Security type",
          "description" : "The security level that has been assigned to this note",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "NoteSecurityType"
          }
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "The subject of this note",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "topic" : {
          "type" : "object",
          "title" : "Topic",
          "description" : "The topic of this note",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "NoteTopicType"
          }
        },
        "updateTime" : {
          "type" : "string",
          "title" : "Update time",
          "description" : "The date and time when this `Note` was most recently updated",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        }
      }
    },
    "Organization" : {
      "type" : "object",
      "title" : "Organization",
      "description" : "An `Organization` represents an organization that can contain groups and users. One `Organization` is used to represent the insurer, while other `Organization` elements represent external organizations, such as third-party agencies. (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "carrier" : {
          "type" : "boolean",
          "title" : "Carrier",
          "description" : "A `true` value indicates that this organization represents the insurer rather than an external organization. Only one `Organization` within the system can have this field set to `true`.",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "contact" : {
          "type" : "object",
          "title" : "Contact",
          "description" : "Information about the primary contact for the organization",
          "$ref" : "#/definitions/admin_Contact",
          "x-gw-nullable" : true
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the `Organization`",
          "readOnly" : true
        },
        "groupDescription" : {
          "type" : "string",
          "title" : "Group description",
          "description" : "A description of the root group for this organization",
          "x-gw-nullable" : true
        },
        "groupLoadFactor" : {
          "type" : "integer",
          "title" : "Group load factor",
          "description" : "The percentage of a normal workload given to the root group for this organization. Load factors are used for automated assignment.",
          "x-gw-nullable" : true
        },
        "groupSecurityZone" : {
          "type" : "object",
          "title" : "Group security zone",
          "description" : "A reference to the `SecurityZone` that the root group for this organization belongs to",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "SecurityZone"
          }
        },
        "groupSupervisor" : {
          "type" : "object",
          "title" : "Group supervisor",
          "description" : "A reference to the `User` assigned as the supervisor for the root group for this organization",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Organization`"
        },
        "masterAdmin" : {
          "type" : "boolean",
          "title" : "Master admin",
          "description" : "A `true` value indicates that this `Organization` has administrator powers over all other `Organization` elements in the system",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of the organization",
          "maxLength" : 60,
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          }
        },
        "producerStatus" : {
          "type" : "object",
          "title" : "Producer status",
          "description" : "The status of the producer this `Organization` represents, such as `Active` or `Suspended`. Only applicable if the `type` of this `Organization` is a business type that applies to producers.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ProducerStatus"
          }
        },
        "rootGroup" : {
          "type" : "object",
          "title" : "Root group",
          "description" : "A reference to the `Group` that is the root group for this `Organization`",
          "$ref" : "#/definitions/admin_SimpleReference",
          "readOnly" : true
        },
        "tier" : {
          "type" : "object",
          "title" : "Producer tier",
          "description" : "The tier of the producer this `Organization` represents. Only applicable if the `type` of this `Organization` is a business type that applies to producers.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "Tier"
          }
        },
        "type" : {
          "type" : "object",
          "title" : "Type",
          "description" : "The type of organization",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "requiredForCreate" : true,
            "typelist" : "BusinessType"
          }
        }
      }
    },
    "admin_PhoneNumber" : {
      "type" : "object",
      "title" : "Phone number",
      "description" : "A phone number, with different components of the number broken out as separate fields",
      "xml" : {
        "name" : "PhoneNumber"
      },
      "required" : [ "countryCode", "number" ],
      "properties" : {
        "countryCode" : {
          "type" : "object",
          "title" : "Country code",
          "description" : "The country code for the phone number",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "PhoneCountryCode"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The phone number formatted in a standardized way",
          "readOnly" : true
        },
        "extension" : {
          "type" : "string",
          "title" : "Extension",
          "description" : "The extension for the phone number",
          "x-gw-nullable" : true
        },
        "number" : {
          "type" : "string",
          "title" : "Number",
          "description" : "The actual phone number, including area code, but excluding the country code and extension"
        }
      }
    },
    "ProducerCode" : {
      "type" : "object",
      "title" : "Producer code",
      "description" : "A `ProducerCode` represents a specific set of commission options, assignment preferences, and permissions granted to a particular producer (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "address" : {
          "type" : "object",
          "title" : "Address",
          "description" : "The primary address for this producer code",
          "$ref" : "#/definitions/admin_Address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "appointmentDate" : {
          "type" : "string",
          "title" : "Appointment date",
          "description" : "The date and time when the insurer's relationship with the producer began",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "branch" : {
          "type" : "object",
          "title" : "Branch",
          "description" : "A reference to the `Group` that represents the group within the insurer that handles business for this producer code",
          "$ref" : "#/definitions/admin_GroupReference",
          "x-gw-nullable" : true
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code assigned to this producer code",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          }
        },
        "commissionPlans" : {
          "type" : "array",
          "title" : "Commission plans",
          "description" : "A list of the commission plans available for use with this producer code",
          "minItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CommissionPlan"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of this producer code",
          "x-gw-nullable" : true
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of this `ProducerCode`",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "organization" : {
          "type" : "object",
          "title" : "Organization",
          "description" : "A reference to the `Organization` that represents the producer this code has been assigned to",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "resourceType" : "Organization",
            "sortable" : true
          }
        },
        "parent" : {
          "type" : "object",
          "title" : "Parent",
          "description" : "The `ProducerCode` assigned as the parent of this `ProducerCode`",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "ProducerCode"
          }
        },
        "preferredUnderwriter" : {
          "type" : "object",
          "title" : "Preferred underwriter",
          "description" : "A reference to the `User` that represents the preferred underwriter for this producer code",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "User",
            "securityLevel" : "special"
          }
        },
        "producerStatus" : {
          "type" : "object",
          "title" : "Producer status",
          "description" : "The status of this producer code, such as `Active` or `Suspended`. Some actions using this producer code will be restricted if the status is not `Active`.",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ProducerStatus"
          }
        },
        "roles" : {
          "type" : "array",
          "title" : "Roles",
          "description" : "A list of references to `Role` elements that define permissions granted by this producer code. Users that are configured to use producer code security must have permission both via their own roles and via the applicable producer code's roles in order to read or write a job or policy.",
          "minItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/admin_SimpleReference"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "requiredForCreate" : true
          }
        },
        "terminationDate" : {
          "type" : "string",
          "title" : "Termination date",
          "description" : "The date that the insurer's relationship with this producer ended or will be terminated",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "admin_QueueDetail" : {
      "type" : "object",
      "title" : "Queue detail",
      "description" : "Used to represent a reference to a `Queue`",
      "xml" : {
        "name" : "QueueDetail"
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The name of the `Queue`"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Queue`"
        }
      }
    },
    "admin_ReferenceTableEntry" : {
      "type" : "object",
      "title" : "Reference table entry",
      "description" : "A single element from a reference table. Reference tables typically represent things like standardized lists of codes.",
      "xml" : {
        "name" : "ReferenceTableEntry"
      },
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code of the reference table entry"
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of the reference table entry"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        }
      }
    },
    "admin_RelatedCollection" : {
      "type" : "object",
      "title" : "Related collection",
      "description" : "A set of element references that are related to the element in some way. Used to link elements with their relations when a request is made using the `include` query parameter.",
      "xml" : {
        "name" : "RelatedCollection"
      },
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements included in the `data` array"
        },
        "data" : {
          "type" : "array",
          "title" : "Data",
          "description" : "The list of references to the related elements",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/admin_SimpleReference"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements in the related set of elements. Only present if the `includeTotal` query parameter is used to request that the total be calculated for an included collection."
        }
      }
    },
    "admin_RelatedCollections" : {
      "type" : "object",
      "title" : "Related collections",
      "description" : "A set of `RelatedCollection` elements that contain references to elements included using the `include` query parameter on a request",
      "xml" : {
        "name" : "RelatedCollections"
      },
      "additionalProperties" : {
        "type" : "object",
        "title" : "Related collections",
        "description" : "The related collections. Each key in this object will match the name of the inclusion requested via the `include` query parameter.",
        "$ref" : "#/definitions/admin_RelatedCollection"
      }
    },
    "Role" : {
      "type" : "object",
      "title" : "Role",
      "description" : "A named role within the system (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "carrierInternal" : {
          "type" : "boolean",
          "title" : "Carrier internal",
          "description" : "A `true` value indicates that the role is applicable to users internal to the carrier organization",
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Detailed description of the role",
          "x-gw-nullable" : true
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the role",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Role`",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of the role",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "roleType" : {
          "type" : "object",
          "title" : "Role type",
          "description" : "The type of role",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : false,
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "requiredForCreate" : true,
            "typelist" : "RoleType"
          }
        }
      }
    },
    "RolePermission" : {
      "type" : "object",
      "title" : "Role permission",
      "description" : "A RolePermission represents a permission granted to a particular role (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "permission" : {
          "type" : "object",
          "title" : "Permission",
          "description" : "A reference to a `SystemPermissionType` that has been granted to a role",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true,
            "typelist" : "SystemPermissionType"
          }
        }
      }
    },
    "admin_SimpleReference" : {
      "type" : "object",
      "title" : "Simple reference",
      "description" : "A reference to an element",
      "xml" : {
        "name" : "SimpleReference"
      },
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "admin_SpatialPoint" : {
      "type" : "object",
      "title" : "Spatial point",
      "description" : "An object that combines a latitude with a longitude (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "SpatialPoint"
      },
      "required" : [ "latitude", "longitude" ],
      "properties" : {
        "latitude" : {
          "type" : "string",
          "title" : "Latitude",
          "description" : "The latitude of the spatial point",
          "format" : "gw-bigdecimal"
        },
        "longitude" : {
          "type" : "string",
          "title" : "Longitude",
          "description" : "The longitude of the spatial point",
          "format" : "gw-bigdecimal"
        }
      }
    },
    "admin_TypeFilter" : {
      "type" : "object",
      "title" : "TypeFilter",
      "description" : "A `TypeFilter` represents a filtered set of the `TypeKey` values from a `TypeList`",
      "xml" : {
        "name" : "TypeFilter"
      },
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this `TypeFilter`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this `TypeFilter`"
        },
        "typeKeys" : {
          "type" : "array",
          "title" : "TypeKeys",
          "description" : "The `code` values for the `TypeKeys` that are included by this `TypeFilter`",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "admin_TypeKey" : {
      "type" : "object",
      "title" : "TypeKey",
      "description" : "A `TypeKey` represents one of the possible enumerated values of a `TypeList`",
      "xml" : {
        "name" : "TypeKey"
      },
      "properties" : {
        "categories" : {
          "type" : "array",
          "title" : "Categories",
          "description" : "The categories that this `TypeKey` belongs to. Categories are formatted by combining the name of the `TypeList` with the `code` for its `TypeKey`, separated by a `.` character.",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code for this `TypeKey`. `TypeKey` codes are unique within a `TypeList`."
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The longer description of this `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The human-readable name of this `TypeKey`"
        },
        "priority" : {
          "type" : "integer",
          "title" : "Priority",
          "description" : "The order of this `TypeKey` relative to other `TypeKeys` in the same `TypeList`. A `TypeKey` with a lower `priority` will appear before a `TypeKey` with a higher priority when the values for a `TypeList` are presented in sorted order."
        },
        "retired" : {
          "type" : "boolean",
          "title" : "Retried",
          "description" : "A `true` value for this field indicates that the `TypeKey` value should no longer be used. Retired `TypeKey` values are retained only for the sake of historical data that may already be using the `TypeKey`.",
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        }
      }
    },
    "admin_TypeKeyReference" : {
      "type" : "object",
      "title" : "TypeKey reference",
      "description" : "A reference to a `TypeKey` element that defines an enumerated value from a `TypeList`",
      "xml" : {
        "name" : "TypeKeyReference"
      },
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The `name` of the `TypeKey`"
        }
      }
    },
    "admin_TypeList" : {
      "type" : "object",
      "title" : "TypeList",
      "description" : "A `TypeList` represents a list of enumerated `TypeKey` values",
      "xml" : {
        "name" : "TypeList"
      },
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this `TypeList`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this `TypeList`",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "typeFilters" : {
          "type" : "array",
          "title" : "TypeFilters",
          "description" : "The set of `TypeFilters` available on this `TypeList`. A `TypeFilter` represents a filtered subset of the `TypeKeys` in this `TypeList`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/admin_TypeFilter"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "typeKeys" : {
          "type" : "array",
          "title" : "TypeKeys",
          "description" : "The list of `TypeKeys` available on this `TypeList`. A `TypeKey` represents one of the enumerated values that comprise this `TypeList`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/admin_TypeKey"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "UWAuthorityGrant" : {
      "type" : "object",
      "title" : "Underwriting authority grant",
      "description" : "Underwriting authority grant attached to an underwriting authority profile (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "approveAnyValue" : {
          "type" : "boolean",
          "title" : "ApproveAnyValue",
          "description" : "If this property is true, the grant has the authority to approve any value for the given underwriting issue type"
        },
        "comparator" : {
          "type" : "object",
          "title" : "Comparator",
          "description" : "Defines both the type of value for the issue and how the issue's value is compared to the approval value to determine if the approval is valid",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ValueComparator"
          }
        },
        "decimalValue" : {
          "type" : "string",
          "title" : "Decimal value",
          "description" : "The value of the issue as a decimal. Only applicable if `valueType` is `decimal`.",
          "format" : "gw-bigdecimal"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this underwriting authority grant",
          "readOnly" : true
        },
        "integerValue" : {
          "type" : "string",
          "title" : "Integer value",
          "description" : "The value of the issue as an integer. Only applicable if `valueType` is `integer`.",
          "format" : "gw-biginteger"
        },
        "issueType" : {
          "type" : "object",
          "title" : "Underwriting issue type",
          "description" : "A reference to the `UWIssueType` that defines the type of this issue",
          "$ref" : "#/definitions/admin_UWIssueTypeReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "moneyValue" : {
          "type" : "object",
          "title" : "Money value",
          "description" : "The value of the issue as a monetary amount. Only applicable if `valueType` is `money`.",
          "$ref" : "#/definitions/admin_MonetaryAmount"
        },
        "stateSetValue" : {
          "type" : "object",
          "title" : "State set value",
          "description" : "The value of the issue as a set of states. Only applicable if `valueType` is `stateset`.",
          "$ref" : "#/definitions/admin_ExclusiveStateSet"
        },
        "valueType" : {
          "type" : "string",
          "title" : "Value type",
          "description" : "The type of value for this issue type and its approvals. This field determines which of the value fields are applicable to this issue.",
          "readOnly" : true
        }
      }
    },
    "UWAuthorityProfile" : {
      "type" : "object",
      "title" : "Underwriting authority profile",
      "description" : "Underwriting authority profiles determine the types of underwriting issues that can be approved by users who have been assigned the profile (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of this authority profile",
          "x-gw-nullable" : true
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of this authority profile",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this authority profile",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this authority profile",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          }
        }
      }
    },
    "admin_UWIssueTypeReference" : {
      "type" : "object",
      "title" : "Underwriting issue type reference",
      "description" : "A reference to a `UWIssueType` that represents a type of underwriting issue (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "UWIssueTypeReference"
      },
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `UWIssueType`",
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the `UWIssueType`"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced `UWIssueType` within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "User" : {
      "type" : "object",
      "title" : "User",
      "description" : "A named user within the system",
      "properties" : {
        "active" : {
          "type" : "boolean",
          "title" : "Active",
          "description" : "A `true` value indicates that the user is currently active and allowed to log in. A `false` value indicates the user has been deactivated and cannot currently log in.",
          "x-gw-extensions" : {
            "securityLevel" : "internal"
          }
        },
        "cellPhone" : {
          "type" : "object",
          "title" : "Cell phone",
          "description" : "The cell phone number for the user (Since 1.3.0)",
          "$ref" : "#/definitions/admin_PhoneNumber",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "securityLevel" : "internal"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the `User`",
          "readOnly" : true
        },
        "employeeNumber" : {
          "type" : "string",
          "title" : "Employee number",
          "description" : "The employee number assigned to the user",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "securityLevel" : "internal"
          }
        },
        "externalUser" : {
          "type" : "boolean",
          "title" : "External user",
          "description" : "A `true` value indicates that the user represents a user from an external organization, rather than a user from within the insurer's organization",
          "readOnly" : true,
          "x-gw-extensions" : {
            "securityLevel" : "internal"
          }
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The first name of the user",
          "x-gw-nullable" : true
        },
        "groups" : {
          "type" : "array",
          "title" : "Groups",
          "description" : "A list of references to the `Group` elements that represent the groups this user has been added to (Since 1.2.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/admin_SimpleReference",
            "x-gw-extensions" : {
              "resourceType" : "Group"
            }
          },
          "x-gw-sinceVersion" : "1.2.0",
          "xml" : {
            "wrapped" : true
          }
        },
        "homePhone" : {
          "type" : "object",
          "title" : "Home phone",
          "description" : "The home phone number for the user (Since 1.3.0)",
          "$ref" : "#/definitions/admin_PhoneNumber",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "securityLevel" : "internal"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `User`",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The last name of the user",
          "x-gw-nullable" : true
        },
        "organization" : {
          "type" : "object",
          "title" : "Organization",
          "description" : "A reference to the `Organization` that this `User` belongs to (Since 1.2.0)",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-extensions" : {
            "resourceType" : "Organization"
          }
        },
        "roles" : {
          "type" : "array",
          "title" : "Roles",
          "description" : "The roles assigned to the user (Since 1.3.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UserRoleReference"
          },
          "x-gw-sinceVersion" : "1.3.0",
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "securityLevel" : "special"
          }
        },
        "suffix" : {
          "type" : "object",
          "title" : "Suffix",
          "description" : "The name suffix of the user",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "securityLevel" : "internal",
            "typelist" : "NameSuffix"
          }
        },
        "useOrgAddress" : {
          "type" : "boolean",
          "title" : "Use organization address",
          "description" : "A `true` value for this field indicates that the `address` of the user's `organization` should be used for this user (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "securityLevel" : "internal"
          }
        },
        "useProducerCodeSecurity" : {
          "type" : "boolean",
          "title" : "Use producer code security",
          "description" : "A `true` value for this field indicates that this user is subject to producer code security. Producer code security restricts access such that the user can only access jobs and policies that are written or serviced by one of the producer codes this user has been assigned. Note that switching the use producer code security flag from `true` to `false` will remove all producer codes from the user. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-extensions" : {
            "securityLevel" : "special"
          }
        },
        "userType" : {
          "type" : "object",
          "title" : "User type",
          "description" : "The type of user, such as `producer` or `underwriter`. Primarily used for automated assignments. (Since 1.2.0)",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "securityLevel" : "internal",
            "sortable" : true,
            "typelist" : "UserType"
          }
        },
        "username" : {
          "type" : "string",
          "title" : "Username",
          "description" : "The username for the user",
          "x-gw-extensions" : {
            "requiredForCreate" : true
          }
        },
        "uwAuthorityProfiles" : {
          "type" : "array",
          "title" : "Underwriting authority profiles",
          "description" : "The underwriting authority profiles assigned to this user (Since 1.3.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UserAuthorityProfileReference"
          },
          "x-gw-sinceVersion" : "1.3.0",
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "securityLevel" : "special"
          }
        },
        "vacationStatus" : {
          "type" : "object",
          "title" : "Vacation status",
          "description" : "Indicates whether the user is considered to be on vacation",
          "$ref" : "#/definitions/admin_TypeKeyReference",
          "x-gw-extensions" : {
            "securityLevel" : "internal",
            "typelist" : "VacationStatusType"
          }
        },
        "workPhone" : {
          "type" : "object",
          "title" : "Work phone",
          "description" : "The work phone number for the user",
          "$ref" : "#/definitions/admin_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "securityLevel" : "internal"
          }
        }
      }
    },
    "UserAuthorityProfileReference" : {
      "type" : "object",
      "title" : "User authority profile reference",
      "description" : "A reference to a `UWAuthorityProfile` that has been assigned to a user (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "required" : [ "id" ],
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the element",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element",
          "readOnly" : true
        }
      }
    },
    "UserProducerCode" : {
      "type" : "object",
      "title" : "User producer code",
      "description" : "The relationship between a user and its producer codes and associated roles (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this user producer code",
          "readOnly" : true
        },
        "producerCode" : {
          "type" : "object",
          "title" : "Producer code",
          "description" : "A reference to the `ProducerCode`",
          "$ref" : "#/definitions/admin_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "ProducerCode"
          }
        },
        "roles" : {
          "type" : "array",
          "title" : "Roles",
          "description" : "The set of `Roles` that define permissions granted by this producer code",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/admin_SimpleReference"
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "UserRoleReference" : {
      "type" : "object",
      "title" : "User role reference",
      "description" : "A reference to a `Role` that has been granted to a user (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "required" : [ "id" ],
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the element",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element",
          "readOnly" : true
        }
      }
    },
    "BatchRequest" : {
      "type" : "object",
      "title" : "Batch request",
      "description" : "The body of a batch request",
      "required" : [ "requests" ],
      "properties" : {
        "requests" : {
          "type" : "array",
          "title" : "Requests",
          "description" : "The array of subrequests",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BatchSubRequest"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "BatchResponse" : {
      "type" : "object",
      "title" : "Batch response",
      "description" : "The body of a response to a batch request. The `responses` field will have one element for every entry in the `requests` field on the request, and responses will appear in the same order.",
      "properties" : {
        "responses" : {
          "type" : "array",
          "title" : "Responses",
          "description" : "The list of subresponses, appearing in the same order as the elements in the `requests` field of the request",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BatchSubResponse"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "BatchSubRequest" : {
      "type" : "object",
      "title" : "Batch subrequest",
      "description" : "An individual subrequest within a batch request",
      "required" : [ "method", "path" ],
      "properties" : {
        "body" : {
          "type" : "object",
          "title" : "Body",
          "description" : "The body of the subrequest"
        },
        "headers" : {
          "type" : "array",
          "title" : "Headers",
          "description" : "Headers that will be included as part of the subrequest. Any headers defined using this field will override header values inherited from the main request. Any headers present on the main request that are not defined in this list will be inherited when the subrequest is made, with the exception of the `GW-Checksum` header.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Header"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method for the subrequest",
          "enum" : [ "delete", "head", "get", "options", "patch", "post", "put" ]
        },
        "onFail" : {
          "type" : "string",
          "title" : "On fail",
          "description" : "Controls whether or not subsequent subrequests are processed if this subrequest fails. The default behavior is to continue processing subrequests. The `abort` option specifies that all subsequent subrequests will be skipped.",
          "enum" : [ "abort", "continue" ]
        },
        "path" : {
          "type" : "string",
          "title" : "Path",
          "description" : "The path for the subrequest. This path is relative to the root of the API hosting the batch endpoint. For example, if the batch endpoint is `<servlet>/rest/common/v1/batch`, then a path of `/activities` will mean a request against `<servlet>/rest/common/v1/activities`. The path must start with `/` and cannot contain whitespace.",
          "minLength" : 1,
          "pattern" : "^/[\\S]*$"
        },
        "query" : {
          "type" : "string",
          "title" : "Query",
          "description" : "The query string to use for the subrequest"
        }
      }
    },
    "BatchSubResponse" : {
      "type" : "object",
      "title" : "Batch subresponse",
      "description" : "A subresponse to a batch subrequest",
      "properties" : {
        "body" : {
          "type" : "object",
          "title" : "Body",
          "description" : "The body of the subresponse"
        },
        "code" : {
          "type" : "integer",
          "title" : "Code",
          "description" : "The HTTP status code for the subresponse"
        },
        "headers" : {
          "type" : "array",
          "title" : "Headers",
          "description" : "The headers returned for the subresponse",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Header"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "skipped" : {
          "type" : "boolean",
          "title" : "Skipped",
          "description" : "A `true` value indicates that the corresponding subrequest was not processed due to a prior failed request that specified the `onFail` field with the `abort` option"
        }
      }
    },
    "Header" : {
      "type" : "object",
      "title" : "Header",
      "description" : "An HTTP request or response header",
      "required" : [ "name", "value" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The header name"
        },
        "value" : {
          "type" : "string",
          "title" : "Value",
          "description" : "The header value"
        }
      }
    },
    "framework_GenericRelation" : {
      "type" : "object",
      "title" : "Generic relation",
      "description" : "A reference to a related element",
      "xml" : {
        "name" : "GenericRelation"
      },
      "required" : [ "id", "type" ],
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the referenced element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "framework_LinkObject" : {
      "type" : "object",
      "title" : "Linked object",
      "description" : "A standard HTTP link",
      "xml" : {
        "name" : "LinkObject"
      },
      "properties" : {
        "href" : {
          "type" : "string",
          "title" : "HREF",
          "description" : "The URL of the link"
        },
        "methods" : {
          "type" : "array",
          "title" : "Methods",
          "description" : "An array of HTTP method names that can be used with the link URL",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "framework_Links" : {
      "type" : "object",
      "title" : "Links",
      "description" : "A set of named links",
      "xml" : {
        "name" : "Links"
      },
      "additionalProperties" : {
        "type" : "object",
        "title" : "Links",
        "description" : "A set of named links. Each key represents the name of the link, such as a child of the current element, an action that can be taken on it, or a navigation option.",
        "$ref" : "#/definitions/framework_LinkObject"
      }
    },
    "framework_MetaObject" : {
      "type" : "object",
      "title" : "Meta object",
      "description" : "An element",
      "xml" : {
        "name" : "MetaObject"
      },
      "properties" : {
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "The checksum of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "The set of links related to the element",
          "$ref" : "#/definitions/framework_Links"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "related" : {
          "type" : "object",
          "title" : "Related collections",
          "description" : "The set of related collections included with the element",
          "$ref" : "#/definitions/framework_RelatedCollections"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of element"
        }
      }
    },
    "framework_MonetaryAmount" : {
      "type" : "object",
      "title" : "Monetary amount",
      "description" : "A monetary amount that combines a decimal amount with a currency",
      "xml" : {
        "name" : "MonetaryAmount"
      },
      "required" : [ "amount", "currency" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "title" : "Amount",
          "description" : "The decimal amount",
          "format" : "gw-bigdecimal"
        },
        "currency" : {
          "type" : "string",
          "title" : "Currency",
          "description" : "The currency for the amount",
          "x-gw-type" : "typekey.Currency"
        }
      }
    },
    "framework_PhoneNumber" : {
      "type" : "object",
      "title" : "Phone number",
      "description" : "A phone number, with different components of the number broken out as separate fields",
      "xml" : {
        "name" : "PhoneNumber"
      },
      "required" : [ "countryCode", "number" ],
      "properties" : {
        "countryCode" : {
          "type" : "object",
          "title" : "Country code",
          "description" : "The country code for the phone number",
          "$ref" : "#/definitions/framework_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "PhoneCountryCode"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The phone number formatted in a standardized way",
          "readOnly" : true
        },
        "extension" : {
          "type" : "string",
          "title" : "Extension",
          "description" : "The extension for the phone number",
          "x-gw-nullable" : true
        },
        "number" : {
          "type" : "string",
          "title" : "Number",
          "description" : "The actual phone number, including area code, but excluding the country code and extension"
        }
      }
    },
    "framework_RelatedCollection" : {
      "type" : "object",
      "title" : "Related collection",
      "description" : "A set of element references that are related to the element in some way. Used to link elements with their relations when a request is made using the `include` query parameter.",
      "xml" : {
        "name" : "RelatedCollection"
      },
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements included in the `data` array"
        },
        "data" : {
          "type" : "array",
          "title" : "Data",
          "description" : "The list of references to the related elements",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/framework_SimpleReference"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements in the related set of elements. Only present if the `includeTotal` query parameter is used to request that the total be calculated for an included collection."
        }
      }
    },
    "framework_RelatedCollections" : {
      "type" : "object",
      "title" : "Related collections",
      "description" : "A set of `RelatedCollection` elements that contain references to elements included using the `include` query parameter on a request",
      "xml" : {
        "name" : "RelatedCollections"
      },
      "additionalProperties" : {
        "type" : "object",
        "title" : "Related collections",
        "description" : "The related collections. Each key in this object will match the name of the inclusion requested via the `include` query parameter.",
        "$ref" : "#/definitions/framework_RelatedCollection"
      }
    },
    "framework_SimpleReference" : {
      "type" : "object",
      "title" : "Simple reference",
      "description" : "A reference to an element",
      "xml" : {
        "name" : "SimpleReference"
      },
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "framework_SpatialPoint" : {
      "type" : "object",
      "title" : "Spatial point",
      "description" : "An object that combines a latitude with a longitude (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "SpatialPoint"
      },
      "required" : [ "latitude", "longitude" ],
      "properties" : {
        "latitude" : {
          "type" : "string",
          "title" : "Latitude",
          "description" : "The latitude of the spatial point",
          "format" : "gw-bigdecimal"
        },
        "longitude" : {
          "type" : "string",
          "title" : "Longitude",
          "description" : "The longitude of the spatial point",
          "format" : "gw-bigdecimal"
        }
      }
    },
    "framework_TypeKeyReference" : {
      "type" : "object",
      "title" : "TypeKey reference",
      "description" : "A reference to a `TypeKey` element that defines an enumerated value from a `TypeList`",
      "xml" : {
        "name" : "TypeKeyReference"
      },
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The `name` of the `TypeKey`"
        }
      }
    },
    "AUPersonalMotorLine" : {
      "type" : "object",
      "title" : "AU Personal Motor Line",
      "description" : "AU Personal Motor Line",
      "x-gw-extensions" : {
        "wizardStepId" : "PMAAUPersonalMotorLineScreen"
      },
      "properties" : {
        "coverableJurisdiction" : {
          "type" : "object",
          "title" : "Coverable jurisdiction",
          "description" : "The jurisdiction of this coverable",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "currentMotorInsurance" : {
          "type" : "object",
          "title" : "Do you currently have motor insurance?",
          "description" : "Do you currently have motor insurance?",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PMACurrentMotorInsurance"
          }
        },
        "lineCoverType" : {
          "type" : "object",
          "title" : "What type of insurance do you want (can be changed when adding vehicle)",
          "description" : "What type of insurance do you want (can be changed when adding vehicle)",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PMAVehicleCoverType"
          }
        },
        "otherInsurancePolicies" : {
          "type" : "object",
          "title" : "Do you have any other insurance policies with us?",
          "description" : "Do you have any other insurance policies with us?",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PMAOtherInsurancePolicies"
          }
        },
        "pattern" : {
          "type" : "object",
          "title" : "Pattern",
          "description" : "A reference to the `PolicyLinePattern` that was used to create this line",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "productEdition" : {
          "type" : "object",
          "title" : "Product edition",
          "description" : "The edition of the product applicable to this element",
          "$ref" : "#/definitions/ProductEditionReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        }
      }
    },
    "policyperiod_Activity" : {
      "type" : "object",
      "title" : "Activity",
      "description" : "An `Activity` is an assignable item that represents a task to be done, a decision to be made, or information to be aware of",
      "xml" : {
        "name" : "Activity"
      },
      "properties" : {
        "activityPattern" : {
          "type" : "string",
          "title" : "Activity pattern",
          "description" : "The code of the `ActivityPattern` used to create this activity and set its initial values",
          "x-gw-extensions" : {
            "createOnly" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "activityType" : {
          "type" : "object",
          "title" : "Activity type",
          "description" : "The type of this activity, such as `general` or `approval`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ActivityType"
          }
        },
        "approvalIssue" : {
          "type" : "string",
          "title" : "Approval issue",
          "description" : "The reason approval is needed. Only applicable to activities with an `activityType` of `approval`.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "approvalRationale" : {
          "type" : "string",
          "title" : "Approval rationale",
          "description" : "Rationale for approving or rejecting this activity. Only applicable to activities with an `activityType` of `approval`.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "approved" : {
          "type" : "boolean",
          "title" : "Approved",
          "description" : "This field is `true` if this activity has been approved, `false` if this activity has been rejected, and omitted otherwise. Only applicable to activities with an `activityType` of `approval`.",
          "readOnly" : true
        },
        "assignedByUser" : {
          "type" : "object",
          "title" : "Assigned by user",
          "description" : "A reference to the `User` who last assigned or re-assigned this activity",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "assignedGroup" : {
          "type" : "object",
          "title" : "Assigned group",
          "description" : "A reference to the `Group` that this activity is currently assigned to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true
        },
        "assignedQueue" : {
          "type" : "object",
          "title" : "Assigned queue",
          "description" : "A reference to the `Queue` that this activity is currently assigned to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true
        },
        "assignedUser" : {
          "type" : "object",
          "title" : "Assigned user",
          "description" : "A reference to the `User` that this activity is currently assigned to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User",
            "sortable" : true
          }
        },
        "assignmentStatus" : {
          "type" : "object",
          "title" : "Assignment status",
          "description" : "The current assignment status of this activity, such as `assigned` or `unassigned`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "AssignmentStatus"
          }
        },
        "associatedRole" : {
          "type" : "object",
          "title" : "Associated role",
          "description" : "The role on the parent element that this activity is assigned to. For example, if this activity was created for a job, the activity might be assigned to the `Creator` or `Underwriter` role for that job.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "UserRole"
          }
        },
        "closeDate" : {
          "type" : "string",
          "title" : "Close date",
          "description" : "The date and time when this activity was completed, skipped, approved, or rejected",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "closeUser" : {
          "type" : "object",
          "title" : "Close user",
          "description" : "A reference to the `User` that completed, skipped, approved, or rejected this activity",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `Activity` was created (Since 1.1.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this activity",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "dueDate" : {
          "type" : "string",
          "title" : "Due date",
          "description" : "Date and time by which a person should complete the activity. If not completed by this time, the activity is considered overdue. Not applicable to activities that represent events rather than tasks.",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "endDate" : {
          "type" : "string",
          "title" : "End date",
          "description" : "Date and time at which the activity is expected to end. Only applicable to activities that represent events.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "escalated" : {
          "type" : "boolean",
          "title" : "Escalated",
          "description" : "A `true` value for this field indicates that the activity has been escalated",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "escalationDate" : {
          "type" : "string",
          "title" : "Escalation date",
          "description" : "Date and time at which this activity will be escalated if it has not yet been completed",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "externallyOwned" : {
          "type" : "boolean",
          "title" : "Externally owned",
          "description" : "A `true` value for this field indicates that the activity is owned by a user or group outside of the insurer",
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Activity`",
          "readOnly" : true
        },
        "initialAssignment" : {
          "type" : "object",
          "title" : "Initial assignment",
          "description" : "The `Assignee` that this activity should be assigned to when it is first created",
          "$ref" : "#/definitions/policyperiod_Assignee",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "mandatory" : {
          "type" : "boolean",
          "title" : "Mandatory",
          "description" : "A `true` value for this field indicates that the activity is mandatory and cannot be skipped"
        },
        "priority" : {
          "type" : "object",
          "title" : "Priority",
          "description" : "The priority of this activity",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "Priority"
          }
        },
        "recurring" : {
          "type" : "boolean",
          "title" : "Recurring",
          "description" : "A `true` value indicates that this activity is recurring"
        },
        "startDate" : {
          "type" : "string",
          "title" : "Start date",
          "description" : "Date and time at which the activity is scheduled to begin. Only applicable to activities that represent events.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The status of this activity, such as `open` or `complete`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ActivityStatus"
          }
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "A brief title for the activity",
          "minLength" : 1,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "pattern" : "\\S",
          "maxLength" : 255
        }
      }
    },
    "policyperiod_ActivityPattern" : {
      "type" : "object",
      "title" : "Activity pattern",
      "description" : "An `ActivityPattern` is a template for an activity, and is used to create a new activity and set defaults for some of its fields",
      "xml" : {
        "name" : "ActivityPattern"
      },
      "properties" : {
        "activityClass" : {
          "type" : "object",
          "title" : "Activity class",
          "description" : "The class of activity that this activity pattern creates, such as `task` or `event`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ActivityClass"
          }
        },
        "activityType" : {
          "type" : "object",
          "title" : "Activity type",
          "description" : "The type of activity that this activity pattern creates, such as `general` or `approval`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ActivityType"
          }
        },
        "category" : {
          "type" : "object",
          "title" : "Category",
          "description" : "The category of the activity pattern. Used to help organize `ActivityPatterns` when presenting them to a user.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ActivityCategory",
            "filterBy" : [ "activityType" ]
          }
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code that uniquely identifies this `ActivityPattern`",
          "x-gw-extensions" : {
            "createOnly" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The default `description` for activities created from this activity pattern",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "dueDate" : {
          "type" : "string",
          "title" : "Due date",
          "description" : "The default `dueDate` for activities created from this activity pattern, calculated based on the current date and time",
          "format" : "date-time"
        },
        "escalationDate" : {
          "type" : "string",
          "title" : "Escalation date",
          "description" : "The default `escalationDate` for activities created from this activity pattern, calculated based on the current date and time",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `ActivityPattern`"
        },
        "mandatory" : {
          "type" : "boolean",
          "title" : "Mandatory",
          "description" : "The default `mandatory` value for activities created from this activity pattern"
        },
        "patternLevel" : {
          "type" : "object",
          "title" : "Pattern level",
          "description" : "The type of parent element, such as `Job` or `Account`, that this activity pattern applies to",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ActivityPatternLevel"
          }
        },
        "priority" : {
          "type" : "object",
          "title" : "Priority",
          "description" : "The default `priority` for activities created from this activity pattern",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "Priority"
          }
        },
        "recurring" : {
          "type" : "boolean",
          "title" : "Recurring",
          "description" : "The default `recurring` value for activities created from this activity pattern"
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "The default `subject` for activities created from this activity pattern",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        }
      }
    },
    "AdditionalNamedInsured" : {
      "type" : "object",
      "title" : "Additional named insured",
      "description" : "Additional named insured for the policy (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "accountContact" : {
          "type" : "object",
          "title" : "Account contact",
          "description" : "A reference to the `AccountContact` that represents the person or company to add as an additional named insured",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "resourceType" : "AccountContact"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "relationship" : {
          "type" : "string",
          "title" : "Relationship",
          "description" : "The relationship to the primary named insured",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        }
      }
    },
    "policyperiod_Address" : {
      "type" : "object",
      "title" : "Address",
      "description" : "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
      "xml" : {
        "name" : "Address"
      },
      "x-gw-extensions" : {
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "CEDEX" : {
          "type" : "string",
          "title" : "CEDEX",
          "description" : "The CEDEX bureau of the address. Only applicable in certain countries.",
          "maxLength" : 2,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine1Kanji" : {
          "type" : "string",
          "title" : "Address line 1 kanji",
          "description" : "The kanji version of the first line of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine2Kanji" : {
          "type" : "string",
          "title" : "Address line 2 kanji",
          "description" : "The kanji version of the second line of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the address (Since 1.2.0)",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AddressType"
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "cityKanji" : {
          "type" : "string",
          "title" : "City kanji",
          "description" : "The kanji version of the city of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of the address (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
          "readOnly" : true
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Address`",
          "readOnly" : true
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "spatialPoint" : {
          "type" : "object",
          "title" : "Spatial point",
          "description" : "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
          "$ref" : "#/definitions/policyperiod_SpatialPoint",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "validUntil" : {
          "type" : "string",
          "title" : "Valid until",
          "description" : "The date and time that the address is valid until (Since 1.2.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        }
      }
    },
    "policyperiod_Assignee" : {
      "type" : "object",
      "title" : "Assignee",
      "description" : "An `Assignee` represents the target of an assignment action, such as a user/group combination, assignment queue, or automatic rule-based assignment",
      "xml" : {
        "name" : "Assignee"
      },
      "properties" : {
        "assigneeId" : {
          "type" : "string",
          "title" : "Assignee ID",
          "description" : "Unique ID to reference this `Assignee` for includes (Since 1.4.0)",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true
        },
        "autoAssign" : {
          "type" : "boolean",
          "title" : "Auto assign",
          "description" : "Set to `true` to indicate the assignment should be done automatically by the system. Cannot be combined with any other fields."
        },
        "groupId" : {
          "type" : "string",
          "title" : "Group ID",
          "description" : "The ID of the `Group` that the resource should be assigned to. If specified without the `userId` field, the `User` within the `Group` is selected by assignment rules. If specified along with the `userId` field, that specific `User` is assigned the element."
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "A human-readable name for the type of assignment that this `Assignee` represents",
          "readOnly" : true
        },
        "queueId" : {
          "type" : "string",
          "title" : "Queue ID",
          "description" : "The ID of the `Queue` that the resource should be assigned to. Cannot be combined with any other fields."
        },
        "role" : {
          "type" : "object",
          "title" : "Role",
          "description" : "Requests assignment of the element to the user that has the specified role on the element or its parent. Cannot be combined with any other fields.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UserRole"
          }
        },
        "userId" : {
          "type" : "string",
          "title" : "User ID",
          "description" : "The ID of the `User` that the resource should be assigned to. The `groupId` field must also be specified if the `userId` field is specified, and the `User` must be a member of that `Group` and have permission to be assigned the element."
        }
      }
    },
    "BOPBldgAddlInterest" : {
      "type" : "object",
      "title" : "BOPBldgAddlInterest",
      "description" : "BldgAddlInterest",
      "properties" : {
        "additionalInterestType" : {
          "type" : "object",
          "title" : "Interest Type",
          "description" : "Interest type",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AdditionalInterestType"
          }
        },
        "certRequired" : {
          "type" : "boolean",
          "title" : "Certificate Required",
          "description" : "Is a certificate required?",
          "x-gw-nullable" : true
        },
        "contractNumber" : {
          "type" : "string",
          "title" : "Contract Number",
          "description" : "Loan numbers associated with a mortgagee or lender",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "policyAddlInterest" : {
          "type" : "object",
          "title" : "PolicyAddlInterest",
          "description" : "PolicyAddlInterest",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        }
      }
    },
    "BOPBuilding" : {
      "type" : "object",
      "title" : "BOPBuilding",
      "description" : "BOP Building",
      "properties" : {
        "alarmCertificate" : {
          "type" : "string",
          "title" : "AlarmCertificate",
          "description" : "AlarmCertificate",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "alarmCertification" : {
          "type" : "object",
          "title" : "AlarmCertification",
          "description" : "AlarmCertification",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AlarmCertification"
          }
        },
        "alarmExpiration" : {
          "type" : "string",
          "title" : "AlarmExpiration",
          "description" : "AlarmExpiration",
          "format" : "date"
        },
        "alarmGrade" : {
          "type" : "object",
          "title" : "AlarmGrade",
          "description" : "AlarmGrade",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AlarmGrade"
          }
        },
        "areaLeased" : {
          "type" : "object",
          "title" : "AreaLeased",
          "description" : "AreaLeased",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AreaLeased"
          }
        },
        "basisAmount" : {
          "type" : "integer",
          "title" : "Basis Amount",
          "description" : "Basis Amount",
          "x-gw-nullable" : true
        },
        "buildingAlarmType" : {
          "type" : "object",
          "title" : "BuildingAlarmType",
          "description" : "BuildingAlarmType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BuildingAlarmType"
          }
        },
        "buildingImprovements" : {
          "type" : "array",
          "title" : "BuildingImprovements",
          "description" : "BuildingImprovements",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BuildingImprovement"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "buildingNum" : {
          "type" : "integer",
          "title" : "BuildingNum",
          "description" : "BuildingNum"
        },
        "buildingSides" : {
          "type" : "array",
          "title" : "BuildingSides",
          "description" : "BuildingSides",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BuildingSide"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "classCode" : {
          "type" : "object",
          "title" : "ClassCode",
          "description" : "ClassCode",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "BOPClassCode"
          }
        },
        "constructionType" : {
          "type" : "object",
          "title" : "Construction Type",
          "description" : "Type of building construction",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BOPConstructionType"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "interestType" : {
          "type" : "object",
          "title" : "InterestType",
          "description" : "InterestType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "InterestType"
          }
        },
        "numBasements" : {
          "type" : "integer",
          "title" : "NumBasements",
          "description" : "NumBasements",
          "minimum" : 0
        },
        "numDiving" : {
          "type" : "object",
          "title" : "Number of Diving Boards",
          "description" : "Number of diving boards",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DivingBoards"
          }
        },
        "numPools" : {
          "type" : "object",
          "title" : "Number of Pools",
          "description" : "Number of swimming pools",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "SwimmingPools"
          }
        },
        "numStories" : {
          "type" : "integer",
          "title" : "NumStories",
          "description" : "NumStories",
          "minimum" : 0
        },
        "percentOccupied" : {
          "type" : "object",
          "title" : "PercentOccupied",
          "description" : "PercentOccupied",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PercentOccupied"
          }
        },
        "policyLocation" : {
          "type" : "object",
          "title" : "PolicyLocation",
          "description" : "PolicyLocation",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "PolicyLocation"
          }
        },
        "sprinklerCoverage" : {
          "type" : "object",
          "title" : "SprinklerCoverage",
          "description" : "SprinklerCoverage",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Sprinklered"
          }
        },
        "totalArea" : {
          "type" : "integer",
          "title" : "TotalArea",
          "description" : "TotalArea",
          "minimum" : 0
        },
        "yearBuilt" : {
          "type" : "integer",
          "title" : "YearBuilt",
          "description" : "YearBuilt"
        }
      }
    },
    "BOPLine" : {
      "type" : "object",
      "title" : "Businessowners Line",
      "description" : "BusinessOwners",
      "properties" : {
        "blanketType" : {
          "type" : "object",
          "title" : "Blanket Type",
          "description" : "Blanket Type",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BlanketType"
          }
        },
        "numAddInsured" : {
          "type" : "integer",
          "title" : "Number of Additional Insureds",
          "description" : "The number of additional insureds. For Quick Quotes users enter just the number additional insureds instead of all the details",
          "x-gw-nullable" : true
        },
        "pattern" : {
          "type" : "object",
          "title" : "Pattern",
          "description" : "A reference to the `PolicyLinePattern` that was used to create this line",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "patternCode" : {
          "type" : "string",
          "title" : "PatternCode",
          "description" : "The pattern defining what kind of PolicyLine this is",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        },
        "smallBusinessType" : {
          "type" : "object",
          "title" : "Small Business Type",
          "description" : "Small Business Type",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "SmallBusinessType"
          }
        }
      }
    },
    "BOPLocation" : {
      "type" : "object",
      "title" : "BOPLocation",
      "description" : "BOP Location",
      "x-gw-extensions" : {
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "addressLine1Kanji" : {
          "type" : "string",
          "title" : "Address line 1 kanji",
          "description" : "The kanji version of the first line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "cityKanji" : {
          "type" : "string",
          "title" : "City kanji",
          "description" : "The kanji version of the city of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "CEDEX" : {
          "type" : "string",
          "title" : "CEDEX",
          "description" : "The CEDEX bureau of the location's address. Only applicable in certain countries.",
          "maxLength" : 2,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the location's address",
          "x-gw-nullable" : true
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the location represented by this element, including all standard fields for the address's country",
          "readOnly" : true
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "description" : {
          "type" : "string",
          "x-gw-nullable" : true
        },
        "employeeCount" : {
          "type" : "integer",
          "x-gw-nullable" : true
        },
        "industryCode" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_ReferenceTableEntry",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "riskClass" : {
          "type" : "object",
          "title" : "RiskClass",
          "description" : "RiskClass",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "RiskClass"
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "accountLocation" : {
          "type" : "object",
          "title" : "Account location",
          "description" : "The `AccountLocation` that this element is linked to. Changes to most fields on this element will also affect the linked `AccountLocation`.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "resourceType" : "AccountLocation"
          }
        },
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the location's address",
          "x-gw-nullable" : true
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "cityLimits" : {
          "type" : "boolean",
          "title" : "City Limits",
          "description" : "Whether the location is within city limits",
          "x-gw-nullable" : true
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the location's address",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "typelist" : "AddressType"
          }
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "principalOpsDesc" : {
          "type" : "string",
          "title" : "Principal Operations Description",
          "description" : "Principle operations and occupancy.",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 240
        },
        "addressLine2Kanji" : {
          "type" : "string",
          "title" : "Address line 2 kanji",
          "description" : "The kanji version of the second line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "fireProtectionClass" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "FireProtectClass"
          }
        },
        "taxLocation" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "TaxLocation"
          }
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "locationNum" : {
          "type" : "integer",
          "title" : "Location number",
          "description" : "The number automatically assigned to this location",
          "readOnly" : true
        }
      }
    },
    "BOPScheduledEquipment" : {
      "type" : "object",
      "title" : "BOPScheduledEquipment",
      "description" : "ScheduledEquipment",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "equipmentNumber" : {
          "type" : "integer",
          "title" : "Equipment Number",
          "description" : "The index of this equipment",
          "x-gw-nullable" : true
        },
        "equipmentValue" : {
          "type" : "integer",
          "title" : "Equipment Value",
          "description" : "Equipment Value",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "serialNumber" : {
          "type" : "string",
          "title" : "Serial Number",
          "description" : "Equipment Identifier.",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 20
        }
      }
    },
    "Building" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "BuildingImprovement" : {
      "type" : "object",
      "properties" : {
        "buildingImprType" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "BuildingImprType"
          }
        },
        "yearAdded" : {
          "type" : "integer",
          "x-gw-nullable" : true
        }
      }
    },
    "BuildingSide" : {
      "type" : "object",
      "properties" : {
        "buildingSideType" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "BuildingSideType"
          }
        },
        "description" : {
          "type" : "string",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        }
      }
    },
    "CPBlanket" : {
      "type" : "object",
      "properties" : {
        "blanketGroupType" : {
          "type" : "object",
          "title" : "BlanketGroupType",
          "description" : "BlanketGroupType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "BlanketGroupType"
          }
        },
        "blanketType" : {
          "type" : "object",
          "title" : "BlanketType",
          "description" : "BlanketType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "BlanketType"
          }
        },
        "cpBlanketDescription" : {
          "type" : "string",
          "title" : "CPBlanketDescription",
          "description" : "CPBlanketDescription",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "cpBlanketNum" : {
          "type" : "integer",
          "title" : "CPBlanketNum",
          "description" : "CPBlanketNum"
        },
        "cpBuildingCovName" : {
          "type" : "string",
          "title" : "CPBuildingCovName",
          "description" : "CPBuildingCovName",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "CPBldgAddlInterest" : {
      "type" : "object",
      "properties" : {
        "additionalInterestType" : {
          "type" : "object",
          "title" : "AdditionalInterestType",
          "description" : "AdditionalInterestType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AdditionalInterestType"
          }
        },
        "certRequired" : {
          "type" : "boolean",
          "title" : "CertRequired",
          "description" : "CertRequired",
          "x-gw-nullable" : true
        },
        "contractNumber" : {
          "type" : "string",
          "title" : "ContractNumber",
          "description" : "ContractNumber",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        },
        "policyAddlInterest" : {
          "type" : "object",
          "title" : "PolicyAddlInterest",
          "description" : "PolicyAddlInterest",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        }
      }
    },
    "CPBuilding" : {
      "type" : "object",
      "properties" : {
        "alarmCertificate" : {
          "type" : "string",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "alarmClass" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AlarmClass"
          }
        },
        "alarmExpiration" : {
          "type" : "string",
          "format" : "date",
          "x-gw-nullable" : true
        },
        "alarmGrade" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AlarmGrade"
          }
        },
        "basementArea" : {
          "type" : "integer",
          "x-gw-nullable" : true,
          "minimum" : 0
        },
        "buildingAlarmType" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BuildingAlarmType"
          }
        },
        "buildingImprovements" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BuildingImprovement"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "buildingNum" : {
          "type" : "integer",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "buildingSides" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BuildingSide"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "burglarySafeguard" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BurglarySafeguard"
          }
        },
        "classCode" : {
          "type" : "object",
          "$ref" : "#/definitions/CPClassCodeReference"
        },
        "constructionType" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "ConstructionType"
          }
        },
        "coverageForm" : {
          "type" : "object",
          "title" : "CoverageForm",
          "description" : "CoverageForm",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "CoverageForm"
          }
        },
        "description" : {
          "type" : "string",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "heatingBoilerElsewhere" : {
          "type" : "boolean",
          "x-gw-nullable" : true
        },
        "heatingBoilerOnPremises" : {
          "type" : "boolean",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string"
        },
        "interestType" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "InterestType"
          }
        },
        "numBasements" : {
          "type" : "integer",
          "x-gw-nullable" : true,
          "minimum" : 0
        },
        "numStories" : {
          "type" : "integer",
          "x-gw-nullable" : true,
          "minimum" : 0
        },
        "percentVacant" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PercentByTens"
          }
        },
        "rateType" : {
          "type" : "object",
          "title" : "RateType",
          "description" : "RateType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "RateType"
          }
        },
        "rentedOthers" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PercentByTens"
          }
        },
        "roofType" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "RoofType"
          }
        },
        "sprinklerCoverage" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Sprinklered"
          }
        },
        "totalArea" : {
          "type" : "integer",
          "x-gw-nullable" : true,
          "minimum" : 0
        },
        "windRating" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "WindRating"
          }
        },
        "year" : {
          "type" : "integer",
          "x-gw-nullable" : true
        }
      }
    },
    "CPClassCodeReference" : {
      "type" : "object",
      "properties" : {
        "classification" : {
          "type" : "string",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "code" : {
          "type" : "string",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "CPLine" : {
      "type" : "object",
      "properties" : {
        "numAddInsured" : {
          "type" : "integer",
          "title" : "NumAddInsured",
          "description" : "NumAddInsured",
          "x-gw-nullable" : true
        },
        "pattern" : {
          "type" : "object",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "patternCode" : {
          "type" : "string",
          "title" : "PatternCode",
          "description" : "PatternCode",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        }
      }
    },
    "CPLocation" : {
      "type" : "object",
      "x-gw-extensions" : {
        "additionalCreateOnly" : [ "country", "state" ],
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "addressLine1Kanji" : {
          "type" : "string",
          "title" : "Address line 1 kanji",
          "description" : "The kanji version of the first line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "cityKanji" : {
          "type" : "string",
          "title" : "City kanji",
          "description" : "The kanji version of the city of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "CEDEX" : {
          "type" : "string",
          "title" : "CEDEX",
          "description" : "The CEDEX bureau of the location's address. Only applicable in certain countries.",
          "maxLength" : 2,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the location's address",
          "x-gw-nullable" : true
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the location represented by this element, including all standard fields for the address's country",
          "readOnly" : true
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "description" : {
          "type" : "string",
          "x-gw-nullable" : true
        },
        "employeeCount" : {
          "type" : "integer",
          "x-gw-nullable" : true
        },
        "industryCode" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_ReferenceTableEntry",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "accountLocation" : {
          "type" : "object",
          "title" : "Account location",
          "description" : "The `AccountLocation` that this element is linked to. Changes to most fields on this element will also affect the linked `AccountLocation`.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "resourceType" : "AccountLocation"
          }
        },
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the location's address",
          "x-gw-nullable" : true
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the location's address",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "typelist" : "AddressType"
          }
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "principalOpsDesc" : {
          "type" : "string",
          "title" : "PrincipalOpsDesc",
          "description" : "PrincipalOpsDesc",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 240
        },
        "addressLine2Kanji" : {
          "type" : "string",
          "title" : "Address line 2 kanji",
          "description" : "The kanji version of the second line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "fireProtectionClass" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "FireProtectClass"
          }
        },
        "taxLocation" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "TaxLocation"
          }
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "locationNum" : {
          "type" : "integer",
          "title" : "Location number",
          "description" : "The number automatically assigned to this location",
          "readOnly" : true
        }
      }
    },
    "ChangeJobEffectiveDateAttributes" : {
      "type" : "object",
      "title" : "Change job effective date attributes",
      "description" : "Details of the request to change a job's effective date (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "required" : [ "jobEffectiveDate" ],
      "properties" : {
        "jobEffectiveDate" : {
          "type" : "string",
          "title" : "Job effective date",
          "description" : "The date on which the job takes effect",
          "format" : "date"
        }
      }
    },
    "ChangeJobVersionAttributes" : {
      "type" : "object",
      "title" : "Change job version attributes",
      "description" : "The new selected version for the job",
      "required" : [ "selectedVersion" ],
      "properties" : {
        "selectedVersion" : {
          "type" : "object",
          "title" : "Selected version",
          "description" : "A reference object that contains the `id` of the `JobVersion` that should become the new selected version for the job",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        }
      }
    },
    "ClassCode" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "ClassCodeBasis" : {
      "type" : "object",
      "title" : "Class code basis",
      "description" : "The measurement basis for a class code, such as hundreds of square feet or thousands of payroll",
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The standardized code assigned to this class code basis",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of this class code basis",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this class code basis",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        }
      }
    },
    "CompareJobsAttributes" : {
      "type" : "object",
      "title" : "Compare job attributes",
      "description" : "Details of a request to compare two jobs on the same policy (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "required" : [ "job1", "job2" ],
      "properties" : {
        "job1" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the first `Job` on the policy to compare with another",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        },
        "job2" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the second `Job` on the policy to compare with another",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        }
      }
    },
    "policyperiod_Contact" : {
      "type" : "object",
      "title" : "Contact",
      "description" : "A `Contact` represents a person or company",
      "xml" : {
        "name" : "Contact"
      },
      "properties" : {
        "addressBookUID" : {
          "type" : "string",
          "title" : "Address book UID",
          "description" : "The unique ID of this `Contact` within the contact management system. Only applicable if the `Contact` has been linked to a contact management system.",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        },
        "cellPhone" : {
          "type" : "object",
          "title" : "Cell phone",
          "description" : "The person's mobile phone number. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/policyperiod_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The name of the company represented by this `Contact`. Only applicable for a `Contact` that represents a company.",
          "x-gw-extensions" : {
            "entitySubtype" : "Company"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "dateOfBirth" : {
          "type" : "string",
          "title" : "Date of birth",
          "description" : "The person's date of birth. Only applicable for a `Contact` that represents a person.",
          "format" : "date",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now",
            "entitySubtype" : "Person"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "A formatted representation of the full name for this `Contact', including all applicable fields such as `firstName` or `lastName`",
          "readOnly" : true,
          "x-gw-nullable" : true
        },
        "emailAddress1" : {
          "type" : "string",
          "title" : "E-mail address 1",
          "description" : "The contact's primary e-mail address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "emailAddress2" : {
          "type" : "string",
          "title" : "E-mail address 2",
          "description" : "The contact's secondary e-mail address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "externalId" : {
          "type" : "string",
          "title" : "External ID",
          "description" : "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
          "x-gw-extensions" : {
            "filterable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The persons's first name. Only applicable for a `Contact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "homePhone" : {
          "type" : "object",
          "title" : "Home phone",
          "description" : "The person's home phone number. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/policyperiod_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Contact`",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The person's last name. Only applicable for a `Contact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "preferred" : {
          "type" : "boolean",
          "title" : "Preferred",
          "description" : "A `true` value for this field indicates that the vendor is one of the insurer's preferred vendors. Only applicable for a `Contact` that represents a vendor.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : [ "CompanyVendor", "PersonVendor" ]
          }
        },
        "primaryAddress" : {
          "type" : "object",
          "title" : "Primary address",
          "description" : "The contact's primary address",
          "$ref" : "#/definitions/policyperiod_Address",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "primaryLanguage" : {
          "type" : "object",
          "title" : "Primary language",
          "description" : "The contact's primary language",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "primaryLocale" : {
          "type" : "object",
          "title" : "Primary locale",
          "description" : "The contact's primary locale",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LocaleType"
          }
        },
        "primaryPhone" : {
          "type" : "string",
          "title" : "Primary phone",
          "description" : "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
          "readOnly" : true
        },
        "primaryPhoneType" : {
          "type" : "object",
          "title" : "Primary phone type",
          "description" : "The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "PrimaryPhoneType"
          }
        },
        "subtype" : {
          "type" : "object",
          "title" : "Subtype",
          "description" : "The specific type of contact that this `Contact` represents, such as `Person` or `Company`. The set of fields that can be set on a `Contact` depend on its `subtype`.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "typelist" : "Contact"
          }
        },
        "taxId" : {
          "type" : "string",
          "title" : "Tax ID",
          "description" : "The contact's tax ID",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "workPhone" : {
          "type" : "object",
          "title" : "Work phone",
          "description" : "The contact's work phone number, if this `Contact` represents a person, or the business's phone number, if this `Contact` represents a company",
          "$ref" : "#/definitions/policyperiod_PhoneNumber",
          "x-gw-nullable" : true
        }
      }
    },
    "Contingency" : {
      "type" : "object",
      "title" : "Contingency",
      "description" : "A `Contingency` indicates that some additional work is still remaining on the policy, such as additional documentation that the insured needs to provide. If the underlying issue is not resolved by the `actionStartDate`, then the `action` will automatically be started by the system, such as initiating a policy change or cancellation. (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "action" : {
          "type" : "object",
          "title" : "Action",
          "description" : "The action that will be taken if the underlying issue is not resolved successfully, such as changing or canceling the policy",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true,
            "typelist" : "ContingencyAction"
          }
        },
        "actionStartDate" : {
          "type" : "string",
          "title" : "Action start date",
          "description" : "The date on which the action specified in the `action` field will be initiated if the underlying issue is still unresolved. This value is calculated from the `action` type and the `dueDate` in order to ensure that the action can completed by the due date.",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "actionStarted" : {
          "type" : "boolean",
          "title" : "Action started",
          "description" : "A `true` value for this field indicates that the action specified in the `action` field has started",
          "readOnly" : true
        },
        "closeDate" : {
          "type" : "string",
          "title" : "Close date",
          "description" : "The date and time when this `Contingency` was closed",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "closeUser" : {
          "type" : "object",
          "title" : "Close user",
          "description" : "The user or service that closed this `Contingency`",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "createDate" : {
          "type" : "string",
          "title" : "Create date",
          "description" : "The date and time when this `Contingency` was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "createUser" : {
          "type" : "object",
          "title" : "Create user",
          "description" : "The user or service who created this `Contingency`",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The details of the underlying issue",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          },
          "minLength" : 1,
          "pattern" : "\\S"
        },
        "dueDate" : {
          "type" : "string",
          "title" : "Due date",
          "description" : "The date and time by which the underlying issue must be resolved",
          "format" : "date-time",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "sortable" : true
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The status of this `Contingency`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ContingencyStatus"
          }
        },
        "title" : {
          "type" : "string",
          "title" : "Title",
          "description" : "A short summary of the underlying issue",
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "requiredForCreate" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        }
      }
    },
    "ContractorsEquipPart" : {
      "type" : "object",
      "properties" : {
        "coinsurance" : {
          "type" : "object",
          "title" : "Coinsurance",
          "description" : "Coinsurance",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Coinsurance"
          }
        },
        "contractorType" : {
          "type" : "object",
          "title" : "ContractorType",
          "description" : "ContractorType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "ContractorType"
          }
        },
        "id" : {
          "type" : "string"
        },
        "perOccurrenceLimit" : {
          "type" : "integer",
          "title" : "PerOccurrenceLimit",
          "description" : "PerOccurrenceLimit",
          "x-gw-nullable" : true,
          "minimum" : 0
        },
        "reporting" : {
          "type" : "boolean",
          "title" : "Reporting",
          "description" : "Reporting",
          "x-gw-nullable" : true
        }
      }
    },
    "ContractorsEquipment" : {
      "type" : "object",
      "properties" : {
        "contractorsEquipmentID" : {
          "type" : "string",
          "title" : "ContractorsEquipmentID",
          "description" : "ContractorsEquipmentID",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "contractorsEquipmentNumber" : {
          "type" : "integer",
          "title" : "ContractorsEquipmentNumber",
          "description" : "ContractorsEquipmentNumber"
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "id" : {
          "type" : "string"
        },
        "manufacturer" : {
          "type" : "string",
          "title" : "Manufacturer",
          "description" : "Manufacturer",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "model" : {
          "type" : "string",
          "title" : "Model",
          "description" : "Model",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "modelYear" : {
          "type" : "integer",
          "title" : "ModelYear",
          "description" : "ModelYear",
          "x-gw-nullable" : true,
          "minimum" : 0
        },
        "yearBought" : {
          "type" : "integer",
          "title" : "YearBought",
          "description" : "YearBought",
          "x-gw-nullable" : true,
          "minimum" : 0
        }
      }
    },
    "Cost" : {
      "type" : "object",
      "title" : "Cost",
      "description" : "A `Cost` represents a unit of price over a period of time",
      "properties" : {
        "adjustedRate" : {
          "type" : "string",
          "title" : "Adjusted rate",
          "description" : "The adjusted rate, after any modification factors have been applied, for the cost over the rated term",
          "format" : "gw-bigdecimal",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "amount" : {
          "type" : "object",
          "title" : "Amount",
          "description" : "The current amount of this cost for the period of time between the `effectiveDate` and the `expirationDate`",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "baseRate" : {
          "type" : "string",
          "title" : "Base rate",
          "description" : "The base rate, before any modification factors have been applied, for the cost over the rated term",
          "format" : "gw-bigdecimal",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "basis" : {
          "type" : "string",
          "title" : "Basis",
          "description" : "The basis for this cost for the period of time between the `effectiveDate` and the `expirationDate`",
          "format" : "gw-bigdecimal",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "basisScalable" : {
          "type" : "boolean",
          "title" : "Basis scalable",
          "description" : "A `true` value for this field indicates that the `amount` of the cost will be scaled based on the `basis` of the cost if the effective length of the period is altered (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "chargeGroup" : {
          "type" : "string",
          "title" : "Charge group",
          "description" : "A custom group name that can be used to group related charges",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "chargePattern" : {
          "type" : "object",
          "title" : "Charge pattern",
          "description" : "The type of charge that this cost represents, such as premium or taxes",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ChargePattern"
          }
        },
        "costCode" : {
          "type" : "object",
          "title" : "Cost code",
          "description" : "The `CostCode` associated with this `Cost`",
          "$ref" : "#/definitions/policyperiod_ReferenceTableEntry",
          "readOnly" : true
        },
        "coverable" : {
          "type" : "object",
          "title" : "Coverable",
          "description" : "The `Coverable` that this cost applies to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true
        },
        "coverage" : {
          "type" : "object",
          "title" : "Coverage",
          "description" : "The `Coverage` that this cost applies to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true
        },
        "effectiveDate" : {
          "type" : "string",
          "title" : "Effective date",
          "description" : "The start date and time for the period of time that this cost covers",
          "format" : "date-time",
          "readOnly" : true
        },
        "expirationDate" : {
          "type" : "string",
          "title" : "Expiration date",
          "description" : "The end date and time for the period of time that this cost covers",
          "format" : "date-time",
          "readOnly" : true
        },
        "exposure" : {
          "type" : "object",
          "title" : "Coverage",
          "description" : "The `Exposure` that this cost applies to (Since 1.2.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "jurisdiction" : {
          "type" : "object",
          "title" : "Jurisdiction",
          "description" : "The jurisdiction that this cost applies to",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "typelist" : "Jurisdiction"
          }
        },
        "numDaysInRatedTerm" : {
          "type" : "integer",
          "title" : "Number of days in rated term",
          "description" : "The number of days in the policy term that were used when calculating the amounts in this cost",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          },
          "exclusiveMinimum" : true,
          "minimum" : 0
        },
        "overridable" : {
          "type" : "boolean",
          "title" : "Overridable",
          "description" : "A `true` value for this field indicates that overrides are allowed on this cost",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "overrideAdjustedRate" : {
          "type" : "string",
          "title" : "Override adjusted rate",
          "description" : "An override value that will be used as the `adjustedRate` for this cost instead of the `standardAdjustedRate` when calculating the `termAmount`",
          "format" : "gw-bigdecimal",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "overrideAmount" : {
          "type" : "object",
          "title" : "Override amount",
          "description" : "An override value that will be used as the `amount` for this cost instead of the `standardAmount`",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "overrideBaseRate" : {
          "type" : "string",
          "title" : "Override base rate",
          "description" : "An override value that will be used as the `baseRate` for this cost instead of the `standardBaseRate` when calculating the `adjustedRate`",
          "format" : "gw-bigdecimal",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "overrideReason" : {
          "type" : "string",
          "title" : "Override reason",
          "description" : "The reason for setting one of the override fields",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "overrideSource" : {
          "type" : "object",
          "title" : "Override source",
          "description" : "The source that set one of the override fields",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal",
            "typelist" : "OverrideSourceType"
          }
        },
        "overrideTermAmount" : {
          "type" : "object",
          "title" : "Override term amount",
          "description" : "An override value that will be used as the `termAmount` for this cost instead of the `standardTermAmount` when calculating the `amount`",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "policyLine" : {
          "type" : "object",
          "title" : "Policy line",
          "description" : "The `PolicyLine` that this cost applies to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyLine"
          }
        },
        "prorationMethod" : {
          "type" : "object",
          "title" : "Proration method",
          "description" : "The proration method used to calculate the `amount` from the `termAmount`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal",
            "typelist" : "ProrationMethod"
          }
        },
        "rateAmountType" : {
          "type" : "object",
          "title" : "Rate amount type",
          "description" : "The type of credit or debit that this cost represents",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "RateAmountType"
          }
        },
        "rateRoutine" : {
          "type" : "string",
          "title" : "Rate routine",
          "description" : "The rate routine that produced this cost",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "raterId" : {
          "type" : "string",
          "title" : "Rater ID",
          "description" : "The ID of the `Rater` that produced this cost",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "roundingLevel" : {
          "type" : "integer",
          "title" : "Rounding level",
          "description" : "The number of decimal places that this cost was rounded to during proration",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "roundingMode" : {
          "type" : "object",
          "title" : "Rounding mode",
          "description" : "The rounding mode, such as half up or half even, that was used during proration",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal",
            "typelist" : "RoundingModeType"
          }
        },
        "standardAdjustedRate" : {
          "type" : "string",
          "title" : "Standard adjusted rate",
          "description" : "The standard value for the `adjustedRate` field, as calculated based on the `standardBaseRate`. This field can be used as a reference value if this cost has been overridden.",
          "format" : "gw-bigdecimal",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "standardAmount" : {
          "type" : "object",
          "title" : "Standard amount",
          "description" : "The standard value for the `amount` field, as calculated based on the `standardTermAmount`. This field can be used as a reference value if this cost has been overridden.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "standardBaseRate" : {
          "type" : "string",
          "title" : "Standard base rate",
          "description" : "The standard value for the `baseRate` field. This field can be used as a reference value if this cost has been overridden.",
          "format" : "gw-bigdecimal",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "standardTermAmount" : {
          "type" : "object",
          "title" : "Standard term amount",
          "description" : "The standard value for the `termAmount` field, as calculated based on the `standardAdjustedRate`. This field can be used as a reference value if this cost has been overridden.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "subjectToReporting" : {
          "type" : "boolean",
          "title" : "Subject to reporting",
          "description" : "A `true` value indicates that this cost is subject to reporting",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "termAmount" : {
          "type" : "object",
          "title" : "Term amount",
          "description" : "The amount of this cost over the full term of the policy. This amount is prorated to arrive at the `amount` if this cost does not cover the entire policy term.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        }
      }
    },
    "Coverage" : {
      "type" : "object",
      "title" : "Coverage",
      "description" : "A `Coverage` represents a clause in the policy contract. It can represent a coverage, exclusion, or other condition that is part of the policy.",
      "properties" : {
        "clauseType" : {
          "type" : "string",
          "title" : "Clause type",
          "description" : "Indicates what type of contract clause this `Coverage` represents. If set to `coverage`, this `Coverage` represents a coverage for a particular cause of loss or insurable object. If set to `exclusion`, this `Coverage` represents something that is explicitly not covered by this policy. If set to `condition`, this `Coverage` represents some other aspect of the insurance contract that is neither providing coverage nor excluding coverage."
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "pattern" : {
          "type" : "object",
          "title" : "Pattern",
          "description" : "A reference to the `CoveragePattern` that was used to create this `Coverage`",
          "$ref" : "#/definitions/ProductModelReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "selected" : {
          "type" : "boolean",
          "title" : "Selected",
          "description" : "A `true` value indicates that this clause is part of the policy. A `false` value indicates that this clause is available but is not currently part of the policy.",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "terms" : {
          "type" : "object",
          "title" : "Terms",
          "description" : "The set of `CoverageTerms` that define specific parameters of this clause, such as coverage deductibles and limits",
          "$ref" : "#/definitions/CoverageTermsMap"
        }
      }
    },
    "CoverageTerm" : {
      "type" : "object",
      "title" : "Coverage term",
      "description" : "The value of a single term that applies to a coverage, condition, or exclusion",
      "properties" : {
        "availableChoices" : {
          "type" : "array",
          "title" : "Available choices",
          "description" : "The set of all available choices for this term. Only applicable if the `covTermType` is `choice`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ProductModelChoice"
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "bigDecimalValue" : {
          "type" : "string",
          "title" : "Decimal value",
          "description" : "The value of this term as a decimal. Only applicable if the `covTermType` is `decimal`.",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "booleanValue" : {
          "type" : "boolean",
          "title" : "Boolean value",
          "description" : "The value of this term as a Boolean. Only applicable if the `covTermType` is `boolean`.",
          "x-gw-nullable" : true
        },
        "choiceValue" : {
          "type" : "object",
          "title" : "Choice value",
          "description" : "The value of this term as an enumerated choice. Only applicable if the `covTermType` is `choice`.",
          "$ref" : "#/definitions/ProductModelChoice",
          "x-gw-nullable" : true
        },
        "covTermType" : {
          "type" : "string",
          "title" : "Coverage term type",
          "description" : "The type of value for this term, such as `choice` or `direct`",
          "readOnly" : true
        },
        "dateTimeValue" : {
          "type" : "string",
          "title" : "Date time value",
          "description" : "The value of this term as a date and time. Only applicable if the `covTermType` is `date`. (Since 1.1.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true
        },
        "dateValue" : {
          "type" : "string",
          "title" : "(Deprecated) Date value",
          "description" : "This field value has been deprecated. Use the `dateTimeValue` field instead.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "directValue" : {
          "type" : "string",
          "title" : "Direct value",
          "description" : "The value of this term as a decimal. Only applicable if the `covTermType` is `direct`.",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "displayValue" : {
          "type" : "string",
          "title" : "Display value",
          "description" : "The formatted, human-readable version of the value of this term",
          "readOnly" : true
        },
        "pattern" : {
          "type" : "object",
          "title" : "Pattern",
          "description" : "A reference to the `CovTermPattern` used to create this `CoverageTerm`",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "stringValue" : {
          "type" : "string",
          "title" : "String value",
          "description" : "The value of this term as a string. Only applicable if the `covTermType` is `string`.",
          "x-gw-nullable" : true
        },
        "typekeyValue" : {
          "type" : "object",
          "title" : "TypeKey value",
          "description" : "The value of this term as an enumerated `TypeKey` value. Only applicable if the `covTermType` is `typekey`.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true
        }
      }
    },
    "CoverageTermsMap" : {
      "type" : "object",
      "title" : "Coverage terms",
      "description" : "The term values for a coverage, condition, or exclusion",
      "additionalProperties" : {
        "type" : "object",
        "title" : "Terms",
        "description" : "The term values. Property keys represent the `id` of the `CoverageTermPattern` for the term.",
        "$ref" : "#/definitions/CoverageTerm"
      }
    },
    "CoveragesMap" : {
      "type" : "object",
      "title" : "Coverages",
      "description" : "The coverages, conditions, and exclusions for a covered risk",
      "additionalProperties" : {
        "type" : "object",
        "title" : "Coverages",
        "description" : "The coverages, conditions, and exclusions. Property keys represent the `id` of the associated `CoveragePattern` for the clause.",
        "$ref" : "#/definitions/Coverage"
      }
    },
    "CoveredLocationBase" : {
      "type" : "object",
      "properties" : {
        "CEDEX" : {
          "type" : "string",
          "title" : "CEDEX",
          "description" : "The CEDEX bureau of the location's address. Only applicable in certain countries.",
          "maxLength" : 2,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "accountLocation" : {
          "type" : "object",
          "title" : "Account location",
          "description" : "The `AccountLocation` that this element is linked to. Changes to most fields on this element will also affect the linked `AccountLocation`.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "resourceType" : "AccountLocation"
          }
        },
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the location's address",
          "x-gw-nullable" : true
        },
        "addressLine1Kanji" : {
          "type" : "string",
          "title" : "Address line 1 kanji",
          "description" : "The kanji version of the first line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "addressLine2Kanji" : {
          "type" : "string",
          "title" : "Address line 2 kanji",
          "description" : "The kanji version of the second line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the location's address",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "typelist" : "AddressType"
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the location's address",
          "x-gw-nullable" : true
        },
        "cityKanji" : {
          "type" : "string",
          "title" : "City kanji",
          "description" : "The kanji version of the city of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the location represented by this element, including all standard fields for the address's country",
          "readOnly" : true
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "locationNum" : {
          "type" : "integer",
          "title" : "Location number",
          "description" : "The number automatically assigned to this location",
          "readOnly" : true
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        }
      }
    },
    "CreateCancellationAttributes" : {
      "type" : "object",
      "title" : "Create cancellation attributes",
      "description" : "Details of the `Cancellation` job to create",
      "required" : [ "cancellationReasonCode", "cancellationSource", "jobEffectiveDate" ],
      "properties" : {
        "calculationMethod" : {
          "type" : "object",
          "title" : "Calculation method",
          "description" : "The method used to calculate the refund owed as a result of the cancellation",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "CalculationMethod"
          }
        },
        "cancellationReasonCode" : {
          "type" : "object",
          "title" : "Cancellation reason code",
          "description" : "The reason for the cancellation",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ReasonCode"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "An extended description of this job. Can be used to describe the reason why this job was created. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0"
        },
        "jobEffectiveDate" : {
          "type" : "string",
          "title" : "Job effective date",
          "description" : "The date on which the cancellation takes effect",
          "format" : "date"
        },
        "cancellationSource" : {
          "type" : "object",
          "title" : "Cancellation source",
          "description" : "The party that initiated the cancellation, typically either the insurer or the insured",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "CancellationSource"
          }
        },
        "quoteOnStart" : {
          "type" : "boolean",
          "title" : "Quote on start",
          "description" : "Set this field to explicitly request that the `Cancellation` should or should not be quoted immediately upon starting. If not specified, the default system configuration will determine if the `Cancellation` is automatically quoted. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0"
        }
      }
    },
    "CreateIssuanceAttributes" : {
      "type" : "object",
      "title" : "Create issuance attributes",
      "description" : "Details of the `Issuance` job to create (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "An extended description of this job. Can be used to describe the reason why this job was created. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0"
        }
      }
    },
    "CreateJobAttributes" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "An extended description of this job. Can be used to describe the reason why this job was created. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0"
        }
      }
    },
    "CreatePolicyChangeAttributes" : {
      "type" : "object",
      "title" : "Create policy change attributes",
      "description" : "Details of the `PolicyChange` job to create",
      "required" : [ "jobEffectiveDate" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "An extended description of this job. Can be used to describe the reason why this job was created. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0"
        },
        "jobEffectiveDate" : {
          "type" : "string",
          "title" : "Job effective date",
          "description" : "The date on which this change should become effective",
          "format" : "date"
        }
      }
    },
    "CreateReinstatementAttributes" : {
      "type" : "object",
      "title" : "Create reinstatement attributes",
      "description" : "Details of the `Reinstatement` job to create",
      "required" : [ "reinstateCode" ],
      "properties" : {
        "reinstateCode" : {
          "type" : "object",
          "title" : "Reinstate code",
          "description" : "The reason that the policy is being reinstated",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ReinstateCode"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "An extended description of this job. Can be used to describe the reason why this job was created. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0"
        }
      }
    },
    "CreateRenewalAttributes" : {
      "type" : "object",
      "title" : "Create renewal attributes",
      "description" : "Details of the `Renewal` job to create",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "An extended description of this job. Can be used to describe the reason why this job was created. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0"
        }
      }
    },
    "CreateRewriteAttributes" : {
      "type" : "object",
      "title" : "Create rewrite attributes",
      "description" : "Details of the `Rewrite` job to create",
      "required" : [ "rewriteType" ],
      "properties" : {
        "rewriteType" : {
          "type" : "object",
          "title" : "Rewrite type",
          "description" : "The way in which the policy should be rewritten, such as generating a new policy term versus rewriting the remainder of the existing term",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "RewriteType"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "An extended description of this job. Can be used to describe the reason why this job was created. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0"
        },
        "changePolicyNumber" : {
          "type" : "boolean",
          "title" : "Change policy number",
          "description" : "Set this field to `true` to indicate that a new policy number should be generated when the policy is rewritten. Defaults to `false`.",
          "default" : false
        }
      }
    },
    "CreateRewriteNewAccountAttributes" : {
      "type" : "object",
      "title" : "Create rewrite new account attributes",
      "description" : "Details of the `RewriteNewAccount` job to create (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "required" : [ "account" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "An extended description of this job. Can be used to describe the reason why this job was created. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0"
        },
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that the policy should be rewritten to",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        }
      }
    },
    "CreateSubmissionAttributes" : {
      "type" : "object",
      "title" : "Create submission attributes",
      "description" : "Details of the `Submission` job to create",
      "required" : [ "account", "baseState", "jobEffectiveDate", "producerCode", "product" ],
      "properties" : {
        "dateQuoteNeeded" : {
          "type" : "string",
          "title" : "Date quote needed",
          "description" : "The date that a quote for this submission is needed by",
          "format" : "date",
          "x-gw-nullable" : true
        },
        "baseState" : {
          "type" : "object",
          "title" : "Base state",
          "description" : "The state or jurisdiction that the policy is based on",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "jobEffectiveDate" : {
          "type" : "string",
          "title" : "Job effective date",
          "description" : "The date on which the new policy will become effective",
          "format" : "date"
        },
        "product" : {
          "type" : "object",
          "title" : "Product",
          "description" : "A reference to the `Product` that represents the insurance product that the new policy is for",
          "$ref" : "#/definitions/ProductModelReference"
        },
        "termType" : {
          "type" : "object",
          "title" : "Term type",
          "description" : "The type of term for the new policy, such as annual or half year. Must be one of the allowed term types for the requested product. If not specified, the default will be based on the insurance product's default term type.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "TermType"
          }
        },
        "uwCompany" : {
          "type" : "object",
          "title" : "Underwriting company",
          "description" : "A reference to the `UWCompany` that issues this policy (Since 1.3.0)",
          "$ref" : "#/definitions/UWCompanyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-extensions" : {
            "securityLevel" : "special"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "An extended description of this job. Can be used to describe the reason why this job was created. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0"
        },
        "producerCode" : {
          "type" : "object",
          "title" : "Producer code",
          "description" : "A reference to the `ProducerCode` that the new policy will be assigned to",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        },
        "quoteType" : {
          "type" : "object",
          "title" : "Quote type",
          "description" : "The type of quote that is requested",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "QuoteType"
          }
        },
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that the policy is being created for",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        }
      }
    },
    "DeclineAttributes" : {
      "type" : "object",
      "title" : "Decline attributes",
      "description" : "Details of the decision to decline the submission",
      "required" : [ "rejectReason" ],
      "properties" : {
        "rejectReason" : {
          "type" : "object",
          "title" : "Reject reason",
          "description" : "The reason for declining the submission",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ReasonCode"
          }
        },
        "rejectReasonText" : {
          "type" : "string",
          "title" : "Reject reason text",
          "description" : "A more detailed explanation for why the submission was declined",
          "x-gw-nullable" : true
        }
      }
    },
    "DiffTreeNode" : {
      "type" : "object",
      "title" : "Diff tree node",
      "description" : "A node in the tree of differences between two policy periods (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "changeType" : {
          "type" : "string",
          "title" : "Change type",
          "description" : "The type of diff change - Add or Remove or Change or Window - associated with this difference tree node"
        },
        "children" : {
          "type" : "array",
          "title" : "Children",
          "description" : "A collection of children for this difference tree node",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DiffTreeNode"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "entity" : {
          "type" : "object",
          "title" : "Entity",
          "description" : "The element that has the differing values and/or child diffs",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        },
        "field" : {
          "type" : "string",
          "title" : "Field",
          "description" : "The field that this diff tree node corresponds to, if any"
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "description" : "A descriptive label for this diff tree node"
        },
        "value1" : {
          "type" : "string",
          "title" : "First value",
          "description" : "The first value of the difference. This could be the old value or value on the first job, depending on the context of the difference."
        },
        "value2" : {
          "type" : "string",
          "title" : "Second value",
          "description" : "The second value of the difference. This could be the new value or the value on the second job, depending on the context of the difference."
        }
      }
    },
    "policyperiod_Document" : {
      "type" : "object",
      "title" : "Document",
      "description" : "A `Document` represents a document within the application, which can have additional metadata such as the author of the document or a specific security level. The actual contents of the document are generally stored in a separate document management system that this application is linked to. (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "xml" : {
        "name" : "Document"
      },
      "properties" : {
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "author" : {
          "type" : "string",
          "title" : "Author",
          "description" : "The name of the person who created this document",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "contingency" : {
          "type" : "object",
          "title" : "Contingency",
          "description" : "A reference to the `Contingency` that this document is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Contingency"
          }
        },
        "dateModified" : {
          "type" : "string",
          "title" : "Date modified",
          "description" : "The date and time that this `Document` was most recently updated",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of this document",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "docUID" : {
          "type" : "string",
          "title" : "Document UID",
          "description" : "The unique identifier for this `Document` in the linked document management system. The exact format of the identifier depends upon the specifics of the document management system the application is linked to.",
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Document`",
          "readOnly" : true
        },
        "inbound" : {
          "type" : "boolean",
          "title" : "Inbound",
          "description" : "This field indicates whether this document is considered to be inbound, outbound, or neither",
          "x-gw-nullable" : true
        },
        "job" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the `Job` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Job"
          }
        },
        "language" : {
          "type" : "object",
          "title" : "Language",
          "description" : "The language in which this document was produced",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "mimeType" : {
          "type" : "string",
          "title" : "MIME type",
          "description" : "The MIME type of this document, such as `application/msword` for a Microsoft Word document",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 80
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this document",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 80
        },
        "obsolete" : {
          "type" : "boolean",
          "title" : "Obsolete",
          "description" : "Setting this field to `true` indicates that the information in this document can no longer be relied upon to be current and relevant. This is often used instead of deletion to preserve history.",
          "x-gw-nullable" : true
        },
        "policy" : {
          "type" : "object",
          "title" : "Policy",
          "description" : "A reference to the `Policy` that this document is associated with (Since 1.2.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "recipient" : {
          "type" : "string",
          "title" : "Recipient",
          "description" : "The name of the intended recipient of this document",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "section" : {
          "type" : "object",
          "title" : "Section",
          "description" : "The section to which this document belongs",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "DocumentSection"
          }
        },
        "securityType" : {
          "type" : "object",
          "title" : "Security type",
          "description" : "The security level that has been assigned to this document",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DocumentSecurityType"
          }
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The current status of this document, such as `draft` or `approved`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "typelist" : "DocumentStatusType"
          }
        },
        "type" : {
          "type" : "object",
          "title" : "Type",
          "description" : "The specific type of document",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "requiredForCreate" : true,
            "typelist" : "DocumentType"
          }
        }
      }
    },
    "policyperiod_DocumentContent" : {
      "type" : "object",
      "title" : "Document content",
      "description" : "The contents of a `Document` (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "xml" : {
        "name" : "DocumentContent"
      },
      "properties" : {
        "contents" : {
          "type" : "string",
          "title" : "Contents",
          "description" : "The contents of this document as a Base64-encoded string",
          "format" : "byte",
          "readOnly" : true
        },
        "responseMimeType" : {
          "type" : "string",
          "title" : "Response MIME type",
          "description" : "The MIME type of this document's contents, such as `application/msword` for a Microsoft Word document",
          "readOnly" : true
        },
        "url" : {
          "type" : "string",
          "title" : "URL",
          "description" : "The URL of this document within the linked document management system",
          "readOnly" : true
        }
      }
    },
    "DwellingAnimal" : {
      "type" : "object",
      "properties" : {
        "additionalInformation" : {
          "type" : "string",
          "title" : "AdditionalInformation",
          "description" : "AdditionalInformation",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "animalBiteHistory" : {
          "type" : "boolean",
          "title" : "AnimalBiteHistory",
          "description" : "AnimalBiteHistory",
          "x-gw-nullable" : true
        },
        "animalBreed" : {
          "type" : "object",
          "title" : "AnimalBreed",
          "description" : "AnimalBreed",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AnimalBreed",
            "filterBy" : [ "animalType" ]
          }
        },
        "animalType" : {
          "type" : "object",
          "title" : "AnimalType",
          "description" : "AnimalType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AnimalType"
          }
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "DwellingHazard" : {
      "type" : "object",
      "properties" : {
        "additionalInformation" : {
          "type" : "string",
          "title" : "AdditionalInformation",
          "description" : "AdditionalInformation",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "hazardType" : {
          "type" : "object",
          "title" : "HazardType",
          "description" : "HazardType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "HazardType"
          }
        },
        "id" : {
          "type" : "string"
        },
        "specificHazard" : {
          "type" : "object",
          "title" : "SpecificHazard",
          "description" : "SpecificHazard",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "SpecificHazard"
          }
        }
      }
    },
    "EffDatedSplit" : {
      "type" : "object",
      "title" : "Effective dated split",
      "description" : "Represents the start and end dates for an effective dated split of field values",
      "properties" : {
        "endDate" : {
          "type" : "string",
          "title" : "End date",
          "description" : "The date and time that marks the end of the period of time that this split covers",
          "format" : "date-time",
          "readOnly" : true
        },
        "startDate" : {
          "type" : "string",
          "title" : "Start date",
          "description" : "The date and time that marks the beginning of the period of time that this split covers",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "policyperiod_ExclusiveStateSet" : {
      "type" : "object",
      "title" : "Exclusive state set",
      "description" : "A set of states that can be used either as an inclusive set or an exclusive set (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "ExclusiveStateSet"
      },
      "required" : [ "inclusionType", "states" ],
      "properties" : {
        "inclusionType" : {
          "type" : "string",
          "title" : "Inclusion type",
          "description" : "Whether the set of states is inclusive or exclusive",
          "enum" : [ "exclusive", "inclusive" ]
        },
        "states" : {
          "type" : "array",
          "title" : "States",
          "description" : "The states that comprise the set",
          "minItems" : 1,
          "items" : {
            "type" : "string",
            "x-gw-type" : "typekey.State"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "FieldDiff" : {
      "type" : "object",
      "title" : "Field diff",
      "description" : "A field representing a diff or change between two policy periods (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "changedValue" : {
          "type" : "string",
          "title" : "Changed value",
          "description" : "The value of the diff field in the policy period that was changed"
        },
        "entity" : {
          "type" : "object",
          "title" : "Entity",
          "description" : "The element that has diff value",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        },
        "existingValue" : {
          "type" : "string",
          "title" : "Existing value",
          "description" : "The value of the diff field on this job"
        },
        "field" : {
          "type" : "string",
          "title" : "field",
          "description" : "The label of the diff field on this job"
        }
      }
    },
    "GLClassCodeReference" : {
      "type" : "object",
      "properties" : {
        "basis" : {
          "type" : "object",
          "$ref" : "#/definitions/ClassCodeBasis"
        },
        "classification" : {
          "type" : "string",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "code" : {
          "type" : "string",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "GLExposure" : {
      "type" : "object",
      "properties" : {
        "addedDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "classCode" : {
          "type" : "object",
          "title" : "ClassCode",
          "description" : "ClassCode",
          "$ref" : "#/definitions/GLClassCodeReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string"
        },
        "location" : {
          "type" : "object",
          "title" : "Location",
          "description" : "Location",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "resourceType" : "PolicyLocation"
          }
        },
        "removedDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "splits" : {
          "type" : "object",
          "$ref" : "#/definitions/GLExposureSplitsMap"
        }
      }
    },
    "GLExposureSplit" : {
      "type" : "object",
      "properties" : {
        "scalableBasisAmount" : {
          "type" : "integer",
          "title" : "ScalableBasisAmount",
          "description" : "ScalableBasisAmount",
          "x-gw-nullable" : true,
          "minimum" : 0
        },
        "fixedBasisAmount" : {
          "type" : "integer",
          "title" : "FixedBasisAmount",
          "description" : "FixedBasisAmount",
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true,
          "minimum" : 0
        },
        "auditedBasis" : {
          "type" : "integer",
          "title" : "AuditedBasis",
          "description" : "AuditedBasis",
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true,
          "minimum" : 0
        },
        "endDate" : {
          "type" : "string",
          "title" : "End date",
          "description" : "The date and time that marks the end of the period of time that this split covers",
          "format" : "date-time",
          "readOnly" : true
        },
        "startDate" : {
          "type" : "string",
          "title" : "Start date",
          "description" : "The date and time that marks the beginning of the period of time that this split covers",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "GLExposureSplitsMap" : {
      "type" : "object",
      "additionalProperties" : {
        "type" : "object",
        "$ref" : "#/definitions/GLExposureSplit"
      }
    },
    "GLLine" : {
      "type" : "object",
      "properties" : {
        "claimsMadeOrigEffDate" : {
          "type" : "string",
          "title" : "ClaimsMadeOrigEffDate",
          "description" : "ClaimsMadeOrigEffDate",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "glCoverageForm" : {
          "type" : "object",
          "title" : "GLCoverageForm",
          "description" : "GLCoverageForm",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "GLCoverageFormType"
          }
        },
        "locationLimits" : {
          "type" : "boolean",
          "title" : "LocationLimits",
          "description" : "LocationLimits",
          "x-gw-nullable" : true
        },
        "numAddInsured" : {
          "type" : "integer",
          "title" : "NumAddInsured",
          "description" : "NumAddInsured",
          "x-gw-nullable" : true
        },
        "pattern" : {
          "type" : "object",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "patternCode" : {
          "type" : "string",
          "title" : "PatternCode",
          "description" : "PatternCode",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        },
        "pollutionCleanupExp" : {
          "type" : "boolean",
          "title" : "PollutionCleanupExp",
          "description" : "PollutionCleanupExp",
          "x-gw-nullable" : true
        },
        "retroactiveDate" : {
          "type" : "string",
          "title" : "RetroactiveDate",
          "description" : "RetroactiveDate",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "splitLimits" : {
          "type" : "boolean",
          "title" : "SplitLimits",
          "description" : "SplitLimits",
          "x-gw-nullable" : true
        }
      }
    },
    "policyperiod_GenericRelation" : {
      "type" : "object",
      "title" : "Generic relation",
      "description" : "A reference to a related element",
      "xml" : {
        "name" : "GenericRelation"
      },
      "required" : [ "id", "type" ],
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the referenced element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "policyperiod_GroupDetail" : {
      "type" : "object",
      "title" : "Group detail",
      "description" : "Used to represent a reference to a `Group`",
      "xml" : {
        "name" : "GroupDetail"
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The name of the `Group`"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Group`"
        }
      }
    },
    "policyperiod_GroupReference" : {
      "type" : "object",
      "title" : "Group reference",
      "description" : "A reference to `Group` element (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "GroupReference"
      },
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "branchCode" : {
          "type" : "string",
          "title" : "Branch code",
          "description" : "The `branchCode` of the group",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the group"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced `Group` within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "HOPCoveragePart" : {
      "type" : "object",
      "properties" : {
        "coveragePartType" : {
          "type" : "object",
          "title" : "CoveragePartType",
          "description" : "CoveragePartType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "CoveragePartType"
          }
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "HOPDwellAddlInterest" : {
      "type" : "object",
      "properties" : {
        "additionalInterestType" : {
          "type" : "object",
          "title" : "AdditionalInterestType",
          "description" : "AdditionalInterestType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AdditionalInterestType"
          }
        },
        "addlIntEffDate" : {
          "type" : "string",
          "title" : "AddlIntEffDate",
          "description" : "AddlIntEffDate",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "addlIntExpDate" : {
          "type" : "string",
          "title" : "AddlIntExpDate",
          "description" : "AddlIntExpDate",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "certRequired" : {
          "type" : "boolean",
          "title" : "CertRequired",
          "description" : "CertRequired",
          "x-gw-nullable" : true
        },
        "contractNumber" : {
          "type" : "string",
          "title" : "ContractNumber",
          "description" : "ContractNumber",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        },
        "policyAddlInterest" : {
          "type" : "object",
          "title" : "PolicyAddlInterest",
          "description" : "PolicyAddlInterest",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        }
      }
    },
    "HOPDwelling" : {
      "type" : "object",
      "x-gw-extensions" : {
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "addressLine1Kanji" : {
          "type" : "string",
          "title" : "Address line 1 kanji",
          "description" : "The kanji version of the first line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "constructionType" : {
          "type" : "object",
          "title" : "ConstructionType",
          "description" : "ConstructionType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "HOPConstructionType"
          }
        },
        "cityKanji" : {
          "type" : "string",
          "title" : "City kanji",
          "description" : "The kanji version of the city of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "dwellingLocation" : {
          "type" : "object",
          "title" : "DwellingLocation",
          "description" : "DwellingLocation",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DwellingLocationType"
          }
        },
        "occupancy" : {
          "type" : "object",
          "title" : "Occupancy",
          "description" : "Occupancy",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DwellingOccupancyType"
          }
        },
        "CEDEX" : {
          "type" : "string",
          "title" : "CEDEX",
          "description" : "The CEDEX bureau of the location's address. Only applicable in certain countries.",
          "maxLength" : 2,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "primaryHeatingDescription" : {
          "type" : "string",
          "title" : "PrimaryHeatingDescription",
          "description" : "PrimaryHeatingDescription",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "replacementCost" : {
          "type" : "object",
          "title" : "ReplacementCost",
          "description" : "ReplacementCost",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-nullable" : true
        },
        "roofingUpgradeDate" : {
          "type" : "integer",
          "title" : "RoofingUpgradeDate",
          "description" : "RoofingUpgradeDate",
          "x-gw-nullable" : true
        },
        "knownWaterLeakage" : {
          "type" : "boolean",
          "title" : "KnownWaterLeakage",
          "description" : "KnownWaterLeakage",
          "x-gw-nullable" : true
        },
        "yearBuilt" : {
          "type" : "integer",
          "title" : "YearBuilt",
          "description" : "YearBuilt",
          "x-gw-nullable" : true
        },
        "residenceType" : {
          "type" : "object",
          "title" : "ResidenceType",
          "description" : "ResidenceType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "ResidenceType"
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "constructionTypeDescription" : {
          "type" : "string",
          "title" : "ConstructionTypeDescription",
          "description" : "ConstructionTypeDescription",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "deadbolts" : {
          "type" : "boolean",
          "title" : "Deadbolts",
          "description" : "Deadbolts",
          "x-gw-nullable" : true
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the location's address",
          "x-gw-nullable" : true
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "roomerBoardersNumber" : {
          "type" : "integer",
          "title" : "RoomerBoardersNumber",
          "description" : "RoomerBoardersNumber",
          "x-gw-nullable" : true,
          "minimum" : 0
        },
        "primaryHeatingType" : {
          "type" : "object",
          "title" : "PrimaryHeatingType",
          "description" : "PrimaryHeatingType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "HeatingType"
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "insuredUnits" : {
          "type" : "integer",
          "title" : "InsuredUnits",
          "description" : "InsuredUnits",
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true,
          "minimum" : 0
        },
        "fireplaceOrWoodStovesNumber" : {
          "type" : "integer",
          "title" : "FireplaceOrWoodStovesNumber",
          "description" : "FireplaceOrWoodStovesNumber",
          "x-gw-nullable" : true,
          "minimum" : 0
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the location's address",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "typelist" : "AddressType"
          }
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "wiringType" : {
          "type" : "object",
          "title" : "WiringType",
          "description" : "WiringType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "WiringType"
          }
        },
        "trampolineSafetyNet" : {
          "type" : "boolean",
          "title" : "TrampolineSafetyNet",
          "description" : "TrampolineSafetyNet",
          "x-gw-nullable" : true
        },
        "roofTypeDescription" : {
          "type" : "string",
          "title" : "RoofTypeDescription",
          "description" : "RoofTypeDescription",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "addressLine2Kanji" : {
          "type" : "string",
          "title" : "Address line 2 kanji",
          "description" : "The kanji version of the second line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "floodingHazard" : {
          "type" : "boolean",
          "title" : "FloodingHazard",
          "description" : "FloodingHazard",
          "x-gw-nullable" : true
        },
        "electricalSystemUpgradeDate" : {
          "type" : "integer",
          "title" : "ElectricalSystemUpgradeDate",
          "description" : "ElectricalSystemUpgradeDate",
          "x-gw-nullable" : true
        },
        "knownWaterLeakageDescription" : {
          "type" : "string",
          "title" : "KnownWaterLeakageDescription",
          "description" : "KnownWaterLeakageDescription",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 200
        },
        "storiesNumber" : {
          "type" : "integer",
          "title" : "StoriesNumber",
          "description" : "StoriesNumber",
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true,
          "minimum" : 0
        },
        "sprinklerSystemType" : {
          "type" : "object",
          "title" : "SprinklerSystemType",
          "description" : "SprinklerSystemType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "SprinklerSystemType"
          }
        },
        "distanceToFireHydrant" : {
          "type" : "integer",
          "title" : "DistanceToFireHydrant",
          "description" : "DistanceToFireHydrant",
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true,
          "minimum" : 0
        },
        "fireAlarmType" : {
          "type" : "object",
          "title" : "FireAlarmType",
          "description" : "FireAlarmType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "FireAlarmType"
          }
        },
        "smokeAlarm" : {
          "type" : "object",
          "title" : "SmokeAlarm",
          "description" : "SmokeAlarm",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "SmokeAlarms"
          }
        },
        "heatingUpgradeDate" : {
          "type" : "integer",
          "title" : "HeatingUpgradeDate",
          "description" : "HeatingUpgradeDate",
          "x-gw-nullable" : true
        },
        "plumbingType" : {
          "type" : "object",
          "title" : "PlumbingType",
          "description" : "PlumbingType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PlumbingType"
          }
        },
        "unitsNumber" : {
          "type" : "integer",
          "title" : "UnitsNumber",
          "description" : "UnitsNumber",
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true,
          "minimum" : 0
        },
        "numberOfFireExtinguishers" : {
          "type" : "integer",
          "title" : "NumberOfFireExtinguishers",
          "description" : "NumberOfFireExtinguishers",
          "x-gw-nullable" : true,
          "minimum" : 0
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the location's address",
          "x-gw-nullable" : true
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the location represented by this element, including all standard fields for the address's country",
          "readOnly" : true
        },
        "foundation" : {
          "type" : "object",
          "title" : "Foundation",
          "description" : "Foundation",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "FoundationType"
          }
        },
        "secondaryHeatingType" : {
          "type" : "object",
          "title" : "SecondaryHeatingType",
          "description" : "SecondaryHeatingType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "HeatingType"
          }
        },
        "nearCommercial" : {
          "type" : "boolean",
          "title" : "NearCommercial",
          "description" : "NearCommercial",
          "x-gw-nullable" : true
        },
        "primaryHeatingFuelTankLocation" : {
          "type" : "object",
          "title" : "PrimaryHeatingFuelTankLocation",
          "description" : "PrimaryHeatingFuelTankLocation",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "FuelTankLocationType"
          }
        },
        "visibleToNeighbors" : {
          "type" : "boolean",
          "title" : "VisibleToNeighbors",
          "description" : "VisibleToNeighbors",
          "x-gw-nullable" : true
        },
        "dwellingUsage" : {
          "type" : "object",
          "title" : "DwellingUsage",
          "description" : "DwellingUsage",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DwellingUsage"
          }
        },
        "accountLocation" : {
          "type" : "object",
          "title" : "Account location",
          "description" : "The `AccountLocation` that this element is linked to. Changes to most fields on this element will also affect the linked `AccountLocation`.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "resourceType" : "AccountLocation"
          }
        },
        "primaryHeatingFuelLineLocation" : {
          "type" : "object",
          "title" : "PrimaryHeatingFuelLineLocation",
          "description" : "PrimaryHeatingFuelLineLocation",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "FuelLineLocationType"
          }
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "coverageForm" : {
          "type" : "object",
          "title" : "CoverageForm",
          "description" : "CoverageForm",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "HOPCoverageForm"
          }
        },
        "distanceToFireStation" : {
          "type" : "integer",
          "title" : "DistanceToFireStation",
          "description" : "DistanceToFireStation",
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true,
          "minimum" : 0
        },
        "burglarAlarmType" : {
          "type" : "object",
          "title" : "BurglarAlarmType",
          "description" : "BurglarAlarmType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BurglarAlarmType"
          }
        },
        "roofType" : {
          "type" : "object",
          "title" : "RoofType",
          "description" : "RoofType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "HOPRoofType"
          }
        },
        "plumbingTypeDescription" : {
          "type" : "string",
          "title" : "PlumbingTypeDescription",
          "description" : "PlumbingTypeDescription",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "trampolineExists" : {
          "type" : "boolean",
          "title" : "TrampolineExists",
          "description" : "TrampolineExists",
          "x-gw-nullable" : true
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "electricalType" : {
          "type" : "object",
          "title" : "ElectricalType",
          "description" : "ElectricalType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BreakerType"
          }
        },
        "fireProtectionClass" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "FireProtectClass"
          }
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "garageType" : {
          "type" : "object",
          "title" : "GarageType",
          "description" : "GarageType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "GarageType"
          }
        },
        "plumbingUpgradeDate" : {
          "type" : "integer",
          "title" : "PlumbingUpgradeDate",
          "description" : "PlumbingUpgradeDate",
          "x-gw-nullable" : true
        },
        "locationNum" : {
          "type" : "integer",
          "title" : "Location number",
          "description" : "The number automatically assigned to this location",
          "readOnly" : true
        }
      }
    },
    "HOPLine" : {
      "type" : "object",
      "properties" : {
        "numAddInsured" : {
          "type" : "integer",
          "title" : "NumAddInsured",
          "description" : "NumAddInsured",
          "x-gw-nullable" : true
        },
        "pattern" : {
          "type" : "object",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "patternCode" : {
          "type" : "string",
          "title" : "PatternCode",
          "description" : "PatternCode",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        }
      }
    },
    "HOPSwimmingPool" : {
      "type" : "object",
      "properties" : {
        "additionalInformation" : {
          "type" : "string",
          "title" : "AdditionalInformation",
          "description" : "AdditionalInformation",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "approvedFence" : {
          "type" : "boolean",
          "title" : "ApprovedFence",
          "description" : "ApprovedFence",
          "x-gw-nullable" : true
        },
        "divingBoard" : {
          "type" : "boolean",
          "title" : "DivingBoard",
          "description" : "DivingBoard",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string"
        },
        "poolType" : {
          "type" : "object",
          "title" : "PoolType",
          "description" : "PoolType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "HOPSwimmingPoolType"
          }
        },
        "slide" : {
          "type" : "boolean",
          "title" : "Slide",
          "description" : "Slide",
          "x-gw-nullable" : true
        }
      }
    },
    "IMAccountsRecPart" : {
      "type" : "object",
      "properties" : {
        "businessClass" : {
          "type" : "object",
          "title" : "BusinessClass",
          "description" : "BusinessClass",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BusinessClass"
          }
        },
        "coinsurance" : {
          "type" : "object",
          "title" : "Coinsurance",
          "description" : "Coinsurance",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Coinsurance"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "id" : {
          "type" : "string"
        },
        "reporting" : {
          "type" : "boolean",
          "title" : "Reporting",
          "description" : "Reporting",
          "x-gw-nullable" : true
        }
      }
    },
    "IMAccountsReceivable" : {
      "type" : "object",
      "properties" : {
        "accountsRecNumber" : {
          "type" : "integer",
          "title" : "AccountsRecNumber",
          "description" : "AccountsRecNumber"
        },
        "building" : {
          "type" : "object",
          "title" : "Building",
          "description" : "Building",
          "$ref" : "#/definitions/IMBuilding"
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "forwardToHomeOffice" : {
          "type" : "boolean",
          "title" : "ForwardToHomeOffice",
          "description" : "ForwardToHomeOffice",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string"
        },
        "percentDuplicated" : {
          "type" : "object",
          "title" : "PercentDuplicated",
          "description" : "PercentDuplicated",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PercentDuplicated"
          }
        },
        "receptacleType" : {
          "type" : "object",
          "title" : "ReceptacleType",
          "description" : "ReceptacleType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "ReceptacleType"
          }
        }
      }
    },
    "IMBuilding" : {
      "type" : "object",
      "properties" : {
        "alarmCertificate" : {
          "type" : "string",
          "title" : "AlarmCertificate",
          "description" : "AlarmCertificate",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "alarmCertification" : {
          "type" : "object",
          "title" : "AlarmCertification",
          "description" : "AlarmCertification",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AlarmCertification"
          }
        },
        "alarmExpiration" : {
          "type" : "string",
          "title" : "AlarmExpiration",
          "description" : "AlarmExpiration",
          "format" : "date"
        },
        "alarmGrade" : {
          "type" : "object",
          "title" : "AlarmGrade",
          "description" : "AlarmGrade",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AlarmGrade"
          }
        },
        "areaLeased" : {
          "type" : "object",
          "title" : "AreaLeased",
          "description" : "AreaLeased",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AreaLeased"
          }
        },
        "buildingAlarmType" : {
          "type" : "object",
          "title" : "BuildingAlarmType",
          "description" : "BuildingAlarmType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BuildingAlarmType"
          }
        },
        "buildingImprovements" : {
          "type" : "array",
          "title" : "BuildingImprovements",
          "description" : "BuildingImprovements",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BuildingImprovement"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "buildingNum" : {
          "type" : "integer",
          "title" : "BuildingNum",
          "description" : "BuildingNum"
        },
        "buildingSides" : {
          "type" : "array",
          "title" : "BuildingSides",
          "description" : "BuildingSides",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BuildingSide"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "constructionType" : {
          "type" : "object",
          "title" : "ConstructionType",
          "description" : "ConstructionType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "ConstructionType"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        },
        "interestType" : {
          "type" : "object",
          "title" : "InterestType",
          "description" : "InterestType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "InterestType"
          }
        },
        "numBasements" : {
          "type" : "integer",
          "title" : "NumBasements",
          "description" : "NumBasements",
          "minimum" : 0
        },
        "numStories" : {
          "type" : "integer",
          "title" : "NumStories",
          "description" : "NumStories",
          "minimum" : 0
        },
        "percentOccupied" : {
          "type" : "object",
          "title" : "PercentOccupied",
          "description" : "PercentOccupied",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PercentOccupied"
          }
        },
        "policyLocation" : {
          "type" : "object",
          "title" : "PolicyLocation",
          "description" : "PolicyLocation",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "PolicyLocation"
          }
        },
        "sprinklerCoverage" : {
          "type" : "object",
          "title" : "SprinklerCoverage",
          "description" : "SprinklerCoverage",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Sprinklered"
          }
        },
        "totalArea" : {
          "type" : "integer",
          "title" : "TotalArea",
          "description" : "TotalArea",
          "minimum" : 0
        },
        "yearBuilt" : {
          "type" : "integer",
          "title" : "YearBuilt",
          "description" : "YearBuilt"
        }
      }
    },
    "IMExcludedAccount" : {
      "type" : "object",
      "properties" : {
        "accountNumber" : {
          "type" : "string",
          "title" : "AccountNumber",
          "description" : "AccountNumber",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "IMLine" : {
      "type" : "object",
      "properties" : {
        "numAddInsured" : {
          "type" : "integer",
          "title" : "NumAddInsured",
          "description" : "NumAddInsured",
          "x-gw-nullable" : true
        },
        "pattern" : {
          "type" : "object",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "patternCode" : {
          "type" : "string",
          "title" : "PatternCode",
          "description" : "PatternCode",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        }
      }
    },
    "IMLocation" : {
      "type" : "object",
      "x-gw-extensions" : {
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "addressLine1Kanji" : {
          "type" : "string",
          "title" : "Address line 1 kanji",
          "description" : "The kanji version of the first line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "cityKanji" : {
          "type" : "string",
          "title" : "City kanji",
          "description" : "The kanji version of the city of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "CEDEX" : {
          "type" : "string",
          "title" : "CEDEX",
          "description" : "The CEDEX bureau of the location's address. Only applicable in certain countries.",
          "maxLength" : 2,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the location's address",
          "x-gw-nullable" : true
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the location represented by this element, including all standard fields for the address's country",
          "readOnly" : true
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "accountLocation" : {
          "type" : "object",
          "title" : "Account location",
          "description" : "The `AccountLocation` that this element is linked to. Changes to most fields on this element will also affect the linked `AccountLocation`.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "resourceType" : "AccountLocation"
          }
        },
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the location's address",
          "x-gw-nullable" : true
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the location's address",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "typelist" : "AddressType"
          }
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "addressLine2Kanji" : {
          "type" : "string",
          "title" : "Address line 2 kanji",
          "description" : "The kanji version of the second line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "locationNum" : {
          "type" : "integer",
          "title" : "Location number",
          "description" : "The number automatically assigned to this location",
          "readOnly" : true
        }
      }
    },
    "IMSchEquipAddlInterest" : {
      "type" : "object",
      "properties" : {
        "additionalInterestType" : {
          "type" : "object",
          "title" : "AdditionalInterestType",
          "description" : "AdditionalInterestType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AdditionalInterestType"
          }
        },
        "certRequired" : {
          "type" : "boolean",
          "title" : "CertRequired",
          "description" : "CertRequired",
          "x-gw-nullable" : true
        },
        "contractNumber" : {
          "type" : "string",
          "title" : "ContractNumber",
          "description" : "ContractNumber",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        },
        "policyAddlInterest" : {
          "type" : "object",
          "title" : "PolicyAddlInterest",
          "description" : "PolicyAddlInterest",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        }
      }
    },
    "IMSign" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "id" : {
          "type" : "string"
        },
        "interior" : {
          "type" : "boolean",
          "title" : "Interior",
          "description" : "Interior",
          "x-gw-nullable" : true
        },
        "location" : {
          "type" : "object",
          "title" : "Location",
          "description" : "Location",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "IMLocation"
          }
        },
        "signNumber" : {
          "type" : "integer",
          "title" : "SignNumber",
          "description" : "SignNumber"
        },
        "signType" : {
          "type" : "object",
          "title" : "SignType",
          "description" : "SignType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "SignType"
          }
        }
      }
    },
    "IMSignPart" : {
      "type" : "object",
      "properties" : {
        "coinsurance" : {
          "type" : "object",
          "title" : "Coinsurance",
          "description" : "Coinsurance",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Coinsurance"
          }
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "InclusionPerson" : {
      "type" : "object",
      "properties" : {
        "duties" : {
          "type" : "string",
          "title" : "Duties",
          "description" : "Duties",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "firstName" : {
          "type" : "string",
          "title" : "FirstName",
          "description" : "FirstName",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "id" : {
          "type" : "string"
        },
        "inclusion" : {
          "type" : "object",
          "title" : "Inclusion",
          "description" : "Inclusion",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Inclusion"
          }
        },
        "lastName" : {
          "type" : "string",
          "title" : "LastName",
          "description" : "LastName",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "relationship" : {
          "type" : "object",
          "title" : "Relationship",
          "description" : "Relationship",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Relationship"
          }
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "State",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        }
      }
    },
    "Job" : {
      "type" : "object",
      "title" : "Job",
      "description" : "A `Job` represents a policy transaction that creates or alters an insurance policy. Each specific type of job is represented by a different `jobType` that represents the specific type of transaction, such as a `Submission` to create a new policy or a `Renewal` to renew the policy.",
      "properties" : {
        "organizationOfService" : {
          "type" : "object",
          "title" : "Organization",
          "description" : "A reference to the `Organization` that this policy's producer of service belongs to (Since 1.4.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "resourceType" : "Organization"
          }
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The number assigned to this policy",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "renewalNotificationDate" : {
          "type" : "string",
          "title" : "Renewal notification date",
          "description" : "The date and time when a renewal notification was sent. Only applicable to `Renewal` jobs. (Since 1.1.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true
        },
        "sourcePolicy" : {
          "type" : "object",
          "title" : "Source policy",
          "description" : "A reference to the original `Policy` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "rejectReason" : {
          "type" : "object",
          "title" : "Reject reason",
          "description" : "The reason that this submission was declined or not taken. Only applicable to `Submission` jobs.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ReasonCode"
          }
        },
        "rewriteType" : {
          "type" : "object",
          "title" : "Rewrite type",
          "description" : "The way in which the policy should be rewritten, such as generating a new policy term versus rewriting the remainder of the existing term. Only applicable to `Cancellation` jobs.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "RewriteType"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "periodEnd" : {
          "type" : "string",
          "title" : "Period end",
          "description" : "The end date and time for this policy term",
          "format" : "date-time",
          "readOnly" : true
        },
        "jobEffectiveDate" : {
          "type" : "string",
          "title" : "Job effective date",
          "description" : "The date and time when this job will become effective. The exact meaning depends upon the `jobType` of this job. For example, for a `Submission` job, this will be the start date for the new policy, while for a `Cancellation` job this will be the date the policy is cancelled.",
          "format" : "date-time",
          "readOnly" : true
        },
        "renewalCode" : {
          "type" : "object",
          "title" : "Renewal code",
          "description" : "The reason why this policy is being renewed. Only applicable to `Renewal` jobs.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "RenewalCode"
          }
        },
        "additionalNamedInsureds" : {
          "type" : "array",
          "title" : "Additional named insureds",
          "description" : "The list of additional named insureds on the policy (Since 1.4.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AdditionalNamedInsured"
          },
          "x-gw-sinceVersion" : "1.4.0",
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "preferredCoverageCurrency" : {
          "type" : "object",
          "title" : "Preferred coverage currency",
          "description" : "The preferred currency used for defining coverages on policies for this policy term. Only editable if the application is configured to support multiple currencies. Changing the coverage currency will reset any rating override values previously set. (Since 1.3.0)",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-extensions" : {
            "typelist" : "Currency"
          }
        },
        "uwCompany" : {
          "type" : "object",
          "title" : "Underwriting company",
          "description" : "A reference to the `UWCompany` that issues this policy (Since 1.3.0)",
          "$ref" : "#/definitions/UWCompanyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-extensions" : {
            "securityLevel" : "special"
          }
        },
        "changePolicyNumber" : {
          "type" : "boolean",
          "title" : "Change policy number",
          "description" : "A `true` value for this field indicates that a new policy number will be generated when the policy is rewritten. Only applicable to `Rewrite` jobs.",
          "readOnly" : true
        },
        "periodStart" : {
          "type" : "string",
          "title" : "Period start",
          "description" : "The start date and time for this policy term",
          "format" : "date-time",
          "readOnly" : true
        },
        "jobNumber" : {
          "type" : "string",
          "title" : "Job number",
          "description" : "A number assigned automatically to this job",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "totalCost" : {
          "type" : "object",
          "title" : "Total cost",
          "description" : "The sum of all costs for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "dateQuoteNeeded" : {
          "type" : "string",
          "title" : "Date quote needed",
          "description" : "The date that a quote for this submission is needed by. Only applicable to `Submission` jobs.",
          "format" : "date",
          "x-gw-nullable" : true
        },
        "jobStatus" : {
          "type" : "object",
          "title" : "Job status",
          "description" : "The current status of this job",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "PolicyPeriodStatus"
          }
        },
        "primaryInsured" : {
          "type" : "object",
          "title" : "Primary insured",
          "description" : "The primary insured party for this policy",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        },
        "termType" : {
          "type" : "object",
          "title" : "Term type",
          "description" : "The type of policy term",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "TermType"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "An extended description of this job. Can be used to describe the reason why this job was created.",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "producerCode" : {
          "type" : "object",
          "title" : "Producer code",
          "description" : "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of record for this policy. The producer of record is the producer who initially created this policy term and receives commissions for it.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "ProducerCode"
          }
        },
        "quoteType" : {
          "type" : "object",
          "title" : "Quote type",
          "description" : "The type of quote that this `Submission` is requesting. Only applicable to `Submission` jobs.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "QuoteType"
          }
        },
        "rescindNotificationDate" : {
          "type" : "string",
          "title" : "Rescind notification date",
          "description" : "The date and time when a rescind cancellation notification was sent. Only applicable to `Cancellation` jobs. (Since 1.1.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true
        },
        "calculationMethod" : {
          "type" : "object",
          "title" : "Calculation method",
          "description" : "The method used to calculate the refund owed as a result of the cancellation. Only applicable to `Cancellation` jobs.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "CalculationMethod"
          }
        },
        "cancellationReasonCode" : {
          "type" : "object",
          "title" : "Cancellation reason code",
          "description" : "The reason for the cancellation. Only applicable to `Cancellation` jobs.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ReasonCode",
            "filterBy" : [ "cancellationSource" ]
          }
        },
        "baseState" : {
          "type" : "object",
          "title" : "Base state",
          "description" : "The jurisdiction that the policy is based in",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "producerCodeOfService" : {
          "type" : "object",
          "title" : "Producer code of service",
          "description" : "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of service for this policy. The producer of service is the producer managing this policy. (Since 1.4.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "resourceType" : "ProducerCode"
          }
        },
        "rejectReasonText" : {
          "type" : "string",
          "title" : "Reject reason text",
          "description" : "A more detailed explanation of why this submission was declined or not taken. Only applicable to `Submission` jobs.",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 65000
        },
        "primaryLocation" : {
          "type" : "object",
          "title" : "Primary location",
          "description" : "The primary location for this policy (Since 1.2.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-extensions" : {
            "resourceType" : "PolicyLocation"
          }
        },
        "jobType" : {
          "type" : "object",
          "title" : "Job type",
          "description" : "The specific type of this job, such as `Submission` or `PolicyChange`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "Job"
          }
        },
        "policy" : {
          "type" : "object",
          "title" : "Policy",
          "description" : "A reference to the `Policy` that this job creates or modifies",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "nonRenewalNotificationDate" : {
          "type" : "string",
          "title" : "Non-renewal notification date",
          "description" : "The date and time when a non-renewal notification was sent. Only applicable to `Renewal` jobs. (Since 1.1.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true
        },
        "isOOSJob" : {
          "type" : "boolean",
          "title" : "Is an out-of-sequence job",
          "description" : "A `true` value for this field indicates that this job is considered to be out-of-sequence, meaning that there are already bound changes that occur at a later effective date within this term (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "product" : {
          "type" : "object",
          "title" : "Product",
          "description" : "A reference to the `Product` that defines the insurance product for this policy",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "sourceAccount" : {
          "type" : "object",
          "title" : "Source account",
          "description" : "A reference to the original `Account` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "reinstateCode" : {
          "type" : "object",
          "title" : "Reinstate code",
          "description" : "The reason that the policy is being reinstated. Only applicable to `Reinstatement` jobs.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ReinstateCode"
          }
        },
        "totalPremium" : {
          "type" : "object",
          "title" : "Total premium",
          "description" : "The sum of all premium costs for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "editLocked" : {
          "type" : "boolean",
          "title" : "Edit locked",
          "description" : "A `true` value for this field indicates that this `Job` is locked from being edited by users without special permission to override the lock (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true
        },
        "taxesAndSurcharges" : {
          "type" : "object",
          "title" : "Taxes and surcharges",
          "description" : "The sum of all taxes and surcharges for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "closeDate" : {
          "type" : "string",
          "title" : "Close date",
          "description" : "The date and time when this job was closed",
          "format" : "date-time",
          "readOnly" : true
        },
        "nonRenewalCode" : {
          "type" : "object",
          "title" : "Non-renewal code",
          "description" : "The reason why this policy is not being renewed. Only applicable to `Renewal` jobs.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "NonRenewalCode"
          }
        },
        "cancellationSource" : {
          "type" : "object",
          "title" : "Cancellation source",
          "description" : "The party that initiated the cancellation, typically either the insurer or the insured. Only applicable to `Cancellation` jobs.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "CancellationSource"
          }
        },
        "isPreempted" : {
          "type" : "boolean",
          "title" : "Is preempted",
          "description" : "A `true` value for this field indicates that this job has been preempted. A job is considered preempted when another job for the same policy has been bound after this job was created. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true
        },
        "createdDate" : {
          "type" : "string",
          "title" : "Created date",
          "description" : "The date and time that this element was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "selectedVersion" : {
          "type" : "object",
          "title" : "Selected version",
          "description" : "The version that is currently selected for this job",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "resourceType" : "JobVersion"
          }
        },
        "organization" : {
          "type" : "object",
          "title" : "Organization",
          "description" : "A reference to the `Organization` that this policy's producer of record belongs to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Organization"
          }
        },
        "cancelProcessDate" : {
          "type" : "string",
          "title" : "Cancel process date",
          "description" : "The date and time when the cancellation should be processed by an external system. Only applicable to `Cancellation` jobs. (Since 1.1.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true
        },
        "targetAccount" : {
          "type" : "object",
          "title" : "Target account",
          "description" : "A reference to the `Account` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "targetPolicy" : {
          "type" : "object",
          "title" : "Target policy",
          "description" : "A reference to the `Policy` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that the policy belongs to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        }
      }
    },
    "JobComparisonDiffs" : {
      "type" : "object",
      "title" : "Job comparison diffs",
      "description" : "Details of differences between two jobs on the same policy (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "diffTree" : {
          "type" : "object",
          "title" : "Diff tree",
          "description" : "The root of the tree of differences between the two jobs",
          "$ref" : "#/definitions/DiffTreeNode"
        },
        "job1" : {
          "type" : "object",
          "title" : "Job 1",
          "description" : "A reference to the first `Job` that this diff is associated with",
          "$ref" : "#/definitions/JobToCompare"
        },
        "job2" : {
          "type" : "object",
          "title" : "Job 2",
          "description" : "A reference to the second `Job` that this diff is associated with",
          "$ref" : "#/definitions/JobToCompare"
        }
      }
    },
    "JobDiffs" : {
      "type" : "object",
      "title" : "Job diffs",
      "description" : "A list of diff fields representing the set of changes in a job (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "diffs" : {
          "type" : "array",
          "title" : "Diffs",
          "description" : "The list of diff fields",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/FieldDiff"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "job" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the `Job` that this diff is associated with",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Job"
          }
        },
        "jobEffectiveDate" : {
          "type" : "string",
          "title" : "Job effective date",
          "description" : "The date and time when this job becomes effective",
          "format" : "date-time",
          "readOnly" : true
        },
        "jobNumber" : {
          "type" : "string",
          "title" : "Job number",
          "description" : "The `jobNumber` of the job",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "jobType" : {
          "type" : "object",
          "title" : "Job type",
          "description" : "The specific type of this job, such as `Submission` or `PolicyChange`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "Job"
          }
        }
      }
    },
    "JobPreemptionConflicts" : {
      "type" : "object",
      "title" : "Job preemption conflicts",
      "description" : "The job created as a result of handling preemptions and conflicting diff changes, if any, for the job (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "conflicts" : {
          "type" : "object",
          "title" : "Conflicts",
          "description" : "The list of conflicting diffs that could not be applied",
          "$ref" : "#/definitions/JobDiffs"
        },
        "job" : {
          "type" : "object",
          "title" : "Job",
          "description" : "The new job created as a result of handling preemptions",
          "$ref" : "#/definitions/Job"
        }
      }
    },
    "JobReviewDiffs" : {
      "type" : "object",
      "title" : "Job review diffs",
      "description" : "A comparison between the current job and the job that it was based on (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "basedOnJob" : {
          "type" : "object",
          "title" : "Based-on job",
          "description" : "A reference to the `Job` that the current job is based on",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Job"
          }
        },
        "diffTree" : {
          "type" : "object",
          "title" : "Diff tree",
          "description" : "The root of the tree of differences between the current job and the job it is based on",
          "$ref" : "#/definitions/DiffTreeNode"
        }
      }
    },
    "JobRole" : {
      "type" : "object",
      "title" : "Job role",
      "description" : "An assignment of a role on a `Job` to a user",
      "properties" : {
        "group" : {
          "type" : "string",
          "title" : "Group",
          "description" : "The `id` of the `Group` that has been assigned the role"
        },
        "role" : {
          "type" : "object",
          "title" : "Role",
          "description" : "The role that this `JobRole` represents, such as the creator of the job or the assigned underwriter",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UserRole"
          }
        },
        "user" : {
          "type" : "string",
          "title" : "User",
          "description" : "The `id` of the `User` that has been assigned the role"
        }
      }
    },
    "JobRoles" : {
      "type" : "object",
      "title" : "Job roles",
      "description" : "A list of `JobRole` elements",
      "properties" : {
        "roles" : {
          "type" : "array",
          "title" : "Roles",
          "description" : "A list of `JobRole` elements",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/JobRole"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "JobSearchRequestAttributes" : {
      "type" : "object",
      "title" : "Job search request attributes",
      "description" : "Details of the job to search for",
      "required" : [ "jobType" ],
      "properties" : {
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The `country` of the `primaryAddress` on the `primaryInsured` (Since 1.4.0)",
          "x-gw-type" : "typekey.Country",
          "x-gw-sinceVersion" : "1.4.0"
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The `lastName` of the `primaryInsured`"
        },
        "officialId" : {
          "type" : "string",
          "title" : "Official ID",
          "description" : "The `value` of an `OfficialID` on the `primaryInsured`"
        },
        "product" : {
          "type" : "object",
          "title" : "Product",
          "description" : "The `ProductPattern` for the policy",
          "$ref" : "#/definitions/ProductModelReference"
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The `city` of the `primaryAddress` on the `primaryInsured`"
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The `companyName` of the `primaryInsured`"
        },
        "jurisdiction" : {
          "type" : "object",
          "title" : "Jurisdiction",
          "description" : "The `baseState` of the policy",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The `postalCode` of the `primaryAddress` on the `primaryInsured`"
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The `policyNumber` for the policy"
        },
        "producerCode" : {
          "type" : "object",
          "title" : "Producer code",
          "description" : "The `ProducerCode` that is either the producer of service or producer of record for the policy",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The `firstName` of the `primaryInsured`"
        },
        "phone" : {
          "type" : "string",
          "title" : "Phone",
          "description" : "The `workPhone` of the `primaryInsured`"
        },
        "street" : {
          "type" : "string",
          "title" : "Street",
          "description" : "Part of the street address of the `primaryAddress` on the `primaryInsured`"
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The `state` of the `primaryAddress` on the `primaryInsured`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "State"
          }
        },
        "jobType" : {
          "type" : "object",
          "title" : "Job type",
          "description" : "The `jobType` of the job",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Job"
          }
        },
        "jobNumber" : {
          "type" : "string",
          "title" : "Job number",
          "description" : "The `jobNumber` of the job"
        }
      }
    },
    "JobSearchResult" : {
      "type" : "object",
      "title" : "Job search result",
      "description" : "An element returned from a search for `Job` elements",
      "properties" : {
        "jobStatus" : {
          "type" : "string",
          "title" : "Status",
          "description" : "The current status of the job",
          "readOnly" : true
        },
        "product" : {
          "type" : "object",
          "title" : "Product",
          "description" : "A reference to the `Product` that defines the insurance product for this policy",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The assigned number for this policy",
          "readOnly" : true
        },
        "policyAddress" : {
          "type" : "string",
          "title" : "Policy address",
          "description" : "The formatted address of the primary location for this policy",
          "readOnly" : true
        },
        "editEffectiveDate" : {
          "type" : "string",
          "title" : "Edit effective date",
          "description" : "The date and time when the job becomes effective",
          "format" : "date-time",
          "readOnly" : true
        },
        "accountNumber" : {
          "type" : "string",
          "title" : "Account number",
          "description" : "The `accountNumber` on the account for this policy",
          "readOnly" : true
        },
        "jobId" : {
          "type" : "string",
          "title" : "Job ID",
          "description" : "The `id` of the `Job`",
          "readOnly" : true
        },
        "producerOfRecordName" : {
          "type" : "string",
          "title" : "Producer of record name",
          "description" : "The name of the `ProducerCode` assigned as the producer of record for this policy",
          "readOnly" : true
        },
        "producerOfServiceName" : {
          "type" : "string",
          "title" : "Producer of service name",
          "description" : "The name of the `ProducerCode` assigned as the producer of service for this policy",
          "readOnly" : true
        },
        "jobType" : {
          "type" : "string",
          "title" : "Job type",
          "description" : "The type of job, such as `Submission` or `Cancellation`",
          "readOnly" : true
        },
        "insuredName" : {
          "type" : "string",
          "title" : "Insured name",
          "description" : "The name of the primary named insured for this policy",
          "readOnly" : true
        },
        "jobNumber" : {
          "type" : "string",
          "title" : "Job number",
          "description" : "The automatically assigned number for the job",
          "readOnly" : true
        },
        "effectiveDate" : {
          "type" : "string",
          "title" : "Effective date",
          "description" : "The date on which this particular period became effective",
          "format" : "date-time",
          "readOnly" : true
        },
        "expirationDate" : {
          "type" : "string",
          "title" : "Expiration date",
          "description" : "The date on which this particular period ceased being in effect",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "JobToCompare" : {
      "type" : "object",
      "title" : "Job to compare",
      "description" : "A summary of a job used in a diff between two jobs (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "job" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the `Job` that was compared to get differences with another on the same policy",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Job"
          }
        },
        "jobEffectiveDate" : {
          "type" : "string",
          "title" : "Job effective date",
          "description" : "The date and time when the compared job becomes effective",
          "format" : "date-time",
          "readOnly" : true
        },
        "jobNumber" : {
          "type" : "string",
          "title" : "Job number",
          "description" : "The `jobNumber` of the compared job",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "jobStatus" : {
          "type" : "object",
          "title" : "Job status",
          "description" : "The status of the compared job",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "PolicyPeriodStatus"
          }
        },
        "jobType" : {
          "type" : "object",
          "title" : "Job type",
          "description" : "The specific type of the compared job, such as `Submission` or `PolicyChange`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "Job"
          }
        },
        "totalPremium" : {
          "type" : "object",
          "title" : "Total premium",
          "description" : "The sum of all premium costs for the compared job",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount"
        }
      }
    },
    "JobVersion" : {
      "type" : "object",
      "title" : "Job version",
      "description" : "A `JobVersion` represents a version of a job. Some job types support having multiple versions, one of which can be selected. Different versions of the same job can have different contents.",
      "properties" : {
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "A human-readable name for this version",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "number" : {
          "type" : "integer",
          "title" : "Number",
          "description" : "The automatically assigned number of this version",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "selected" : {
          "type" : "boolean",
          "title" : "Selected",
          "description" : "A `true` value for this field indicates that this is the version that is currently selected for the job",
          "readOnly" : true
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The current status of this version",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "PolicyPeriodStatus"
          }
        }
      }
    },
    "policyperiod_LinkObject" : {
      "type" : "object",
      "title" : "Linked object",
      "description" : "A standard HTTP link",
      "xml" : {
        "name" : "LinkObject"
      },
      "properties" : {
        "href" : {
          "type" : "string",
          "title" : "HREF",
          "description" : "The URL of the link"
        },
        "methods" : {
          "type" : "array",
          "title" : "Methods",
          "description" : "An array of HTTP method names that can be used with the link URL",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "policyperiod_Links" : {
      "type" : "object",
      "title" : "Links",
      "description" : "A set of named links",
      "xml" : {
        "name" : "Links"
      },
      "additionalProperties" : {
        "type" : "object",
        "title" : "Links",
        "description" : "A set of named links. Each key represents the name of the link, such as a child of the current element, an action that can be taken on it, or a navigation option.",
        "$ref" : "#/definitions/policyperiod_LinkObject"
      }
    },
    "policyperiod_MetaObject" : {
      "type" : "object",
      "title" : "Meta object",
      "description" : "An element",
      "xml" : {
        "name" : "MetaObject"
      },
      "properties" : {
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "The checksum of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "The set of links related to the element",
          "$ref" : "#/definitions/policyperiod_Links"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "related" : {
          "type" : "object",
          "title" : "Related collections",
          "description" : "The set of related collections included with the element",
          "$ref" : "#/definitions/policyperiod_RelatedCollections"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of element"
        }
      }
    },
    "Modifier" : {
      "type" : "object",
      "title" : "Modifier",
      "description" : "A `Modifier` captures information relevant to the pricing of a policy that is not necessarily tied to a specific coverage or covered risk",
      "properties" : {
        "valueFinal" : {
          "type" : "boolean",
          "title" : "Value final",
          "description" : "A `true` value for this field indicates that the value of this modifier is final"
        },
        "splits" : {
          "type" : "object",
          "title" : "Splits",
          "description" : "The values of this modifier for each of the relevant periods of time. Only applicable if this modifier has been split.",
          "$ref" : "#/definitions/ModifierSplitsMap"
        },
        "rateModifier" : {
          "type" : "string",
          "title" : "Rate modifier",
          "description" : "The decimal value of this modifier. Only applicable if this modifier has a `modifierType` of `rate`. Can only be set directly if this modifier does not have rate factors, otherwise this value will be calculated based on the rate factors.",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "pattern" : {
          "type" : "object",
          "title" : "Pattern",
          "description" : "A reference to the `ModifierPattern` that created this `Modifier`",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "rateFactors" : {
          "type" : "object",
          "title" : "Rate factors",
          "description" : "The specific rate factors that will be used to calculate the `rateModifier` value",
          "$ref" : "#/definitions/RateFactorsMap"
        },
        "modifierType" : {
          "type" : "object",
          "title" : "Modifier type",
          "description" : "The type of value that this modifier carries, such as `boolean` or `rate`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ModifierDataType"
          }
        },
        "booleanModifier" : {
          "type" : "boolean",
          "title" : "Boolean modifier",
          "description" : "The Boolean value of this modifier. Only applicable if this modifier has a `modifierType` of `boolean`.",
          "x-gw-nullable" : true
        },
        "eligible" : {
          "type" : "boolean",
          "title" : "Eligible",
          "description" : "A `true` value for this field indicates that the policy is eligible for this modifier"
        },
        "dateModifier" : {
          "type" : "string",
          "title" : "Date modifier",
          "description" : "The date-time value of this modifier. Only applicable if this modifier has a `modifierType` of `date`.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "typeKeyModifier" : {
          "type" : "object",
          "title" : "Typekey modifier",
          "description" : "The enumerated `TypeKey` value for this modifier. Only applicable if this modifier has a `modifierType` of `typekey`.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "justification" : {
          "type" : "string",
          "title" : "Justification",
          "description" : "Additional comments that justify the value of this modifier",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The jurisdiction where this modifier is to be applied",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "referenceDate" : {
          "type" : "string",
          "title" : "Reference date",
          "description" : "The reference date and time used to determine if this particular modifier is available",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "ModifierSplit" : {
      "type" : "object",
      "title" : "Modifier split",
      "description" : "The values of a `Modifier` for a particular span of time",
      "properties" : {
        "rateModifier" : {
          "type" : "string",
          "title" : "Rate modifier",
          "description" : "The decimal value of this modifier. Only applicable if this modifier has a `modifierType` of `rate`. Can only be set directly if this modifier does not have rate factors, otherwise this value will be calculated based on the rate factors.",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "booleanModifier" : {
          "type" : "boolean",
          "title" : "Boolean modifier",
          "description" : "The Boolean value of this modifier. Only applicable if this modifier has a `modifierType` of `boolean`.",
          "x-gw-nullable" : true
        },
        "endDate" : {
          "type" : "string",
          "title" : "End date",
          "description" : "The date and time that marks the end of the period of time that this split covers",
          "format" : "date-time",
          "readOnly" : true
        },
        "dateModifier" : {
          "type" : "string",
          "title" : "Date modifier",
          "description" : "The date-time value of this modifier. Only applicable if this modifier has a `modifierType` of `date`.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "typeKeyModifier" : {
          "type" : "object",
          "title" : "Typekey modifier",
          "description" : "The enumerated `TypeKey` value for this modifier. Only applicable if this modifier has a `modifierType` of `typekey`.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true
        },
        "rateFactors" : {
          "type" : "object",
          "title" : "Rate factors",
          "description" : "The specific rate factors that will be used to calculate the `rateModifier` value",
          "$ref" : "#/definitions/RateFactorsMap"
        },
        "startDate" : {
          "type" : "string",
          "title" : "Start date",
          "description" : "The date and time that marks the beginning of the period of time that this split covers",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "ModifierSplitFields" : {
      "type" : "object",
      "properties" : {
        "booleanModifier" : {
          "type" : "boolean",
          "title" : "Boolean modifier",
          "description" : "The Boolean value of this modifier. Only applicable if this modifier has a `modifierType` of `boolean`.",
          "x-gw-nullable" : true
        },
        "dateModifier" : {
          "type" : "string",
          "title" : "Date modifier",
          "description" : "The date-time value of this modifier. Only applicable if this modifier has a `modifierType` of `date`.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "rateFactors" : {
          "type" : "object",
          "title" : "Rate factors",
          "description" : "The specific rate factors that will be used to calculate the `rateModifier` value",
          "$ref" : "#/definitions/RateFactorsMap"
        },
        "rateModifier" : {
          "type" : "string",
          "title" : "Rate modifier",
          "description" : "The decimal value of this modifier. Only applicable if this modifier has a `modifierType` of `rate`. Can only be set directly if this modifier does not have rate factors, otherwise this value will be calculated based on the rate factors.",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "typeKeyModifier" : {
          "type" : "object",
          "title" : "Typekey modifier",
          "description" : "The enumerated `TypeKey` value for this modifier. Only applicable if this modifier has a `modifierType` of `typekey`.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true
        }
      }
    },
    "ModifierSplitsMap" : {
      "type" : "object",
      "title" : "Modifier splits",
      "description" : "The values of a `Modifier` for each of the relevant periods of time",
      "additionalProperties" : {
        "type" : "object",
        "title" : "Splits",
        "description" : "The values of the `Modifier` for a single period of time. Each key in this object represents a span of time within the policy term.",
        "$ref" : "#/definitions/ModifierSplit"
      }
    },
    "policyperiod_MonetaryAmount" : {
      "type" : "object",
      "title" : "Monetary amount",
      "description" : "A monetary amount that combines a decimal amount with a currency",
      "xml" : {
        "name" : "MonetaryAmount"
      },
      "required" : [ "amount", "currency" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "title" : "Amount",
          "description" : "The decimal amount",
          "format" : "gw-bigdecimal"
        },
        "currency" : {
          "type" : "string",
          "title" : "Currency",
          "description" : "The currency for the amount",
          "x-gw-type" : "typekey.Currency"
        }
      }
    },
    "NonRenewalExplanation" : {
      "type" : "object",
      "title" : "Non-renewal explanation",
      "description" : "An explanation for a non-renewal directon on a policy (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "required" : [ "body", "code" ],
      "properties" : {
        "body" : {
          "type" : "string",
          "title" : "Body",
          "description" : "The explanation for the non-renewal",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 65000
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code of the non-renewal explanation pattern",
          "minLength" : 1,
          "maxLength" : 60,
          "pattern" : "\\S"
        }
      }
    },
    "NotTakeAttributes" : {
      "type" : "object",
      "title" : "Not take attributes",
      "description" : "Details of the decision to not take the submission",
      "required" : [ "rejectReason" ],
      "properties" : {
        "rejectReason" : {
          "type" : "object",
          "title" : "Reject reason",
          "description" : "The reason for not taking the submission",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ReasonCode"
          }
        },
        "rejectReasonText" : {
          "type" : "string",
          "title" : "Reject reason text",
          "description" : "A more detailed explanation for why the submission is not being taken",
          "x-gw-nullable" : true
        }
      }
    },
    "policyperiod_Note" : {
      "type" : "object",
      "title" : "Note",
      "description" : "A `Note` is used to capture any sort of additional text that needs to be associated with another business object. A `Note` consists of a `body` that contains the actual text of the note, along with other fields the represent additional metadata about the note.",
      "xml" : {
        "name" : "Note"
      },
      "properties" : {
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "author" : {
          "type" : "object",
          "title" : "Author",
          "description" : "The `User` who authored this note",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "body" : {
          "type" : "string",
          "title" : "Body",
          "description" : "The text of this note",
          "minLength" : 1,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "requiredForCreate" : true
          },
          "pattern" : "\\S",
          "maxLength" : 65000
        },
        "bodySummary" : {
          "type" : "string",
          "title" : "Body summary",
          "description" : "A shorter summary of this note's `body` field, more suitable for displaying in a list of notes",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "summary" ]
          }
        },
        "confidential" : {
          "type" : "boolean",
          "title" : "Confidential",
          "description" : "A `true` value for this field indicates that the note contains confidential information"
        },
        "contingency" : {
          "type" : "object",
          "title" : "Contingency",
          "description" : "A reference to the `Contingency` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Contingency"
          }
        },
        "createdDate" : {
          "type" : "string",
          "title" : "Created date",
          "description" : "The date and time that this `Note` was created",
          "format" : "date-time",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "Unique identifier of this `Note`",
          "readOnly" : true
        },
        "job" : {
          "type" : "object",
          "title" : "Job",
          "description" : "A reference to the `Job` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Job"
          }
        },
        "policy" : {
          "type" : "object",
          "title" : "Policy",
          "description" : "A reference to the `Policy` that this note is associated with (Since 1.3.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "securityType" : {
          "type" : "object",
          "title" : "Security type",
          "description" : "The security level that has been assigned to this note",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "NoteSecurityType"
          }
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "The subject of this note",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "topic" : {
          "type" : "object",
          "title" : "Topic",
          "description" : "The topic of this note",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "NoteTopicType"
          }
        },
        "updateTime" : {
          "type" : "string",
          "title" : "Update time",
          "description" : "The date and time when this `Note` was most recently updated",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        }
      }
    },
    "OOSConflict" : {
      "type" : "object",
      "title" : "Out-of-sequence conflict",
      "description" : "An out-of-sequence conflict represents a value that has been changed by the current job in a way that conflicts with a change made in the same policy term at a later effective date (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "conflictValues" : {
          "type" : "array",
          "title" : "Conflict values",
          "description" : "The actual values and effective date that are conflicting",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/OOSConflictValue"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "entity" : {
          "type" : "object",
          "title" : "Entity",
          "description" : "The element that has conflicting values",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        },
        "field" : {
          "type" : "string",
          "title" : "Field",
          "description" : "The field that has conflicting values"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "originalValue" : {
          "type" : "string",
          "title" : "Original value",
          "description" : "The original value of the conflicting field in the policy period that this job was based on"
        },
        "yourValue" : {
          "type" : "string",
          "title" : "Your value",
          "description" : "The current value of the conflicting field in this job"
        }
      }
    },
    "OOSConflictOverride" : {
      "type" : "object",
      "title" : "Out-of-sequence conflict override",
      "description" : "The requested resolution of an out-of-sequence conflict (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "required" : [ "id", "resolution" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The `id` of the `OOSConflict` that this resolution applies to"
        },
        "resolution" : {
          "type" : "string",
          "title" : "Resolution",
          "description" : "How the conflict should be resolved. `acceptYours` will take the current value from this job and use it to override the conflicting values at future effective dates. `discardYours` will retain the conflicting values at future effective dates.",
          "enum" : [ "acceptYours", "discardYours" ]
        }
      }
    },
    "OOSConflictValue" : {
      "type" : "object",
      "title" : "Out-of-sequence conflict value",
      "description" : "The value and effective date of a single out-of-sequence conflict (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "displayValue" : {
          "type" : "string",
          "title" : "Display value",
          "description" : "The human-readable, formatted value on the conflicting date"
        },
        "effectiveDate" : {
          "type" : "string",
          "title" : "Effective date",
          "description" : "The effective date of the conflicting value",
          "format" : "date-time"
        }
      }
    },
    "OOSConflicts" : {
      "type" : "object",
      "title" : "Out-of-sequence conflicts",
      "description" : "A list of out-of-sequence conflicts (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "conflicts" : {
          "type" : "array",
          "title" : "Conflicts",
          "description" : "The list of out-of-sequence conflicts",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/OOSConflict"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "policyperiod_OfficialID" : {
      "type" : "object",
      "title" : "Official ID",
      "description" : "An `OfficialID` represents a pairing of a particular jurisdiction with some form of official identifier applicable to that jurisdiction, such as a driver's license number or state tax ID number",
      "xml" : {
        "name" : "OfficialID"
      },
      "x-gw-extensions" : {
        "discriminatorProperty" : "officialIDSubtype"
      },
      "properties" : {
        "officialIDSubtype" : {
          "type" : "object",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-nullable" : true
        },
        "officialIDType" : {
          "type" : "object",
          "title" : "Official ID type",
          "description" : "The type of identifier, such as `BureauID`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "OfficialIDType"
          }
        },
        "officialIDValue" : {
          "type" : "string",
          "title" : "Official ID value",
          "description" : "The actual identifier value",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "patternCode" : {
          "type" : "string",
          "readOnly" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "PCOfficialID",
            "validateSubtype" : false
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The jurisdiction that this identifier applies to",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        }
      }
    },
    "policyperiod_OfficialIDMap" : {
      "type" : "object",
      "title" : "Official ID map",
      "description" : "A map of `OfficialID` values for various jurisdictions and types of identifier. The keys in the map will be of the form `<code>-<state>` or `<code>-ALL` for values that do not have an assigned `state`.",
      "xml" : {
        "name" : "OfficialIDMap"
      },
      "additionalProperties" : {
        "type" : "object",
        "title" : "IDs",
        "description" : "The identifier values. The property keys will be of the form `<code>-<state>` or `<code>-ALL` for values that do not have an assigned `state`.",
        "$ref" : "#/definitions/policyperiod_OfficialID"
      }
    },
    "OverrideCostAttributes" : {
      "type" : "object",
      "title" : "Override cost attributes",
      "description" : "Override values for a single cost. Only one of the `overrideAdjustedRate`, `overrideAmountBilling`, `overrideBaseRate`, or `overrideTermAmountBilling` fields should be sent. (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "required" : [ "costId" ],
      "properties" : {
        "costId" : {
          "type" : "string",
          "title" : "Cost ID",
          "description" : "The `id` of the `Cost` being overridden"
        },
        "overrideAdjustedRate" : {
          "type" : "string",
          "title" : "Override adjusted rate",
          "description" : "An override of the `adjustedRate` on the cost, which will then be used to calculate the `termAmount` and `amount`",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "overrideAmount" : {
          "type" : "object",
          "title" : "(Deprecated) Override amount",
          "description" : "An override of the `amount` on the cost (Deprecated as of 1.4.0 - Convert to the settlement currency and use the `overrideAmountBilling` field instead to override the `amount` on the cost)",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-deprecatedVersion" : "1.4.0",
          "x-gw-deprecatedReason" : "Convert to the settlement currency and use the `overrideAmountBilling` field instead to override the `amount` on the cost",
          "x-gw-nullable" : true
        },
        "overrideAmountBilling" : {
          "type" : "object",
          "title" : "Override amount billing",
          "description" : "An override of the `amount` on the cost, converted to the settlement currency",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-nullable" : true
        },
        "overrideBaseRate" : {
          "type" : "string",
          "title" : "Override base rate",
          "description" : "An override of the `baseRate` on the cost, which will then be used to calculate the `adjustedRate`, `termAmount` and `amount`",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "overrideReason" : {
          "type" : "string",
          "title" : "Override reason",
          "description" : "The reason for the override"
        },
        "overrideTermAmount" : {
          "type" : "object",
          "title" : "(Deprecated) Override term amount",
          "description" : "An override of the `termAmount` on the cost (Deprecated as of 1.4.0 - Convert to the settlement currency and use the `overrideTermAmountBilling` field instead to override the `termAmount` on the cost)",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-deprecatedVersion" : "1.4.0",
          "x-gw-deprecatedReason" : "Convert to the settlement currency and use the `overrideTermAmountBilling` field instead to override the `termAmount` on the cost",
          "x-gw-nullable" : true
        },
        "overrideTermAmountBilling" : {
          "type" : "object",
          "title" : "Override term amount billing",
          "description" : "An override of the `termAmount` on the cost, converted to the settlement currency",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-nullable" : true
        }
      }
    },
    "OverrideCostsResponseAttributes" : {
      "type" : "object",
      "title" : "Override costs response attributes",
      "description" : "The values returned as the response to a request to override rating on a job (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "costs" : {
          "type" : "array",
          "title" : "Costs",
          "description" : "The new list of costs for the job. These costs will reflect the overridden values if `successfulRerate` is `true`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Cost"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "jobStatus" : {
          "type" : "object",
          "title" : "Job status",
          "description" : "The new status of the job following the attempt to rerate it",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "PolicyPeriodStatus"
          }
        },
        "rerateError" : {
          "type" : "object",
          "title" : "Rerate error",
          "description" : "If rerating was unsuccessful, this field will contain the error that happened during rerating"
        },
        "successfulRerate" : {
          "type" : "boolean",
          "title" : "Successful rerate",
          "description" : "A `true` value indicates that rerating was successful and that the `costs`, `taxesAndSurcharges`, and `totalPremium` fields reflect the applied overrides. If this field is not `true` the `rerateError` field will indicate what failed."
        },
        "taxesAndSurcharges" : {
          "type" : "object",
          "title" : "Taxes and surcharges",
          "description" : "The sum of all taxes and surcharges on the job. If `successfulRerate` is `true`, this value will represent the result of applying the cost overrides.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount"
        },
        "totalCost" : {
          "type" : "object",
          "title" : "Total cost",
          "description" : "The sum of all costs for the job. If `successfulRerate` is `true`, this value will represent the result of applying the cost overrides.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount"
        },
        "totalPremium" : {
          "type" : "object",
          "title" : "Total premium",
          "description" : "The sum of all premium costs for the job. If `successfulRerate` is `true`, this value will represent the result of applying the cost overrides.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount"
        }
      }
    },
    "PAVhcleAddlInterest" : {
      "type" : "object",
      "properties" : {
        "additionalInterestType" : {
          "type" : "object",
          "title" : "AdditionalInterestType",
          "description" : "AdditionalInterestType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AdditionalInterestType"
          }
        },
        "certRequired" : {
          "type" : "boolean",
          "title" : "CertRequired",
          "description" : "CertRequired",
          "x-gw-nullable" : true
        },
        "contractNumber" : {
          "type" : "string",
          "title" : "ContractNumber",
          "description" : "ContractNumber",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        },
        "policyAddlInterest" : {
          "type" : "object",
          "title" : "PolicyAddlInterest",
          "description" : "PolicyAddlInterest",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        }
      }
    },
    "PMADriver" : {
      "type" : "object",
      "title" : "Driver",
      "description" : "A driver of the vehicle",
      "properties" : {
        "driverDetails" : {
          "type" : "object",
          "title" : "Driver Details",
          "description" : "Driver Details",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        },
        "hadClaimDenied" : {
          "type" : "boolean",
          "title" : "Has the driver ever had a claim denied (for all policies ever held)?",
          "description" : "Has the driver ever had a claim denied (for all policies ever held)?",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "isMainDriver" : {
          "type" : "boolean",
          "title" : "Is this the main driver?",
          "description" : "Is this the main driver?",
          "x-gw-nullable" : true
        },
        "licenseSuspendCancelDisqualify" : {
          "type" : "boolean",
          "title" : "In the last three years, has the driver had any licence suspensions, cancellations or disqualifications?",
          "description" : "In the last three years, has the driver had any licence suspensions, cancellations or disqualifications?",
          "x-gw-nullable" : true
        },
        "numberOfAccidents" : {
          "type" : "object",
          "title" : "In the last three years, how many accidents has the driver had?",
          "description" : "In the last three years, how many accidents has the driver had?",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "NumberOfAccidents"
          }
        },
        "numberOfThefts" : {
          "type" : "object",
          "title" : "In the last three years, how many thefts has the driver had (for all policies held)?",
          "description" : "In the last three years, how many thefts has the driver had (for all policies held)?",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "NumberOfAccidents"
          }
        },
        "productEdition" : {
          "type" : "object",
          "title" : "Product edition",
          "description" : "The edition of the product applicable to this element",
          "$ref" : "#/definitions/ProductEditionReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "refusedInsuranceCover" : {
          "type" : "boolean",
          "title" : "In the last three years, has the driver been refused insurance cover?",
          "description" : "In the last three years, has the driver been refused insurance cover?",
          "x-gw-nullable" : true
        }
      }
    },
    "PMAVehicle" : {
      "type" : "object",
      "title" : "Vehicle",
      "description" : "A vehicle covered by the policy",
      "properties" : {
        "annualDrivingDistance" : {
          "type" : "object",
          "title" : "How far do you typically drive each year?",
          "description" : "How far do you typically drive each year?",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PMAAnnualDrivingDistance"
          }
        },
        "bodyShape" : {
          "type" : "object",
          "title" : "Body Shape",
          "description" : "Body Shape",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BodyType"
          }
        },
        "chassisPreJanuary1989" : {
          "type" : "string",
          "title" : "Chassis (pre-January 1989)",
          "description" : "Chassis (pre-January 1989)",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "colour" : {
          "type" : "string",
          "title" : "Colour",
          "description" : "Colour",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "commutingDistance" : {
          "type" : "object",
          "title" : "Commuting distance",
          "description" : "Commuting distance",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PMAAnnualDrivingDistance"
          }
        },
        "compliancePlate" : {
          "type" : "string",
          "title" : "Compliance Plate",
          "description" : "Compliance Plate",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "costNew" : {
          "type" : "string",
          "title" : "Cost New",
          "description" : "Cost New",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "coverableJurisdiction" : {
          "type" : "object",
          "title" : "Coverable jurisdiction",
          "description" : "The jurisdiction of this coverable",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "engineNumber" : {
          "type" : "string",
          "title" : "Engine Number",
          "description" : "Engine Number",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "garageLocation" : {
          "type" : "object",
          "title" : "Garage Location",
          "description" : "Garage Location",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyLocation"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "isUsedForCommuting" : {
          "type" : "boolean",
          "title" : "Is the vehicle used for commuting?",
          "description" : "Is the vehicle used for commuting?",
          "x-gw-nullable" : true
        },
        "isUsedForRideshare" : {
          "type" : "boolean",
          "title" : "Is the vehicle used for rideshare?",
          "description" : "Is the vehicle used for rideshare?",
          "x-gw-nullable" : true
        },
        "leasedOrRented" : {
          "type" : "boolean",
          "title" : "Is the vehicle leased or rented?",
          "description" : "Is the vehicle leased or rented?",
          "x-gw-nullable" : true
        },
        "lengthOfLease" : {
          "type" : "object",
          "title" : "Length of Lease",
          "description" : "Length of Lease",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LengthOfLease"
          }
        },
        "licenseCountry" : {
          "type" : "object",
          "title" : "Registration Country",
          "description" : "Registration Country",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Country"
          }
        },
        "licenseJurisdiction" : {
          "type" : "object",
          "title" : "Registration State",
          "description" : "Registration State",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "licensePlate" : {
          "type" : "string",
          "title" : "Number Plate",
          "description" : "Number Plate",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "make" : {
          "type" : "string",
          "title" : "Make",
          "description" : "Make",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "model" : {
          "type" : "string",
          "title" : "Model",
          "description" : "Model",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "primaryUse" : {
          "type" : "object",
          "title" : "Primary Use",
          "description" : "Primary Use",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "VehiclePrimaryUse"
          }
        },
        "productEdition" : {
          "type" : "object",
          "title" : "Product edition",
          "description" : "The edition of the product applicable to this element",
          "$ref" : "#/definitions/ProductEditionReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "securityLevel" : "internal"
          }
        },
        "rideshareHoursPerWeek" : {
          "type" : "integer",
          "title" : "Rideshare hours per week",
          "description" : "Is the vehicle used for rideshare?",
          "x-gw-nullable" : true
        },
        "sequenceNumber" : {
          "type" : "integer",
          "title" : "SequenceNumber",
          "description" : "SequenceNumber",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "statedValue" : {
          "type" : "string",
          "title" : "Stated Value",
          "description" : "Stated Value",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "tareWeight" : {
          "type" : "string",
          "title" : "Tare Weight",
          "description" : "Tare Weight",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "variant" : {
          "type" : "string",
          "title" : "Variant",
          "description" : "Variant",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "vehicleCoverType" : {
          "type" : "object",
          "title" : "Vehicle Cover Type",
          "description" : "Vehicle Cover Type",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PMAVehicleCoverType"
          }
        },
        "vehicleFirstRegistered" : {
          "type" : "string",
          "title" : "When was the vehicle first registered?",
          "description" : "When was the vehicle first registered?",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "vehicleType" : {
          "type" : "object",
          "title" : "Vehicle Type",
          "description" : "Vehicle Type",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "VehicleType"
          }
        },
        "vin" : {
          "type" : "string",
          "title" : "VIN",
          "description" : "VIN",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "year" : {
          "type" : "integer",
          "title" : "Year",
          "description" : "Year",
          "x-gw-nullable" : true
        }
      }
    },
    "PaymentInfo" : {
      "type" : "object",
      "title" : "Payment info",
      "description" : "Information about how payment will be made for this policy",
      "properties" : {
        "alternateBillingAccount" : {
          "type" : "string",
          "title" : "Alternate billing account",
          "description" : "The number of the alternate billing account",
          "x-gw-nullable" : true
        },
        "billingContact" : {
          "type" : "object",
          "title" : "Billing contact",
          "description" : "The contact to use for billing purposes",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        },
        "billingMethod" : {
          "type" : "object",
          "title" : "Billing method",
          "description" : "The billing method, such as agency billing or direct billing",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BillingMethod"
          }
        },
        "selectedPaymentPlan" : {
          "type" : "object",
          "title" : "Selected payment plan",
          "description" : "Details of the selected payment plan",
          "$ref" : "#/definitions/PaymentPlan",
          "x-gw-nullable" : true
        }
      }
    },
    "PaymentPlan" : {
      "type" : "object",
      "title" : "Payment plan",
      "description" : "A plan for how the policy will be paid for",
      "properties" : {
        "billingId" : {
          "type" : "string",
          "title" : "Billing ID",
          "description" : "The ID of this payment plan within the billing system"
        },
        "downPaymentAmount" : {
          "type" : "object",
          "title" : "Down payment amount",
          "description" : "The amount of the down payment",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "fee" : {
          "type" : "object",
          "title" : "Fee",
          "description" : "The installment fee added to each installment payment. Only applicable to installment payment plans.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "installmentAmount" : {
          "type" : "object",
          "title" : "Installment amount",
          "description" : "The amount of each installment payment. Only applicable to installment payment plans.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "invoicingFrequency" : {
          "type" : "object",
          "title" : "Invoicing frequency",
          "description" : "The frequency of invoicing, such as monthly or quarterly. Only applicable to installment payment plans.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "BillingPeriodicity"
          }
        },
        "notes" : {
          "type" : "string",
          "title" : "Notes",
          "description" : "Additional notes regarding this payment plan",
          "readOnly" : true
        },
        "planName" : {
          "type" : "string",
          "title" : "Plan name",
          "description" : "The name of this payment plan",
          "readOnly" : true
        },
        "reportingPatternCode" : {
          "type" : "string",
          "title" : "Reporting pattern code",
          "description" : "The code of the pattern used to create and schedule premium reports. Only applicable to reporting payment plans."
        },
        "total" : {
          "type" : "object",
          "title" : "Total",
          "description" : "The total of all installment payments, taxes, and fees. Only applicable to installment payment plans.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        }
      }
    },
    "PendingCancelAttributes" : {
      "type" : "object",
      "title" : "Pending cancel attributes",
      "description" : "Details of the pending cancellation (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "required" : [ "processDate" ],
      "properties" : {
        "processDate" : {
          "type" : "string",
          "title" : "Process date",
          "description" : "The date on which the cancellation should take place",
          "format" : "date"
        }
      }
    },
    "PendingNonRenewAttributes" : {
      "type" : "object",
      "title" : "Pending non-renew attributes",
      "description" : "Details of the pending non-renewal (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "required" : [ "nonRenewalCode" ],
      "properties" : {
        "nonRenewalCode" : {
          "type" : "object",
          "title" : "Non-renewal code",
          "description" : "The reason why this policy is not being renewed",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "NonRenewalCode"
          }
        }
      }
    },
    "PendingRenewAttributes" : {
      "type" : "object",
      "title" : "Pending renew attributes",
      "description" : "Details of the pending renewal (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "required" : [ "renewalCode" ],
      "properties" : {
        "renewalCode" : {
          "type" : "object",
          "title" : "Renewal code",
          "description" : "The reason why this policy is being renewed",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "RenewalCode"
          }
        }
      }
    },
    "PersonalAutoLine" : {
      "type" : "object",
      "properties" : {
        "numAddInsured" : {
          "type" : "integer",
          "title" : "NumAddInsured",
          "description" : "NumAddInsured",
          "x-gw-nullable" : true
        },
        "pattern" : {
          "type" : "object",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "patternCode" : {
          "type" : "string",
          "title" : "PatternCode",
          "description" : "PatternCode",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        }
      }
    },
    "PersonalVehicle" : {
      "type" : "object",
      "properties" : {
        "annualMileage" : {
          "type" : "integer",
          "title" : "AnnualMileage",
          "description" : "AnnualMileage",
          "x-gw-nullable" : true
        },
        "basisAmount" : {
          "type" : "integer",
          "title" : "BasisAmount",
          "description" : "BasisAmount",
          "x-gw-nullable" : true
        },
        "bodyType" : {
          "type" : "object",
          "title" : "BodyType",
          "description" : "BodyType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "BodyType",
            "filterBy" : [ "vehicleType" ]
          }
        },
        "color" : {
          "type" : "string",
          "title" : "Color",
          "description" : "Color",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "commutingMiles" : {
          "type" : "integer",
          "title" : "CommutingMiles",
          "description" : "CommutingMiles",
          "x-gw-nullable" : true
        },
        "costNew" : {
          "type" : "object",
          "title" : "CostNew",
          "description" : "CostNew",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-nullable" : true
        },
        "garageLocation" : {
          "type" : "object",
          "title" : "GarageLocation",
          "description" : "GarageLocation",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "PolicyLocation"
          }
        },
        "id" : {
          "type" : "string"
        },
        "leaseOrRent" : {
          "type" : "boolean",
          "title" : "LeaseOrRent",
          "description" : "LeaseOrRent",
          "x-gw-nullable" : true
        },
        "lengthOfLease" : {
          "type" : "object",
          "title" : "LengthOfLease",
          "description" : "LengthOfLease",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LengthOfLease"
          }
        },
        "licensePlate" : {
          "type" : "string",
          "title" : "LicensePlate",
          "description" : "LicensePlate",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "licenseState" : {
          "type" : "object",
          "title" : "LicenseState",
          "description" : "LicenseState",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "State"
          }
        },
        "make" : {
          "type" : "string",
          "title" : "Make",
          "description" : "Make",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "model" : {
          "type" : "string",
          "title" : "Model",
          "description" : "Model",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "modelYear" : {
          "type" : "integer",
          "title" : "ModelYear",
          "description" : "ModelYear",
          "x-gw-nullable" : true
        },
        "pipCovered" : {
          "type" : "object",
          "title" : "PipCovered",
          "description" : "PipCovered",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PipCovered"
          }
        },
        "primaryUse" : {
          "type" : "object",
          "title" : "PrimaryUse",
          "description" : "PrimaryUse",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "VehiclePrimaryUse"
          }
        },
        "quickQuoteNumber" : {
          "type" : "integer",
          "title" : "QuickQuoteNumber",
          "description" : "QuickQuoteNumber",
          "x-gw-nullable" : true
        },
        "statedValue" : {
          "type" : "object",
          "title" : "StatedValue",
          "description" : "StatedValue",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-nullable" : true
        },
        "vehicleNumber" : {
          "type" : "integer",
          "title" : "VehicleNumber",
          "description" : "VehicleNumber",
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "filterable" : true,
            "sortable" : true
          }
        },
        "vehicleType" : {
          "type" : "object",
          "title" : "VehicleType",
          "description" : "VehicleType",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "VehicleType"
          }
        },
        "vin" : {
          "type" : "string",
          "title" : "Vin",
          "description" : "Vin",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        }
      }
    },
    "policyperiod_PhoneNumber" : {
      "type" : "object",
      "title" : "Phone number",
      "description" : "A phone number, with different components of the number broken out as separate fields",
      "xml" : {
        "name" : "PhoneNumber"
      },
      "required" : [ "countryCode", "number" ],
      "properties" : {
        "countryCode" : {
          "type" : "object",
          "title" : "Country code",
          "description" : "The country code for the phone number",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "PhoneCountryCode"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The phone number formatted in a standardized way",
          "readOnly" : true
        },
        "extension" : {
          "type" : "string",
          "title" : "Extension",
          "description" : "The extension for the phone number",
          "x-gw-nullable" : true
        },
        "number" : {
          "type" : "string",
          "title" : "Number",
          "description" : "The actual phone number, including area code, but excluding the country code and extension"
        }
      }
    },
    "Policy" : {
      "type" : "object",
      "title" : "Policy",
      "description" : "An insurance policy",
      "properties" : {
        "organizationOfService" : {
          "type" : "object",
          "title" : "Organization",
          "description" : "A reference to the `Organization` that this policy's producer of service belongs to (Since 1.4.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "resourceType" : "Organization"
          }
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The number assigned to this policy",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "primaryInsured" : {
          "type" : "object",
          "title" : "Primary insured",
          "description" : "The primary insured party for this policy",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        },
        "termType" : {
          "type" : "object",
          "title" : "Term type",
          "description" : "The type of policy term",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "TermType"
          }
        },
        "producerCode" : {
          "type" : "object",
          "title" : "Producer code",
          "description" : "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of record for this policy. The producer of record is the producer who initially created this policy term and receives commissions for it.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "ProducerCode"
          }
        },
        "nonRenewalAdditionalExplanation" : {
          "type" : "string",
          "title" : "Non-renewal reason additional explanation",
          "description" : "An explanation for advising a non-renewal (Since 1.3.0)",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "mostRecentBoundDate" : {
          "type" : "string",
          "title" : "Most recent bound date",
          "description" : "The effective date and time of the most recent bound job for the most recent term on this policy (Since 1.2.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "sourcePolicy" : {
          "type" : "object",
          "title" : "Source policy",
          "description" : "A reference to the original `Policy` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "baseState" : {
          "type" : "object",
          "title" : "Base state",
          "description" : "The jurisdiction that the policy is based in",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "producerCodeOfService" : {
          "type" : "object",
          "title" : "Producer code of service",
          "description" : "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of service for this policy. The producer of service is the producer managing this policy. (Since 1.4.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "resourceType" : "ProducerCode"
          }
        },
        "primaryLocation" : {
          "type" : "object",
          "title" : "Primary location",
          "description" : "The primary location for this policy (Since 1.2.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-extensions" : {
            "resourceType" : "PolicyLocation"
          }
        },
        "nonRenewalReason" : {
          "type" : "string",
          "title" : "Non-renewal reason",
          "description" : "The reason this policy has been marked for non-renewal (Since 1.3.0)",
          "x-gw-type" : "typekey.NonRenewalCode",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "cancellationDate" : {
          "type" : "string",
          "title" : "Cancellation date",
          "description" : "The date and time at which this policy was cancelled (Since 1.2.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true
        },
        "periodEnd" : {
          "type" : "string",
          "title" : "Period end",
          "description" : "The end date and time for this policy term",
          "format" : "date-time",
          "readOnly" : true
        },
        "product" : {
          "type" : "object",
          "title" : "Product",
          "description" : "A reference to the `Product` that defines the insurance product for this policy",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "sourceAccount" : {
          "type" : "object",
          "title" : "Source account",
          "description" : "A reference to the original `Account` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "additionalNamedInsureds" : {
          "type" : "array",
          "title" : "Additional named insureds",
          "description" : "The list of additional named insureds on the policy (Since 1.4.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AdditionalNamedInsured"
          },
          "x-gw-sinceVersion" : "1.4.0",
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "preferredCoverageCurrency" : {
          "type" : "object",
          "title" : "Preferred coverage currency",
          "description" : "The preferred currency used for defining coverages on policies for this policy term. Only editable if the application is configured to support multiple currencies. Changing the coverage currency will reset any rating override values previously set. (Since 1.3.0)",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-extensions" : {
            "typelist" : "Currency"
          }
        },
        "totalPremium" : {
          "type" : "object",
          "title" : "Total premium",
          "description" : "The sum of all premium costs for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "uwCompany" : {
          "type" : "object",
          "title" : "Underwriting company",
          "description" : "A reference to the `UWCompany` that issues this policy (Since 1.3.0)",
          "$ref" : "#/definitions/UWCompanyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-extensions" : {
            "securityLevel" : "special"
          }
        },
        "taxesAndSurcharges" : {
          "type" : "object",
          "title" : "Taxes and surcharges",
          "description" : "The sum of all taxes and surcharges for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "createdDate" : {
          "type" : "string",
          "title" : "Created date",
          "description" : "The date and time that this element was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "preRenewalOwner" : {
          "type" : "object",
          "title" : "Pre-renewal owner",
          "description" : "The user and group that are assigned as the pre-renewal owner for this policy (Since 1.3.0)",
          "$ref" : "#/definitions/policyperiod_Assignee",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true
        },
        "organization" : {
          "type" : "object",
          "title" : "Organization",
          "description" : "A reference to the `Organization` that this policy's producer of record belongs to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Organization"
          }
        },
        "nonRenewalExplanations" : {
          "type" : "array",
          "title" : "Non-renewal reason explanations",
          "description" : "Reasons for advising a non-renewal (Since 1.3.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/NonRenewalExplanation"
          },
          "x-gw-sinceVersion" : "1.3.0",
          "xml" : {
            "wrapped" : true
          }
        },
        "targetAccount" : {
          "type" : "object",
          "title" : "Target account",
          "description" : "A reference to the `Account` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "targetPolicy" : {
          "type" : "object",
          "title" : "Target policy",
          "description" : "A reference to the `Policy` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "preRenewalDirection" : {
          "type" : "string",
          "title" : "Pre-renewal direction",
          "description" : "The recommended action to take on this policy when it comes up for renewal (Since 1.3.0)",
          "x-gw-type" : "typekey.PreRenewalDirection",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true
        },
        "periodStart" : {
          "type" : "string",
          "title" : "Period start",
          "description" : "The start date and time for this policy term",
          "format" : "date-time",
          "readOnly" : true
        },
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that the policy belongs to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "totalCost" : {
          "type" : "object",
          "title" : "Total cost",
          "description" : "The sum of all costs for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        }
      }
    },
    "PolicyContact" : {
      "type" : "object",
      "title" : "Policy contact",
      "description" : "A `PolicyContact` represents a person or company that is referenced on an insurance policy. Each `PolicyContact` is linked to an `AccountContact` on the policy's account.",
      "x-gw-extensions" : {
        "discriminatorProperty" : "contactSubtype"
      },
      "properties" : {
        "accountContact" : {
          "type" : "object",
          "title" : "Account contact",
          "description" : "A reference to the `AccountContact` linked to this `PolicyContact`. Edits to many fields on the `PolicyContact` write through to the linked `AccountContact`. For a bound policy, field values relevant to the policy contract are captured when the policy is bound, and will reflect those values rather than current `AccountContact` values.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "resourceType" : "AccountContact"
          }
        },
        "addressBookUID" : {
          "type" : "string",
          "title" : "Address book UID",
          "description" : "The unique ID of this contact within the contact management system. This field is only set if the contact has been linked to a contact management system.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "applicableGoodDriverDiscount" : {
          "type" : "boolean",
          "title" : "Applicable good driver discount",
          "description" : "A `true` value indicates that the person qualifies for a good driver discount and that discount applies to this policy. Only applicable for a `PolicyContact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "cellPhone" : {
          "type" : "object",
          "title" : "Cell phone",
          "description" : "The person's mobile phone number. Only applicable for a `PolicyContact` that represents a person.",
          "$ref" : "#/definitions/policyperiod_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The name of the company represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a company.",
          "x-gw-extensions" : {
            "entitySubtype" : "Company",
            "validateSubtype" : false
          }
        },
        "companyNameKanji" : {
          "type" : "string",
          "title" : "Company name kanji",
          "description" : "The kanji version of the name of the company represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a company. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        },
        "contactSubtype" : {
          "type" : "string",
          "title" : "Contact subtype",
          "description" : "The specific type of contact represented by this `PolicyContact`, such as `Person` or `Company`",
          "x-gw-type" : "typekey.Contact",
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true
          }
        },
        "dateCompletedTrainingClass" : {
          "type" : "string",
          "title" : "Driver training class completion date",
          "description" : "The date that the person completed a driver training class. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
          "format" : "date",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now",
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "dateOfBirth" : {
          "type" : "string",
          "title" : "Date of birth",
          "description" : "The person's date of birth. Only applicable for a `PolicyContact` that represents a person.",
          "format" : "date",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now",
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "A formatted representation of the full name for this `PolicyContact', including all applicable fields such as `firstName` or `lastName`",
          "readOnly" : true
        },
        "doNotOrderMVR" : {
          "type" : "boolean",
          "title" : "Do not order motor vehicle record",
          "description" : "If set to `true`, indicates that motor vehicle records should not be ordered for this driver. Only applicable for a `PolicyContact` that represents a person. (Since 1.4.0)",
          "x-gw-sinceVersion" : "1.4.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "emailAddress1" : {
          "type" : "string",
          "title" : "E-mail address 1",
          "description" : "The contact's primary e-mail address",
          "x-gw-nullable" : true
        },
        "emailAddress2" : {
          "type" : "string",
          "title" : "E-mail address 2",
          "description" : "The contact's secondary e-mail address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "excludedDriver" : {
          "type" : "boolean",
          "title" : "Excluded driver",
          "description" : "If set to `true`, indicates that this driver is explicitly not covered by this policy. Only applicable for a `PolicyContact` that represents a person. (Since 1.4.0)",
          "x-gw-sinceVersion" : "1.4.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "externalId" : {
          "type" : "string",
          "title" : "External ID",
          "description" : "A unique identifier assigned by the application for use when the `addressBookUID` field is null",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The persons's first name. Only applicable for a `PolicyContact` that represents a person.",
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "firstNameKanji" : {
          "type" : "string",
          "title" : "First name kanji",
          "description" : "The kanji version of the first name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        },
        "goodDriverDiscount" : {
          "type" : "boolean",
          "title" : "Good driver discount",
          "description" : "A `true` value indicates that the person qualifies for a good driver discount. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "homePhone" : {
          "type" : "object",
          "title" : "Home phone",
          "description" : "The person's home phone number. Only applicable for a `PolicyContact` that represents a person.",
          "$ref" : "#/definitions/policyperiod_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "industryCode" : {
          "type" : "object",
          "title" : "Named insured industry code",
          "description" : "The relevant industry code, if this contact represents a named insured on the policy. Only applicable for a named insured that represents a company. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_ReferenceTableEntry",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The person's last name. Only applicable for a `PolicyContact` that represents a person.",
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "lastNameKanji" : {
          "type" : "string",
          "title" : "Last name kanji",
          "description" : "The kanji version of the last name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        },
        "licenseNumber" : {
          "type" : "string",
          "title" : "Driver's license number",
          "description" : "The person's driver's license number. Only applicable for a `PolicyContact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "licenseState" : {
          "type" : "object",
          "title" : "Driver's license state",
          "description" : "The person's driver's license state. Only applicable for a `PolicyContact` that represents a person.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "Jurisdiction",
            "validateSubtype" : false
          }
        },
        "maritalStatus" : {
          "type" : "object",
          "title" : "Marital status",
          "description" : "The person's marital status. Only applicable for a `PolicyContact` that represents a person.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "MaritalStatus",
            "validateSubtype" : false
          }
        },
        "numberOfAccidents" : {
          "type" : "object",
          "title" : "Number of accidents",
          "description" : "The person's number of vehicular accidents, as stored on the linked `AccountContact`. Only applicable for a `PolicyContact` that represents a person.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "NumberOfAccidents",
            "validateSubtype" : false
          }
        },
        "numberOfViolations" : {
          "type" : "object",
          "title" : "Number of violations",
          "description" : "The person's number of driving violations, as stored on the linked `AccountContact`. Only applicable for a `PolicyContact` that represents a person.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "NumberOfAccidents",
            "validateSubtype" : false
          }
        },
        "officialIds" : {
          "type" : "object",
          "title" : "Official IDs",
          "description" : "The contact's official identifiers in various jurisdictions",
          "$ref" : "#/definitions/policyperiod_OfficialIDMap"
        },
        "particle" : {
          "type" : "string",
          "title" : "Particle",
          "description" : "The particle portion of the name of the person represented by this `PolicyContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        },
        "policyNumberOfAccidents" : {
          "type" : "object",
          "title" : "Policy number of accidents",
          "description" : "The person's number of vehicular accidents. Only applies to this policy and not stored on the linked `AccountContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "NumberOfAccidents",
            "validateSubtype" : false
          }
        },
        "policyNumberOfViolations" : {
          "type" : "object",
          "title" : "Policy number of violations",
          "description" : "The person's number of driving violations. Only applies to this policy and not stored on the linked `AccountContact`. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "NumberOfAccidents",
            "validateSubtype" : false
          }
        },
        "primaryAddress" : {
          "type" : "object",
          "title" : "Primary address",
          "description" : "The contact's primary address",
          "$ref" : "#/definitions/policyperiod_Address",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "primaryLanguage" : {
          "type" : "object",
          "title" : "Primary language",
          "description" : "The contact's primary language",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "typelist" : "LanguageType"
          }
        },
        "primaryLocale" : {
          "type" : "object",
          "title" : "Primary locale",
          "description" : "The contact's primary locale",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "typelist" : "LocaleType"
          }
        },
        "primaryPhone" : {
          "type" : "string",
          "title" : "Primary phone",
          "description" : "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
          "readOnly" : true
        },
        "primaryPhoneType" : {
          "type" : "object",
          "title" : "Primary phone type",
          "description" : "The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for a `PolicyContact` that represents a person.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "typelist" : "PrimaryPhoneType"
          }
        },
        "relationshipTitle" : {
          "type" : "object",
          "title" : "Owner/officer relationship title",
          "description" : "The relationship this person has to the insured company, if this person is an owner or officer for the company. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "typelist" : "Relationship",
            "validateSubtype" : false
          }
        },
        "student" : {
          "type" : "boolean",
          "title" : "Student",
          "description" : "A `true` value indicates that the person qualifies as a student. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        },
        "taxId" : {
          "type" : "string",
          "title" : "Tax ID",
          "description" : "The contact's tax ID",
          "x-gw-nullable" : true
        },
        "trainingClassType" : {
          "type" : "object",
          "title" : "Driver training class type",
          "description" : "The type of driver training class completed. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "typelist" : "TrainingClassType",
            "validateSubtype" : false
          }
        },
        "workPhone" : {
          "type" : "object",
          "title" : "Work phone",
          "description" : "The contact's work phone number, if this `PolicyContact` represents a person, or the business's phone number, if this `PolicyContact` represents a company",
          "$ref" : "#/definitions/policyperiod_PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "yearLicensed" : {
          "type" : "integer",
          "title" : "Year licensed",
          "description" : "The year that the person first acquired a driver's license. Only applicable for a `PolicyContact` that represents a person. (Since 1.1.0)",
          "x-gw-sinceVersion" : "1.1.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "entitySubtype" : "Person",
            "validateSubtype" : false
          }
        }
      }
    },
    "PolicyDriverMVR" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "internalRequestID" : {
          "type" : "string",
          "title" : "InternalRequestID",
          "description" : "InternalRequestID",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "numberOfAccidents" : {
          "type" : "integer",
          "title" : "NumberOfAccidents",
          "description" : "NumberOfAccidents",
          "x-gw-nullable" : true
        },
        "numberOfViolations" : {
          "type" : "integer",
          "title" : "NumberOfViolations",
          "description" : "NumberOfViolations",
          "x-gw-nullable" : true
        },
        "orderStatus" : {
          "type" : "object",
          "title" : "OrderStatus",
          "description" : "OrderStatus",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "MVRStatus"
          }
        },
        "points" : {
          "type" : "integer",
          "title" : "Points",
          "description" : "Points",
          "x-gw-nullable" : true
        },
        "policyDriver" : {
          "type" : "object",
          "title" : "PolicyDriver",
          "description" : "PolicyDriver",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        },
        "statusDate" : {
          "type" : "string",
          "title" : "StatusDate",
          "description" : "StatusDate",
          "format" : "date-time",
          "x-gw-nullable" : true
        }
      }
    },
    "PolicyLine" : {
      "type" : "object",
      "title" : "Policy line",
      "description" : "A `PolicyLine` represents the information about a single line of business on an insurance policy",
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The human-readable name for this `PolicyLine`",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "numAddInsured" : {
          "type" : "integer",
          "title" : "Number of additional insureds",
          "description" : "The number of additional insureds for this line. Used for quick quotes where the number can be specified, but actual details of the additional insureds are not entered."
        },
        "pattern" : {
          "type" : "object",
          "title" : "Pattern",
          "description" : "The `PolicyLinePattern` that defines this `PolicyLine`",
          "$ref" : "#/definitions/ProductModelReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "patternCode" : {
          "type" : "string",
          "title" : "Pattern code",
          "description" : "The `id` for the `PolicyLinePattern` that defines this `PolicyLine`",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        }
      }
    },
    "PolicyLocation" : {
      "type" : "object",
      "title" : "Policy location",
      "description" : "A `PolicyLocation` represents a location relevant to the insurance policy. It combines an address for the location with other attributes of the location that may be relevant to the policy.",
      "x-gw-extensions" : {
        "discriminatorProperty" : "country",
        "wizardStepId" : "Locations"
      },
      "properties" : {
        "CEDEX" : {
          "type" : "string",
          "title" : "CEDEX",
          "description" : "The CEDEX bureau of the location's address. Only applicable in certain countries.",
          "maxLength" : 2,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "accountLocation" : {
          "type" : "object",
          "title" : "Account location",
          "description" : "The `AccountLocation` that this `PolicyLocation` is linked to. Changes to most fields on this `PolicyLocation` will also affect the linked `AccountLocation`.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "resourceType" : "AccountLocation"
          }
        },
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the location's address",
          "x-gw-nullable" : true
        },
        "addressLine1Kanji" : {
          "type" : "string",
          "title" : "Address line 1 kanji",
          "description" : "The kanji version of the first line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "addressLine2Kanji" : {
          "type" : "string",
          "title" : "Address line 2 kanji",
          "description" : "The kanji version of the second line of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the location's address",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the location's address",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "typelist" : "AddressType"
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the location's address",
          "x-gw-nullable" : true
        },
        "cityKanji" : {
          "type" : "string",
          "title" : "City kanji",
          "description" : "The kanji version of the city of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the location's address. The value of the `country` field will affect which other fields are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "defaultViews" : [ "detail" ]
          }
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of the location",
          "x-gw-nullable" : true
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the location represented by this `PolicyLocation`, including all standard fields for the address's country",
          "readOnly" : true
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "employeeCount" : {
          "type" : "integer",
          "title" : "Employee count",
          "description" : "The number of employees at this location",
          "x-gw-nullable" : true
        },
        "fireProtectionClass" : {
          "type" : "object",
          "title" : "Fire protection class",
          "description" : "The fire protection class of this location",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "FireProtectClass"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "industryCode" : {
          "type" : "object",
          "title" : "Industry code",
          "description" : "The industry code that describes the type of work done at this location",
          "$ref" : "#/definitions/policyperiod_ReferenceTableEntry",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "locationNum" : {
          "type" : "integer",
          "title" : "Location number",
          "description" : "The number automatically assigned to this location in the context of this policy",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the location's address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "primary" : {
          "type" : "boolean",
          "title" : "If true then this policy location is the primary location on this policy",
          "description" : "A `true` value indicates that this policy location is the primary location on this policy (Since 1.4.0)",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the location's address. Only applicable in certain countries.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "createOnly" : true,
            "typelist" : "State"
          }
        },
        "taxLocation" : {
          "type" : "object",
          "title" : "Tax location",
          "description" : "A reference to the `TaxLocation` that this location has been assigned to for tax purposes",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "TaxLocation"
          }
        },
        "validUntil" : {
          "type" : "string",
          "title" : "Valid until",
          "description" : "A date and time after which this information is no longer valid",
          "format" : "date-time",
          "x-gw-nullable" : true
        }
      }
    },
    "PolicyPeriod" : {
      "type" : "object",
      "title" : "Policy period",
      "description" : "A `PolicyPeriod` represents a version of the policy on a specific effective date",
      "properties" : {
        "jobStatus" : {
          "type" : "object",
          "title" : "Job status",
          "description" : "The current status of this period",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "PolicyPeriodStatus"
          }
        },
        "organizationOfService" : {
          "type" : "object",
          "title" : "Organization",
          "description" : "A reference to the `Organization` that this policy's producer of service belongs to (Since 1.4.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "resourceType" : "Organization"
          }
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The number assigned to this policy",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "primaryInsured" : {
          "type" : "object",
          "title" : "Primary insured",
          "description" : "The primary insured party for this policy",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        },
        "termType" : {
          "type" : "object",
          "title" : "Term type",
          "description" : "The type of policy term",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "TermType"
          }
        },
        "producerCode" : {
          "type" : "object",
          "title" : "Producer code",
          "description" : "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of record for this policy. The producer of record is the producer who initially created this policy term and receives commissions for it.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "ProducerCode"
          }
        },
        "sourcePolicy" : {
          "type" : "object",
          "title" : "Source policy",
          "description" : "A reference to the original `Policy` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "baseState" : {
          "type" : "object",
          "title" : "Base state",
          "description" : "The jurisdiction that the policy is based in",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "producerCodeOfService" : {
          "type" : "object",
          "title" : "Producer code of service",
          "description" : "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of service for this policy. The producer of service is the producer managing this policy. (Since 1.4.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "resourceType" : "ProducerCode"
          }
        },
        "primaryLocation" : {
          "type" : "object",
          "title" : "Primary location",
          "description" : "The primary location for this policy (Since 1.2.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-extensions" : {
            "resourceType" : "PolicyLocation"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "periodEnd" : {
          "type" : "string",
          "title" : "Period end",
          "description" : "The end date and time for this policy term",
          "format" : "date-time",
          "readOnly" : true
        },
        "jobEffectiveDate" : {
          "type" : "string",
          "title" : "Job effective date",
          "description" : "The date and time when the job that this `PolicyPeriod` belongs to will become effective. The exact meaning depends upon the `jobType` of the job. For example, for a `Sumbission` job, this will be the start date for the new policy, while for a `Cancellation` job this will be the date the policy is cancelled.",
          "format" : "date-time",
          "readOnly" : true
        },
        "product" : {
          "type" : "object",
          "title" : "Product",
          "description" : "A reference to the `Product` that defines the insurance product for this policy",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "sourceAccount" : {
          "type" : "object",
          "title" : "Source account",
          "description" : "A reference to the original `Account` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "additionalNamedInsureds" : {
          "type" : "array",
          "title" : "Additional named insureds",
          "description" : "The list of additional named insureds on the policy (Since 1.4.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AdditionalNamedInsured"
          },
          "x-gw-sinceVersion" : "1.4.0",
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "preferredCoverageCurrency" : {
          "type" : "object",
          "title" : "Preferred coverage currency",
          "description" : "The preferred currency used for defining coverages on policies for this policy term. Only editable if the application is configured to support multiple currencies. Changing the coverage currency will reset any rating override values previously set. (Since 1.3.0)",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-extensions" : {
            "typelist" : "Currency"
          }
        },
        "totalPremium" : {
          "type" : "object",
          "title" : "Total premium",
          "description" : "The sum of all premium costs for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "uwCompany" : {
          "type" : "object",
          "title" : "Underwriting company",
          "description" : "A reference to the `UWCompany` that issues this policy (Since 1.3.0)",
          "$ref" : "#/definitions/UWCompanyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-extensions" : {
            "securityLevel" : "special"
          }
        },
        "sliceDate" : {
          "type" : "string",
          "title" : "Slice date",
          "description" : "The specific effective date and time that this period represents within the policy",
          "format" : "date-time"
        },
        "taxesAndSurcharges" : {
          "type" : "object",
          "title" : "Taxes and surcharges",
          "description" : "The sum of all taxes and surcharges for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "createdDate" : {
          "type" : "string",
          "title" : "Created date",
          "description" : "The date and time that this element was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "organization" : {
          "type" : "object",
          "title" : "Organization",
          "description" : "A reference to the `Organization` that this policy's producer of record belongs to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Organization"
          }
        },
        "targetAccount" : {
          "type" : "object",
          "title" : "Target account",
          "description" : "A reference to the `Account` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "targetPolicy" : {
          "type" : "object",
          "title" : "Target policy",
          "description" : "A reference to the `Policy` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "periodStart" : {
          "type" : "string",
          "title" : "Period start",
          "description" : "The start date and time for this policy term",
          "format" : "date-time",
          "readOnly" : true
        },
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that the policy belongs to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "totalCost" : {
          "type" : "object",
          "title" : "Total cost",
          "description" : "The sum of all costs for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        }
      }
    },
    "PolicyPeriodBase" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "type" : "object",
          "title" : "Account",
          "description" : "A reference to the `Account` that the policy belongs to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "additionalNamedInsureds" : {
          "type" : "array",
          "title" : "Additional named insureds",
          "description" : "The list of additional named insureds on the policy (Since 1.4.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AdditionalNamedInsured"
          },
          "x-gw-sinceVersion" : "1.4.0",
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "baseState" : {
          "type" : "object",
          "title" : "Base state",
          "description" : "The jurisdiction that the policy is based in",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "createdDate" : {
          "type" : "string",
          "title" : "Created date",
          "description" : "The date and time that this element was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "organization" : {
          "type" : "object",
          "title" : "Organization",
          "description" : "A reference to the `Organization` that this policy's producer of record belongs to",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Organization"
          }
        },
        "organizationOfService" : {
          "type" : "object",
          "title" : "Organization",
          "description" : "A reference to the `Organization` that this policy's producer of service belongs to (Since 1.4.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "resourceType" : "Organization"
          }
        },
        "periodEnd" : {
          "type" : "string",
          "title" : "Period end",
          "description" : "The end date and time for this policy term",
          "format" : "date-time",
          "readOnly" : true
        },
        "periodStart" : {
          "type" : "string",
          "title" : "Period start",
          "description" : "The start date and time for this policy term",
          "format" : "date-time",
          "readOnly" : true
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The number assigned to this policy",
          "readOnly" : true
        },
        "preferredCoverageCurrency" : {
          "type" : "object",
          "title" : "Preferred coverage currency",
          "description" : "The preferred currency used for defining coverages on policies for this policy term. Only editable if the application is configured to support multiple currencies. Changing the coverage currency will reset any rating override values previously set. (Since 1.3.0)",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-extensions" : {
            "typelist" : "Currency"
          }
        },
        "primaryInsured" : {
          "type" : "object",
          "title" : "Primary insured",
          "description" : "The primary insured party for this policy",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        },
        "primaryLocation" : {
          "type" : "object",
          "title" : "Primary location",
          "description" : "The primary location for this policy (Since 1.2.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-extensions" : {
            "resourceType" : "PolicyLocation"
          }
        },
        "producerCode" : {
          "type" : "object",
          "title" : "Producer code",
          "description" : "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of record for this policy. The producer of record is the producer who initially created this policy term and receives commissions for it.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "ProducerCode"
          }
        },
        "producerCodeOfService" : {
          "type" : "object",
          "title" : "Producer code of service",
          "description" : "A reference to the `ProducerCode` that represents the producer currently assigned as the producer of service for this policy. The producer of service is the producer managing this policy. (Since 1.4.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "resourceType" : "ProducerCode"
          }
        },
        "product" : {
          "type" : "object",
          "title" : "Product",
          "description" : "A reference to the `Product` that defines the insurance product for this policy",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "sourceAccount" : {
          "type" : "object",
          "title" : "Source account",
          "description" : "A reference to the original `Account` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "sourcePolicy" : {
          "type" : "object",
          "title" : "Source policy",
          "description" : "A reference to the original `Policy` that this policy was rewritten from. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "targetAccount" : {
          "type" : "object",
          "title" : "Target account",
          "description" : "A reference to the `Account` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Account"
          }
        },
        "targetPolicy" : {
          "type" : "object",
          "title" : "Target policy",
          "description" : "A reference to the `Policy` that this policy was rewritten to. Only applicable if this policy has been rewritten into a new `Account`. (Since 1.1.0)",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Policy"
          }
        },
        "taxesAndSurcharges" : {
          "type" : "object",
          "title" : "Taxes and surcharges",
          "description" : "The sum of all taxes and surcharges for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "termType" : {
          "type" : "object",
          "title" : "Term type",
          "description" : "The type of policy term",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "TermType"
          }
        },
        "totalCost" : {
          "type" : "object",
          "title" : "Total cost",
          "description" : "The sum of all costs for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "totalPremium" : {
          "type" : "object",
          "title" : "Total premium",
          "description" : "The sum of all premium costs for the policy term",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "readOnly" : true
        },
        "uwCompany" : {
          "type" : "object",
          "title" : "Underwriting company",
          "description" : "A reference to the `UWCompany` that issues this policy (Since 1.3.0)",
          "$ref" : "#/definitions/UWCompanyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-extensions" : {
            "securityLevel" : "special"
          }
        }
      }
    },
    "PolicyPeriodSearchRequestAttributes" : {
      "type" : "object",
      "properties" : {
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The `city` of the `primaryAddress` on the `primaryInsured`"
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The `companyName` of the `primaryInsured`"
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The `country` of the `primaryAddress` on the `primaryInsured` (Since 1.4.0)",
          "x-gw-type" : "typekey.Country",
          "x-gw-sinceVersion" : "1.4.0"
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The `firstName` of the `primaryInsured`"
        },
        "jurisdiction" : {
          "type" : "object",
          "title" : "Jurisdiction",
          "description" : "The `baseState` of the policy",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The `lastName` of the `primaryInsured`"
        },
        "officialId" : {
          "type" : "string",
          "title" : "Official ID",
          "description" : "The `value` of an `OfficialID` on the `primaryInsured`"
        },
        "phone" : {
          "type" : "string",
          "title" : "Phone",
          "description" : "The `workPhone` of the `primaryInsured`"
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The `policyNumber` for the policy"
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The `postalCode` of the `primaryAddress` on the `primaryInsured`"
        },
        "producerCode" : {
          "type" : "object",
          "title" : "Producer code",
          "description" : "The `ProducerCode` that is either the producer of service or producer of record for the policy",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        },
        "product" : {
          "type" : "object",
          "title" : "Product",
          "description" : "The `ProductPattern` for the policy",
          "$ref" : "#/definitions/ProductModelReference"
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The `state` of the `primaryAddress` on the `primaryInsured`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "State"
          }
        },
        "street" : {
          "type" : "string",
          "title" : "Street",
          "description" : "Part of the street address of the `primaryAddress` on the `primaryInsured`"
        }
      }
    },
    "PolicyPeriodSearchResult" : {
      "type" : "object",
      "title" : "Policy period search result",
      "description" : "A limited view of the data on a policy period as returned from a search",
      "properties" : {
        "accountNumber" : {
          "type" : "string",
          "title" : "Account number",
          "description" : "The `accountNumber` on the account for this policy",
          "readOnly" : true
        },
        "effectiveDate" : {
          "type" : "string",
          "title" : "Effective date",
          "description" : "The date on which this particular period became effective",
          "format" : "date-time",
          "readOnly" : true
        },
        "expirationDate" : {
          "type" : "string",
          "title" : "Expiration date",
          "description" : "The date on which this particular period ceased being in effect",
          "format" : "date-time",
          "readOnly" : true
        },
        "insuredName" : {
          "type" : "string",
          "title" : "Insured name",
          "description" : "The name of the primary named insured for this policy",
          "readOnly" : true
        },
        "policyAddress" : {
          "type" : "string",
          "title" : "Policy address",
          "description" : "The formatted address of the primary location for this policy",
          "readOnly" : true
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The assigned number for this policy",
          "readOnly" : true
        },
        "producerOfRecordName" : {
          "type" : "string",
          "title" : "Producer of record name",
          "description" : "The name of the `ProducerCode` assigned as the producer of record for this policy",
          "readOnly" : true
        },
        "producerOfServiceName" : {
          "type" : "string",
          "title" : "Producer of service name",
          "description" : "The name of the `ProducerCode` assigned as the producer of service for this policy",
          "readOnly" : true
        },
        "product" : {
          "type" : "object",
          "title" : "Product",
          "description" : "A reference to the `Product` that defines the insurance product for this policy",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        }
      }
    },
    "PolicySearchRequestAttributes" : {
      "type" : "object",
      "title" : "Policy search request attributes",
      "description" : "Details of the policy to search for",
      "properties" : {
        "inForceOn" : {
          "type" : "string",
          "title" : "In force on",
          "description" : "A date that the policy is in force on",
          "format" : "date"
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The `country` of the `primaryAddress` on the `primaryInsured` (Since 1.4.0)",
          "x-gw-type" : "typekey.Country",
          "x-gw-sinceVersion" : "1.4.0"
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The `lastName` of the `primaryInsured`"
        },
        "officialId" : {
          "type" : "string",
          "title" : "Official ID",
          "description" : "The `value` of an `OfficialID` on the `primaryInsured`"
        },
        "product" : {
          "type" : "object",
          "title" : "Product",
          "description" : "The `ProductPattern` for the policy",
          "$ref" : "#/definitions/ProductModelReference"
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The `city` of the `primaryAddress` on the `primaryInsured`"
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The `companyName` of the `primaryInsured`"
        },
        "jurisdiction" : {
          "type" : "object",
          "title" : "Jurisdiction",
          "description" : "The `baseState` of the policy",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The `postalCode` of the `primaryAddress` on the `primaryInsured`"
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The `policyNumber` for the policy"
        },
        "producerCode" : {
          "type" : "object",
          "title" : "Producer code",
          "description" : "The `ProducerCode` that is either the producer of service or producer of record for the policy",
          "$ref" : "#/definitions/policyperiod_SimpleReference"
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The `firstName` of the `primaryInsured`"
        },
        "phone" : {
          "type" : "string",
          "title" : "Phone",
          "description" : "The `workPhone` of the `primaryInsured`"
        },
        "street" : {
          "type" : "string",
          "title" : "Street",
          "description" : "Part of the street address of the `primaryAddress` on the `primaryInsured`"
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The `state` of the `primaryAddress` on the `primaryInsured`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "State"
          }
        }
      }
    },
    "PolicySearchResult" : {
      "type" : "object",
      "title" : "Policy search result",
      "description" : "A limited view of the data on a policy as returned from a search",
      "properties" : {
        "producerOfRecordName" : {
          "type" : "string",
          "title" : "Producer of record name",
          "description" : "The name of the `ProducerCode` assigned as the producer of record for this policy",
          "readOnly" : true
        },
        "producerOfServiceName" : {
          "type" : "string",
          "title" : "Producer of service name",
          "description" : "The name of the `ProducerCode` assigned as the producer of service for this policy",
          "readOnly" : true
        },
        "product" : {
          "type" : "object",
          "title" : "Product",
          "description" : "A reference to the `Product` that defines the insurance product for this policy",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "policyId" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier for the `Policy`",
          "readOnly" : true
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The assigned number for this policy",
          "readOnly" : true
        },
        "policyAddress" : {
          "type" : "string",
          "title" : "Policy address",
          "description" : "The formatted address of the primary location for this policy",
          "readOnly" : true
        },
        "accountNumber" : {
          "type" : "string",
          "title" : "Account number",
          "description" : "The `accountNumber` on the account for this policy",
          "readOnly" : true
        },
        "insuredName" : {
          "type" : "string",
          "title" : "Insured name",
          "description" : "The name of the primary named insured for this policy",
          "readOnly" : true
        },
        "effectiveDate" : {
          "type" : "string",
          "title" : "Effective date",
          "description" : "The date on which this particular period became effective",
          "format" : "date-time",
          "readOnly" : true
        },
        "expirationDate" : {
          "type" : "string",
          "title" : "Expiration date",
          "description" : "The date on which this particular period ceased being in effect",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "PreRenewalDirectionRequest" : {
      "type" : "object",
      "title" : "Pre-renewal direction request",
      "description" : "Details of the pre-renewal direction for a policy",
      "required" : [ "body", "direction", "securityType" ],
      "properties" : {
        "assignTo" : {
          "type" : "object",
          "title" : "Assign to",
          "description" : "The user whom should be assigned to the pre-renewal direction",
          "$ref" : "#/definitions/policyperiod_Assignee"
        },
        "body" : {
          "type" : "string",
          "title" : "Body",
          "description" : "The text body for the pre-renewal note",
          "minLength" : 1,
          "pattern" : "\\S"
        },
        "direction" : {
          "type" : "object",
          "title" : "Direction",
          "description" : "The recommended action to take on this policy when it comes up for renewal",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "PreRenewalDirection"
          }
        },
        "nonRenewAdditionalExplanations" : {
          "type" : "array",
          "title" : "Non-renewal reason additional explanations",
          "description" : "Additional reasons for advising a non-renewal",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/NonRenewalExplanation"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "nonRenewReason" : {
          "type" : "object",
          "title" : "Non-renewal reason",
          "description" : "The reason this policy has been marked for non-renewal",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "NonRenewalCode"
          }
        },
        "nonRenewReasonText" : {
          "type" : "string",
          "title" : "Non-renewal reason text",
          "description" : "A more detailed explanation of the reason to not renew the policy"
        },
        "securityType" : {
          "type" : "object",
          "title" : "Security type",
          "description" : "The security level of the pre-renewal note",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "NoteSecurityType"
          }
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "The subject for the pre-renewal note",
          "minLength" : 1,
          "pattern" : "\\S",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        }
      }
    },
    "PrimaryNamedInsuredAttributes" : {
      "type" : "object",
      "title" : "Policy named insured attributes",
      "description" : "The new `primaryNamedInsured` for the policy (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "required" : [ "primaryNamedInsured" ],
      "properties" : {
        "primaryNamedInsured" : {
          "type" : "object",
          "title" : "Primary named insured",
          "description" : "A reference to the `AccountContact` that should be set as the new primary named insured for this policy",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "AccountContact"
          }
        }
      }
    },
    "ProductEditionReference" : {
      "type" : "object",
      "title" : "Product edition reference",
      "description" : "A reference to a specific edition of a product",
      "properties" : {
        "editionCode" : {
          "type" : "string",
          "title" : "Edition code",
          "description" : "The code of the product edition",
          "readOnly" : true
        },
        "worksetUid" : {
          "type" : "string",
          "title" : "Workset UID",
          "description" : "The unique identifier of the workset associated with this edition",
          "readOnly" : true
        }
      }
    },
    "ProductModelChoice" : {
      "type" : "object",
      "title" : "Product model choice",
      "description" : "A specific enumerated value available in the context of an option or package coverage term",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The unique code that identifies the choice",
          "minLength" : 1
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of the choice"
        }
      }
    },
    "ProductModelReference" : {
      "type" : "object",
      "title" : "Product model reference",
      "description" : "A reference to some product model element, such as a `CoveragePattern` or `PolicyLinePattern`",
      "required" : [ "id" ],
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the referenced element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element",
          "minLength" : 1
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        }
      }
    },
    "QuestionAnswer" : {
      "type" : "object",
      "title" : "Question answer",
      "description" : "Contains the value of the answer to a single question",
      "properties" : {
        "booleanValue" : {
          "type" : "boolean",
          "title" : "Boolean value",
          "description" : "The value of this answer as a Boolean. Only applicable if `questionType` is `Boolean`.",
          "x-gw-nullable" : true
        },
        "choiceValue" : {
          "type" : "object",
          "title" : "Choice value",
          "description" : "The value of this answer as an enumerated choice value. Only applicable if `questionType` is `Choice`.",
          "$ref" : "#/definitions/ProductModelChoice",
          "x-gw-nullable" : true
        },
        "dateValue" : {
          "type" : "string",
          "title" : "Date value",
          "description" : "The value of this answer as a date-time value. Only applicable if `questionType` is `Date`.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "displayValue" : {
          "type" : "string",
          "title" : "Display value",
          "description" : "A formatted, read-only view of the value of this answer",
          "readOnly" : true
        },
        "integerValue" : {
          "type" : "integer",
          "title" : "Integer value",
          "description" : "The value of this answer as an integer. Only applicable if `questionType` is `Integer`.",
          "x-gw-nullable" : true
        },
        "question" : {
          "type" : "object",
          "title" : "Question",
          "description" : "A reference to the `QuestionPattern` that this answer applies to",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "questionType" : {
          "type" : "object",
          "title" : "Question type",
          "description" : "The data type of the question. This field affects which of the value fields is applicable.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "QuestionType"
          }
        },
        "textValue" : {
          "type" : "string",
          "title" : "Text value",
          "description" : "The value of this answer as a string. Only applicable if `questionType` is `String`.",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        }
      }
    },
    "QuestionAnswers" : {
      "type" : "object",
      "title" : "Question answers",
      "description" : "An object that contains answers to the questions on the containing object",
      "required" : [ "answers" ],
      "properties" : {
        "answers" : {
          "type" : "object",
          "title" : "Answers",
          "description" : "An object that maps each question on the containing object to its corresponding answer",
          "$ref" : "#/definitions/QuestionAnswersMap"
        }
      }
    },
    "QuestionAnswersMap" : {
      "type" : "object",
      "title" : "Question answers map",
      "description" : "An object that contains answers to the questions on the containing element. The keys in this object are the `id` values for the `QuestionPattern` elements that apply to the containing element.",
      "additionalProperties" : {
        "type" : "object",
        "title" : "Answers",
        "description" : "The answers to the questions on the containing element. Each property key is the `id` of a `QuestionPattern` pattern that the answer applies to.",
        "$ref" : "#/definitions/QuestionAnswer"
      }
    },
    "policyperiod_QueueDetail" : {
      "type" : "object",
      "title" : "Queue detail",
      "description" : "Used to represent a reference to a `Queue`",
      "xml" : {
        "name" : "QueueDetail"
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The name of the `Queue`",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Queue`"
        }
      }
    },
    "RateFactor" : {
      "type" : "object",
      "title" : "Rate factor",
      "description" : "A `RateFactor` represents a single rating factor that is one component of the calculation of a `Modifier` value",
      "properties" : {
        "assessment" : {
          "type" : "string",
          "title" : "Assessment",
          "description" : "The credit or debit multiplier for this rate factor",
          "format" : "gw-bigdecimal"
        },
        "justification" : {
          "type" : "string",
          "title" : "Justification",
          "description" : "An additional comment to justify this rate factor",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "pattern" : {
          "type" : "object",
          "title" : "Pattern",
          "description" : "A reference to the `RateFactorPattern` that defines this `RateFactor`",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        }
      }
    },
    "RateFactorsMap" : {
      "type" : "object",
      "title" : "Rate factors map",
      "description" : "An object that contains a set of `RateFactor` values for a `Modifier`. The keys in this object are the `code` values for the `RateFactorPattern` elements that apply to the containing `Modifier`.",
      "additionalProperties" : {
        "type" : "object",
        "title" : "Rate factors",
        "description" : "The rate factor values. Property keys represent the `code` of the `RateFactorPattern` for the rate factor.",
        "$ref" : "#/definitions/RateFactor"
      }
    },
    "RatingPeriod" : {
      "type" : "object",
      "properties" : {
        "endDate" : {
          "type" : "string",
          "title" : "EndDate",
          "description" : "EndDate",
          "format" : "date-time",
          "readOnly" : true
        },
        "startDate" : {
          "type" : "string",
          "title" : "StartDate",
          "description" : "StartDate",
          "format" : "date-time",
          "readOnly" : true
        },
        "type" : {
          "type" : "object",
          "title" : "Type",
          "description" : "Type",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "RPSDType"
          }
        }
      }
    },
    "RatingPeriodMap" : {
      "type" : "object",
      "additionalProperties" : {
        "type" : "object",
        "$ref" : "#/definitions/RatingPeriod"
      }
    },
    "policyperiod_ReferenceTableEntry" : {
      "type" : "object",
      "title" : "Reference table entry",
      "description" : "A single element from a reference table. Reference tables typically represent things like standardized lists of codes.",
      "xml" : {
        "name" : "ReferenceTableEntry"
      },
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code of the reference table entry"
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of the reference table entry"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        }
      }
    },
    "policyperiod_RelatedCollection" : {
      "type" : "object",
      "title" : "Related collection",
      "description" : "A set of element references that are related to the element in some way. Used to link elements with their relations when a request is made using the `include` query parameter.",
      "xml" : {
        "name" : "RelatedCollection"
      },
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements included in the `data` array"
        },
        "data" : {
          "type" : "array",
          "title" : "Data",
          "description" : "The list of references to the related elements",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/policyperiod_SimpleReference"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements in the related set of elements. Only present if the `includeTotal` query parameter is used to request that the total be calculated for an included collection."
        }
      }
    },
    "policyperiod_RelatedCollections" : {
      "type" : "object",
      "title" : "Related collections",
      "description" : "A set of `RelatedCollection` elements that contain references to elements included using the `include` query parameter on a request",
      "xml" : {
        "name" : "RelatedCollections"
      },
      "additionalProperties" : {
        "type" : "object",
        "title" : "Related collections",
        "description" : "The related collections. Each key in this object will match the name of the inclusion requested via the `include` query parameter.",
        "$ref" : "#/definitions/policyperiod_RelatedCollection"
      }
    },
    "ReleaseEditLockAttributes" : {
      "type" : "object",
      "title" : "Release edit lock attributes",
      "description" : "Details of releasing an edit lock on a job (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "activity" : {
          "type" : "object",
          "title" : "Activity",
          "description" : "Optional details for the auto-generated approval activity",
          "$ref" : "#/definitions/policyperiod_Activity",
          "x-gw-extensions" : {
            "resourceType" : "Activity"
          }
        },
        "note" : {
          "type" : "object",
          "title" : "Note",
          "description" : "Optional note to create with the auto-generated approval activity",
          "$ref" : "#/definitions/policyperiod_Note",
          "x-gw-extensions" : {
            "resourceType" : "Note"
          }
        }
      }
    },
    "RequestApprovalAttributes" : {
      "type" : "object",
      "title" : "Request approval attributes",
      "description" : "Details of requesting approval on a job (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "activity" : {
          "type" : "object",
          "title" : "Activity",
          "description" : "Optional details for the auto-generated approval activity",
          "$ref" : "#/definitions/policyperiod_Activity",
          "x-gw-extensions" : {
            "resourceType" : "Activity"
          }
        },
        "note" : {
          "type" : "object",
          "title" : "Note",
          "description" : "Optional note to create with the auto-generated approval activity",
          "$ref" : "#/definitions/policyperiod_Note",
          "x-gw-extensions" : {
            "resourceType" : "Note"
          }
        }
      }
    },
    "RescheduleAttributes" : {
      "type" : "object",
      "title" : "Reschedule attributes",
      "description" : "Details of rescheduling the cancellation (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "required" : [ "processDate" ],
      "properties" : {
        "processDate" : {
          "type" : "string",
          "title" : "Process date",
          "description" : "The new date that the cancellation should be scheduled for",
          "format" : "date"
        }
      }
    },
    "ResolveOOSConflictsAttributes" : {
      "type" : "object",
      "title" : "Resolve out-of-sequence conflicts attributes",
      "description" : "Details of how the out-of-sequence conflicts should be resolved (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "required" : [ "overrides" ],
      "properties" : {
        "overrides" : {
          "type" : "array",
          "title" : "Overrides",
          "description" : "The list of `OOSConflictOverride` values that specify how out-of-sequence conflicts should be resolved",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/OOSConflictOverride"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ScheduledItem" : {
      "type" : "object",
      "title" : "Scheduled item",
      "description" : "A scheduled item on a coverage, such as one item on a list of high-value items on a personal property policy",
      "properties" : {
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "properties" : {
          "type" : "object",
          "title" : "Properties",
          "description" : "The various field values for this item",
          "$ref" : "#/definitions/ScheduledItemPropertyMap"
        }
      }
    },
    "ScheduledItemProperty" : {
      "type" : "object",
      "title" : "Scheduled item property",
      "description" : "The value of a single field on a scheduled item",
      "properties" : {
        "booleanValue" : {
          "type" : "boolean",
          "title" : "Boolean value",
          "description" : "The value of this property as a Boolean. Only applicable if `valueType` is `boolean`.",
          "x-gw-nullable" : true
        },
        "choiceValue" : {
          "type" : "object",
          "title" : "Choice value",
          "description" : "The value of this property as an enumerated choice value. Only applicable if `valueType` is `choice`.",
          "$ref" : "#/definitions/ProductModelChoice",
          "x-gw-nullable" : true
        },
        "dateOnlyValue" : {
          "type" : "string",
          "title" : "Date value",
          "description" : "The value of this property as a date. Only applicable if `valueType` is `date`.",
          "format" : "date",
          "x-gw-nullable" : true
        },
        "dateTimeValue" : {
          "type" : "string",
          "title" : "Date-time value",
          "description" : "The value of this property as a date and time. Only applicable if `valueType` is `datetime`.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "decimalValue" : {
          "type" : "string",
          "title" : "Decimal value",
          "description" : "The value of this property as a decimal. Only applicable if `valueType` is `decimal`.",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "displayValue" : {
          "type" : "string",
          "title" : "Display value",
          "description" : "The formatted, read-only value of this property",
          "readOnly" : true
        },
        "integerValue" : {
          "type" : "string",
          "title" : "Integer value",
          "description" : "The value of this property as an integer. Only applicable if `valueType` is `integer`.",
          "format" : "gw-biginteger",
          "x-gw-nullable" : true
        },
        "locationValue" : {
          "type" : "object",
          "title" : "Location value",
          "description" : "The value of this property as a `PolicyLocation` reference. Only applicable if `valueType` is `location`.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyLocation"
          }
        },
        "partyValue" : {
          "type" : "object",
          "title" : "Party value",
          "description" : "The value of this property as a `PolicyContact` reference. Only applicable if `valueType` is `party`.",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyContact"
          }
        },
        "stringValue" : {
          "type" : "string",
          "title" : "String value",
          "description" : "The value of this property as a string. Only applicable if `valueType` is `string`.",
          "x-gw-nullable" : true
        },
        "typekeyValue" : {
          "type" : "object",
          "title" : "TypeKey value",
          "description" : "The value of this property as a `TypeKey` value. Only applicable if `valueType` is `typekey`.",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true
        },
        "valueType" : {
          "type" : "string",
          "title" : "Value type",
          "description" : "The value type of this property. This field determines which value field is applicable.",
          "readOnly" : true
        }
      }
    },
    "ScheduledItemPropertyMap" : {
      "type" : "object",
      "title" : "Scheduled item property map",
      "description" : "This object contains the values for a `ScheduledItem` element. Each key in this object is the `id` of a `ScheduledItemPropertyPattern` that applies to the containing element.",
      "additionalProperties" : {
        "type" : "object",
        "title" : "Properties",
        "description" : "The values of the scheduled item's properties. Each property key is the `id` of a `ScheduledItemPropertyPattern`.",
        "$ref" : "#/definitions/ScheduledItemProperty"
      }
    },
    "policyperiod_SimpleReference" : {
      "type" : "object",
      "title" : "Simple reference",
      "description" : "A reference to an element",
      "xml" : {
        "name" : "SimpleReference"
      },
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "policyperiod_SpatialPoint" : {
      "type" : "object",
      "title" : "Spatial point",
      "description" : "An object that combines a latitude with a longitude (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "SpatialPoint"
      },
      "required" : [ "latitude", "longitude" ],
      "properties" : {
        "latitude" : {
          "type" : "string",
          "title" : "Latitude",
          "description" : "The latitude of the spatial point",
          "format" : "gw-bigdecimal"
        },
        "longitude" : {
          "type" : "string",
          "title" : "Longitude",
          "description" : "The longitude of the spatial point",
          "format" : "gw-bigdecimal"
        }
      }
    },
    "policyperiod_TypeFilter" : {
      "type" : "object",
      "title" : "TypeFilter",
      "description" : "A `TypeFilter` represents a filtered set of the `TypeKey` values from a `TypeList`",
      "xml" : {
        "name" : "TypeFilter"
      },
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this `TypeFilter`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this `TypeFilter`"
        },
        "typeKeys" : {
          "type" : "array",
          "title" : "TypeKeys",
          "description" : "The `code` values for the `TypeKeys` that are included by this `TypeFilter`",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "policyperiod_TypeKey" : {
      "type" : "object",
      "title" : "TypeKey",
      "description" : "A `TypeKey` represents one of the possible enumerated values of a `TypeList`",
      "xml" : {
        "name" : "TypeKey"
      },
      "properties" : {
        "categories" : {
          "type" : "array",
          "title" : "Categories",
          "description" : "The categories that this `TypeKey` belongs to. Categories are formatted by combining the name of the `TypeList` with the `code` for its `TypeKey`, separated by a `.` character.",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code for this `TypeKey`. `TypeKey` codes are unique within a `TypeList`."
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The longer description of this `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The human-readable name of this `TypeKey`"
        },
        "priority" : {
          "type" : "integer",
          "title" : "Priority",
          "description" : "The order of this `TypeKey` relative to other `TypeKeys` in the same `TypeList`. A `TypeKey` with a lower `priority` will appear before a `TypeKey` with a higher priority when the values for a `TypeList` are presented in sorted order."
        },
        "retired" : {
          "type" : "boolean",
          "title" : "Retried",
          "description" : "A `true` value for this field indicates that the `TypeKey` value should no longer be used. Retired `TypeKey` values are retained only for the sake of historical data that may already be using the `TypeKey`.",
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        }
      }
    },
    "policyperiod_TypeKeyReference" : {
      "type" : "object",
      "title" : "TypeKey reference",
      "description" : "A reference to a `TypeKey` element that defines an enumerated value from a `TypeList`",
      "xml" : {
        "name" : "TypeKeyReference"
      },
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The `name` of the `TypeKey`"
        }
      }
    },
    "policyperiod_TypeList" : {
      "type" : "object",
      "title" : "TypeList",
      "description" : "A `TypeList` represents a list of enumerated `TypeKey` values",
      "xml" : {
        "name" : "TypeList"
      },
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this `TypeList`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this `TypeList`",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "typeFilters" : {
          "type" : "array",
          "title" : "TypeFilters",
          "description" : "The set of `TypeFilters` available on this `TypeList`. A `TypeFilter` represents a filtered subset of the `TypeKeys` in this `TypeList`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/policyperiod_TypeFilter"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "typeKeys" : {
          "type" : "array",
          "title" : "TypeKeys",
          "description" : "The list of `TypeKeys` available on this `TypeList`. A `TypeKey` represents one of the enumerated values that comprise this `TypeList`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/policyperiod_TypeKey"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "UWCompanyReference" : {
      "type" : "object",
      "title" : "Underwriting company reference",
      "description" : "A reference to an underwriting company (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "code" : {
          "type" : "object",
          "title" : "Code",
          "description" : "The `code` of the referenced underwriting company",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UWCompanyCode"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the referenced element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "UWIssue" : {
      "type" : "object",
      "title" : "Underwriting issue",
      "description" : "A `UWIssue` represents an issue identified as part of underwriting evaluation, either by automated rules or during manual review (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "longDescription" : {
          "type" : "string",
          "title" : "Long description",
          "description" : "A longer description of this issue",
          "x-gw-extensions" : {
            "createOnly" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "rejected" : {
          "type" : "boolean",
          "title" : "Rejected",
          "description" : "A `true` value indicates that this issue has been rejected",
          "readOnly" : true
        },
        "automaticApprovalCause" : {
          "type" : "string",
          "title" : "Automatic approval cause",
          "description" : "An identifier for the specific policy transaction that automatically approved the issue",
          "readOnly" : true
        },
        "hasApprovalOrRejection" : {
          "type" : "boolean",
          "title" : "Has approval or rejection",
          "description" : "A `true` value indicates that the issue has been either approved or rejected",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "decimalValue" : {
          "type" : "string",
          "title" : "Decimal value",
          "description" : "The value of the issue as a decimal. Only applicable if `valueType` is `decimal`.",
          "format" : "gw-bigdecimal",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "autoApprovable" : {
          "type" : "boolean",
          "title" : "Auto-approvable",
          "description" : "A `true` value indicates that the issue will be automatically approved during appropriate lifecycle actions if the caller has sufficient authority. Issues that are not auto-approvable must be manually approved instead.",
          "readOnly" : true
        },
        "currentBlockingPoint" : {
          "type" : "object",
          "title" : "Current blocking point",
          "description" : "The point in the policy lifecycle that this issue currently blocks",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "UWIssueBlockingPoint"
          }
        },
        "approvalInvalidFrom" : {
          "type" : "string",
          "title" : "Approval invalid from",
          "description" : "The date on which the approval ceases to be valid. Only applicable if `approvalDurationType` is set to a value that specifies a particular amount of time, such as an approval that is valid for one year.",
          "format" : "date-time",
          "readOnly" : true
        },
        "displayApprovalValue" : {
          "type" : "string",
          "title" : "Display approval value",
          "description" : "The formatted, read-only value of the issue's approval",
          "readOnly" : true
        },
        "valueType" : {
          "type" : "string",
          "title" : "Value type",
          "description" : "The type of value for this issue and its approvals. This field will determine which of the value fields is applicable to this issue.",
          "readOnly" : true
        },
        "integerValue" : {
          "type" : "string",
          "title" : "Integer value",
          "description" : "The value of the issue as an integer. Only applicable if `valueType` is `integer`.",
          "format" : "gw-biginteger",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "stateSetValue" : {
          "type" : "object",
          "title" : "State set value",
          "description" : "The value of the issue as a set of states. Only applicable if `valueType` is `stateset`.",
          "$ref" : "#/definitions/policyperiod_ExclusiveStateSet",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "rejectingUser" : {
          "type" : "object",
          "title" : "Rejecting user",
          "description" : "The caller that rejected this issue",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "stateSetApprovalValue" : {
          "type" : "object",
          "title" : "State set approval value",
          "description" : "The value of the issue's approval as a set of states. Only applicable if `valueType` is `stateset`.",
          "$ref" : "#/definitions/policyperiod_ExclusiveStateSet"
        },
        "decimalApprovalValue" : {
          "type" : "string",
          "title" : "Decimal approval value",
          "description" : "The value of the issue's approval as a decimal. Only applicable if `valueType` is `decimal`.",
          "format" : "gw-bigdecimal"
        },
        "issueKey" : {
          "type" : "string",
          "title" : "Issue key",
          "description" : "A unique identifier for this issue that combines the type of issue with the policy element the issue applies to, if any",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "approvalDurationType" : {
          "type" : "object",
          "title" : "Approval duration type",
          "description" : "How long the approval is valid for",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UWApprovalDurationType"
          }
        },
        "active" : {
          "type" : "boolean",
          "title" : "Active",
          "description" : "A `true` value indicates that the issue still applies to this policy. An issue will be marked inactive when it no longer applies to the policy, but can still be retained for historical purposes.",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "shortDescription" : {
          "type" : "string",
          "title" : "Short description",
          "description" : "A short description of this issue",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "displayValue" : {
          "type" : "string",
          "title" : "Display value",
          "description" : "The formatted, read-only value of the issue",
          "readOnly" : true
        },
        "issueType" : {
          "type" : "object",
          "title" : "Issue type",
          "description" : "A reference to the `UWIssueType` that defines the type of this issue",
          "$ref" : "#/definitions/policyperiod_UWIssueTypeReference",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "moneyApprovalValue" : {
          "type" : "object",
          "title" : "Money approval value",
          "description" : "The value of the issue's approval as a monetary amount. Only applicable if `valueType` is `money`.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount"
        },
        "comparator" : {
          "type" : "object",
          "title" : "Comparator",
          "description" : "Defines both the type of value for the issue and how the issue's value is compared to the approval value to determine if the approval is valid",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ValueComparator"
          }
        },
        "integerApprovalValue" : {
          "type" : "string",
          "title" : "Integer approval value",
          "description" : "The value of the issue's approval as an integer. Only applicable if `valueType` is `integer`.",
          "format" : "gw-biginteger"
        },
        "valueVariesAcrossSlices" : {
          "type" : "boolean",
          "title" : "Value varies across slices",
          "description" : "A `true` value for this field indicates that the value of the issue varies at different effective dates within the policy term",
          "readOnly" : true
        },
        "blockingPoint" : {
          "type" : "object",
          "title" : "Blocking point",
          "description" : "The default blocking point for the issue's `UWIssueType`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "UWIssueBlockingPoint"
          }
        },
        "canEditApprovalBeforeBind" : {
          "type" : "boolean",
          "title" : "Can edit approval before bind",
          "description" : "A `true` value indicates that this approval can still be edited before the containing `Job` is bound"
        },
        "moneyValue" : {
          "type" : "object",
          "title" : "Money value",
          "description" : "The value of the issue as a monetary amount. Only applicable if `valueType` is `money`.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "approvingUser" : {
          "type" : "object",
          "title" : "Approving user",
          "description" : "The caller who approved the issue",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "approvalBlockingPoint" : {
          "type" : "object",
          "title" : "Approval blocking point",
          "description" : "The point in the policy lifecycle that the issue has been approved up to",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UWIssueBlockingPoint"
          }
        }
      }
    },
    "UWIssueBase" : {
      "type" : "object",
      "title" : "Underwriting issue base",
      "description" : "Base schema for both `UWIssue` and `UWIssueHistory`",
      "properties" : {
        "approvalBlockingPoint" : {
          "type" : "object",
          "title" : "Approval blocking point",
          "description" : "The point in the policy lifecycle that the issue has been approved up to",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UWIssueBlockingPoint"
          }
        },
        "approvalDurationType" : {
          "type" : "object",
          "title" : "Approval duration type",
          "description" : "How long the approval is valid for",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UWApprovalDurationType"
          }
        },
        "approvalInvalidFrom" : {
          "type" : "string",
          "title" : "Approval invalid from",
          "description" : "The date on which the approval ceases to be valid. Only applicable if `approvalDurationType` is set to a value that specifies a particular amount of time, such as an approval that is valid for one year.",
          "format" : "date-time",
          "readOnly" : true
        },
        "approvingUser" : {
          "type" : "object",
          "title" : "Approving user",
          "description" : "The caller who approved the issue",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "automaticApprovalCause" : {
          "type" : "string",
          "title" : "Automatic approval cause",
          "description" : "An identifier for the specific policy transaction that automatically approved the issue",
          "readOnly" : true
        },
        "blockingPoint" : {
          "type" : "object",
          "title" : "Blocking point",
          "description" : "The default blocking point for the issue's `UWIssueType`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "UWIssueBlockingPoint"
          }
        },
        "canEditApprovalBeforeBind" : {
          "type" : "boolean",
          "title" : "Can edit approval before bind",
          "description" : "A `true` value indicates that this approval can still be edited before the containing `Job` is bound"
        },
        "comparator" : {
          "type" : "object",
          "title" : "Comparator",
          "description" : "Defines both the type of value for the issue and how the issue's value is compared to the approval value to determine if the approval is valid",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ValueComparator"
          }
        },
        "decimalApprovalValue" : {
          "type" : "string",
          "title" : "Decimal approval value",
          "description" : "The value of the issue's approval as a decimal. Only applicable if `valueType` is `decimal`.",
          "format" : "gw-bigdecimal"
        },
        "decimalValue" : {
          "type" : "string",
          "title" : "Decimal value",
          "description" : "The value of the issue as a decimal. Only applicable if `valueType` is `decimal`.",
          "format" : "gw-bigdecimal",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "displayApprovalValue" : {
          "type" : "string",
          "title" : "Display approval value",
          "description" : "The formatted, read-only value of the issue's approval",
          "readOnly" : true
        },
        "displayValue" : {
          "type" : "string",
          "title" : "Display value",
          "description" : "The formatted, read-only value of the issue",
          "readOnly" : true
        },
        "hasApprovalOrRejection" : {
          "type" : "boolean",
          "title" : "Has approval or rejection",
          "description" : "A `true` value indicates that the issue has been either approved or rejected",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "integerApprovalValue" : {
          "type" : "string",
          "title" : "Integer approval value",
          "description" : "The value of the issue's approval as an integer. Only applicable if `valueType` is `integer`.",
          "format" : "gw-biginteger"
        },
        "integerValue" : {
          "type" : "string",
          "title" : "Integer value",
          "description" : "The value of the issue as an integer. Only applicable if `valueType` is `integer`.",
          "format" : "gw-biginteger",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "issueKey" : {
          "type" : "string",
          "title" : "Issue key",
          "description" : "A unique identifier for this issue that combines the type of issue with the policy element the issue applies to, if any",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "issueType" : {
          "type" : "object",
          "title" : "Issue type",
          "description" : "A reference to the `UWIssueType` that defines the type of this issue",
          "$ref" : "#/definitions/policyperiod_UWIssueTypeReference",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "moneyApprovalValue" : {
          "type" : "object",
          "title" : "Money approval value",
          "description" : "The value of the issue's approval as a monetary amount. Only applicable if `valueType` is `money`.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount"
        },
        "moneyValue" : {
          "type" : "object",
          "title" : "Money value",
          "description" : "The value of the issue as a monetary amount. Only applicable if `valueType` is `money`.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "rejected" : {
          "type" : "boolean",
          "title" : "Rejected",
          "description" : "A `true` value indicates that this issue has been rejected",
          "readOnly" : true
        },
        "rejectingUser" : {
          "type" : "object",
          "title" : "Rejecting user",
          "description" : "The caller that rejected this issue",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "stateSetApprovalValue" : {
          "type" : "object",
          "title" : "State set approval value",
          "description" : "The value of the issue's approval as a set of states. Only applicable if `valueType` is `stateset`.",
          "$ref" : "#/definitions/policyperiod_ExclusiveStateSet"
        },
        "stateSetValue" : {
          "type" : "object",
          "title" : "State set value",
          "description" : "The value of the issue as a set of states. Only applicable if `valueType` is `stateset`.",
          "$ref" : "#/definitions/policyperiod_ExclusiveStateSet",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "valueType" : {
          "type" : "string",
          "title" : "Value type",
          "description" : "The type of value for this issue and its approvals. This field will determine which of the value fields is applicable to this issue.",
          "readOnly" : true
        }
      }
    },
    "UWIssueHistory" : {
      "type" : "object",
      "title" : "Underwriting issue history",
      "description" : "A historical record of the prior values of an underwriting issue (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "rejected" : {
          "type" : "boolean",
          "title" : "Rejected",
          "description" : "A `true` value indicates that this issue has been rejected",
          "readOnly" : true
        },
        "automaticApprovalCause" : {
          "type" : "string",
          "title" : "Automatic approval cause",
          "description" : "An identifier for the specific policy transaction that automatically approved the issue",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "hasApprovalOrRejection" : {
          "type" : "boolean",
          "title" : "Has approval or rejection",
          "description" : "A `true` value indicates that the issue has been either approved or rejected",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "decimalValue" : {
          "type" : "string",
          "title" : "Decimal value",
          "description" : "The value of the issue as a decimal. Only applicable if `valueType` is `decimal`.",
          "format" : "gw-bigdecimal",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "approvalInvalidFrom" : {
          "type" : "string",
          "title" : "Approval invalid from",
          "description" : "The date on which the approval ceases to be valid. Only applicable if `approvalDurationType` is set to a value that specifies a particular amount of time, such as an approval that is valid for one year.",
          "format" : "date-time",
          "readOnly" : true
        },
        "displayApprovalValue" : {
          "type" : "string",
          "title" : "Display approval value",
          "description" : "The formatted, read-only value of the issue's approval",
          "readOnly" : true
        },
        "valueType" : {
          "type" : "string",
          "title" : "Value type",
          "description" : "The type of value for this issue and its approvals. This field will determine which of the value fields is applicable to this issue.",
          "readOnly" : true
        },
        "integerValue" : {
          "type" : "string",
          "title" : "Integer value",
          "description" : "The value of the issue as an integer. Only applicable if `valueType` is `integer`.",
          "format" : "gw-biginteger",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "stateSetValue" : {
          "type" : "object",
          "title" : "State set value",
          "description" : "The value of the issue as a set of states. Only applicable if `valueType` is `stateset`.",
          "$ref" : "#/definitions/policyperiod_ExclusiveStateSet",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "createDate" : {
          "type" : "string",
          "title" : "Create date",
          "description" : "The date and time when this version of the issue was created",
          "format" : "date-time",
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "rejectingUser" : {
          "type" : "object",
          "title" : "Rejecting user",
          "description" : "The caller that rejected this issue",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "stateSetApprovalValue" : {
          "type" : "object",
          "title" : "State set approval value",
          "description" : "The value of the issue's approval as a set of states. Only applicable if `valueType` is `stateset`.",
          "$ref" : "#/definitions/policyperiod_ExclusiveStateSet"
        },
        "decimalApprovalValue" : {
          "type" : "string",
          "title" : "Decimal approval value",
          "description" : "The value of the issue's approval as a decimal. Only applicable if `valueType` is `decimal`.",
          "format" : "gw-bigdecimal"
        },
        "issueKey" : {
          "type" : "string",
          "title" : "Issue key",
          "description" : "A unique identifier for this issue that combines the type of issue with the policy element the issue applies to, if any",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "approvalDurationType" : {
          "type" : "object",
          "title" : "Approval duration type",
          "description" : "How long the approval is valid for",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UWApprovalDurationType"
          }
        },
        "displayValue" : {
          "type" : "string",
          "title" : "Display value",
          "description" : "The formatted, read-only value of the issue",
          "readOnly" : true
        },
        "issueType" : {
          "type" : "object",
          "title" : "Issue type",
          "description" : "A reference to the `UWIssueType` that defines the type of this issue",
          "$ref" : "#/definitions/policyperiod_UWIssueTypeReference",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "moneyApprovalValue" : {
          "type" : "object",
          "title" : "Money approval value",
          "description" : "The value of the issue's approval as a monetary amount. Only applicable if `valueType` is `money`.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount"
        },
        "comparator" : {
          "type" : "object",
          "title" : "Comparator",
          "description" : "Defines both the type of value for the issue and how the issue's value is compared to the approval value to determine if the approval is valid",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ValueComparator"
          }
        },
        "integerApprovalValue" : {
          "type" : "string",
          "title" : "Integer approval value",
          "description" : "The value of the issue's approval as an integer. Only applicable if `valueType` is `integer`.",
          "format" : "gw-biginteger"
        },
        "blockingPoint" : {
          "type" : "object",
          "title" : "Blocking point",
          "description" : "The default blocking point for the issue's `UWIssueType`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "UWIssueBlockingPoint"
          }
        },
        "canEditApprovalBeforeBind" : {
          "type" : "boolean",
          "title" : "Can edit approval before bind",
          "description" : "A `true` value indicates that this approval can still be edited before the containing `Job` is bound"
        },
        "moneyValue" : {
          "type" : "object",
          "title" : "Money value",
          "description" : "The value of the issue as a monetary amount. Only applicable if `valueType` is `money`.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "approvingUser" : {
          "type" : "object",
          "title" : "Approving user",
          "description" : "The caller who approved the issue",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "effectiveDate" : {
          "type" : "string",
          "title" : "Effective date",
          "description" : "The effective date and time when the issue applies",
          "format" : "date-time"
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The action that was taken on the issue",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UWIssueHistoryStatus"
          }
        },
        "approvalBlockingPoint" : {
          "type" : "object",
          "title" : "Approval blocking point",
          "description" : "The point in the policy lifecycle that the issue has been approved up to",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "UWIssueBlockingPoint"
          }
        }
      }
    },
    "policyperiod_UWIssueTypeReference" : {
      "type" : "object",
      "title" : "Underwriting issue type reference",
      "description" : "A reference to a `UWIssueType` that represents a type of underwriting issue (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "UWIssueTypeReference"
      },
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `UWIssueType`",
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the `UWIssueType`"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced `UWIssueType` within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "UWReferralReason" : {
      "type" : "object",
      "title" : "Underwriting referral reason",
      "description" : "A reason that a policy has been referred to underwriting (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "required" : [ "issueType" ],
      "properties" : {
        "autoApprovable" : {
          "type" : "boolean",
          "title" : "Auto-approvable",
          "description" : "A `true` value indicates that the referral reason will be automatically approved during appropriate lifecycle actions if the caller has sufficient authority. Reasons that are not auto-approvable must be manually approved instead.",
          "readOnly" : true
        },
        "blockingPoint" : {
          "type" : "object",
          "title" : "Blocking point",
          "description" : "The default blocking point for the referral reason's `UWIssueType`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "UWIssueBlockingPoint"
          }
        },
        "comparator" : {
          "type" : "object",
          "title" : "Comparator",
          "description" : "Defines both the type of value for the referral reason and how the reason's value is compared to the approval value to determine if the approval is valid",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ValueComparator"
          }
        },
        "decimalValue" : {
          "type" : "string",
          "title" : "Decimal value",
          "description" : "The value of the referral reason as a decimal. Only applicable if `valueType` is `decimal`.",
          "format" : "gw-bigdecimal"
        },
        "displayValue" : {
          "type" : "string",
          "title" : "Display value",
          "description" : "The formatted, read-only value of this referral reason",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "integerValue" : {
          "type" : "string",
          "title" : "Integer value",
          "description" : "The value of the referral reason as an integer. Only applicable if `valueType` is `integer`.",
          "format" : "gw-biginteger"
        },
        "issueKey" : {
          "type" : "string",
          "title" : "Issue key",
          "description" : "A unique identifier for this referral reason that combines the type of the reason with the policy element the reason applies to, if any",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "issueType" : {
          "type" : "object",
          "title" : "Issue type",
          "description" : "A reference to the `UWIssueType` that defines the type of this referral reason",
          "$ref" : "#/definitions/policyperiod_UWIssueTypeReference"
        },
        "longDescription" : {
          "type" : "string",
          "title" : "Long description",
          "description" : "A longer description of the reason for the referral to underwriting",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "moneyValue" : {
          "type" : "object",
          "title" : "Money value",
          "description" : "The value of the referral reason as a monetary amount. Only applicable if `valueType` is `money`.",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount"
        },
        "shortDescription" : {
          "type" : "string",
          "title" : "Short description",
          "description" : "A short description of the reason for the referral to underwriting",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "stateSetValue" : {
          "type" : "object",
          "title" : "State set value",
          "description" : "The value of the referral reason as a set of states. Only applicable if `valueType` is `stateset`.",
          "$ref" : "#/definitions/policyperiod_ExclusiveStateSet"
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The current status of this referral reason, such as `Open` or `Closed`",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "UWReferralReasonStatus"
          }
        },
        "valueType" : {
          "type" : "string",
          "title" : "Value type",
          "description" : "The type of value for this referral reason. This field will determine which of the value fields is applicable to this referral reason.",
          "readOnly" : true
        }
      }
    },
    "VehicleDriver" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "percentageDriven" : {
          "type" : "integer",
          "title" : "PercentageDriven",
          "description" : "PercentageDriven",
          "minimum" : 0,
          "maximum" : 100
        },
        "policyDriver" : {
          "type" : "object",
          "title" : "PolicyDriver",
          "description" : "PolicyDriver",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "resourceType" : "PolicyContact"
          }
        }
      }
    },
    "WCAircraftSeat" : {
      "type" : "object",
      "properties" : {
        "aircraftNumber" : {
          "type" : "string",
          "title" : "AircraftNumber",
          "description" : "AircraftNumber",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        },
        "passengerSeats" : {
          "type" : "integer",
          "title" : "PassengerSeats",
          "description" : "PassengerSeats",
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true,
          "minimum" : 0
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "State",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        }
      }
    },
    "WCClassCodeReference" : {
      "type" : "object",
      "properties" : {
        "basis" : {
          "type" : "object",
          "title" : "Basis",
          "description" : "Basis",
          "$ref" : "#/definitions/ClassCodeBasis"
        },
        "classification" : {
          "type" : "string",
          "title" : "Classification",
          "description" : "Classification",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "Code",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        },
        "wcDomain" : {
          "type" : "string",
          "title" : "WCDomain",
          "description" : "WCDomain",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        }
      }
    },
    "WCCoveredEmployee" : {
      "type" : "object",
      "properties" : {
        "addedDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "classCode" : {
          "type" : "object",
          "title" : "ClassCode",
          "description" : "ClassCode",
          "$ref" : "#/definitions/WCClassCodeReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifAnyExposure" : {
          "type" : "boolean",
          "title" : "IfAnyExposure",
          "description" : "IfAnyExposure"
        },
        "isFedCoveredEmployee" : {
          "type" : "boolean",
          "title" : "IsFedCoveredEmployee",
          "description" : "IsFedCoveredEmployee",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "location" : {
          "type" : "object",
          "title" : "Location",
          "description" : "Location",
          "$ref" : "#/definitions/policyperiod_SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "resourceType" : "PolicyLocation"
          }
        },
        "railroadOrVessel" : {
          "type" : "string",
          "title" : "RailroadOrVessel",
          "description" : "RailroadOrVessel",
          "x-gw-nullable" : true
        },
        "removedDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "specialCov" : {
          "type" : "object",
          "title" : "SpecialCov",
          "description" : "SpecialCov",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "typelist" : "SpecialCov"
          }
        },
        "splits" : {
          "type" : "object",
          "$ref" : "#/definitions/WCCoveredEmployeeSplitsMap"
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "State",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "State"
          }
        }
      }
    },
    "WCCoveredEmployeeSplit" : {
      "type" : "object",
      "properties" : {
        "basisAmount" : {
          "type" : "integer",
          "title" : "BasisAmount",
          "description" : "BasisAmount",
          "x-gw-nullable" : true
        },
        "numEmployees" : {
          "type" : "integer",
          "title" : "NumEmployees",
          "description" : "NumEmployees",
          "minimum" : 0,
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true
        },
        "endDate" : {
          "type" : "string",
          "title" : "End date",
          "description" : "The date and time that marks the end of the period of time that this split covers",
          "format" : "date-time",
          "readOnly" : true
        },
        "startDate" : {
          "type" : "string",
          "title" : "Start date",
          "description" : "The date and time that marks the beginning of the period of time that this split covers",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "WCCoveredEmployeeSplitsMap" : {
      "type" : "object",
      "additionalProperties" : {
        "type" : "object",
        "$ref" : "#/definitions/WCCoveredEmployeeSplit"
      }
    },
    "WCExcludedWorkplace" : {
      "type" : "object",
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "title" : "AddressLine1",
          "description" : "AddressLine1",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "AddressLine2",
          "description" : "AddressLine2",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "City",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "excludedItem" : {
          "type" : "string",
          "title" : "ExcludedItem",
          "description" : "ExcludedItem",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "State",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        }
      }
    },
    "WCJurisdiction" : {
      "type" : "object",
      "properties" : {
        "anniversaryDate" : {
          "type" : "string",
          "title" : "AnniversaryDate",
          "description" : "AnniversaryDate",
          "format" : "date-time",
          "readOnly" : true
        },
        "ratingPeriods" : {
          "type" : "object",
          "$ref" : "#/definitions/RatingPeriodMap"
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "State",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "Jurisdiction"
          }
        }
      }
    },
    "WCParticipatingPlan" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "lossConversionFactor" : {
          "type" : "string",
          "title" : "LossConversionFactor",
          "description" : "LossConversionFactor",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "planID" : {
          "type" : "object",
          "title" : "PlanID",
          "description" : "PlanID",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "WCParticipatingPlanID"
          }
        },
        "retention" : {
          "type" : "string",
          "title" : "Retention",
          "description" : "Retention",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        }
      }
    },
    "WCRetroRatingLetterOfCredit" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "object",
          "title" : "Amount",
          "description" : "Amount",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string"
        },
        "issuerName" : {
          "type" : "string",
          "title" : "IssuerName",
          "description" : "IssuerName",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "validFrom" : {
          "type" : "string",
          "title" : "ValidFrom",
          "description" : "ValidFrom",
          "format" : "date-time"
        },
        "validTo" : {
          "type" : "string",
          "title" : "ValidTo",
          "description" : "ValidTo",
          "format" : "date-time"
        }
      }
    },
    "WCRetrospectiveRatingPlan" : {
      "type" : "object",
      "properties" : {
        "basicPremiumFactor1" : {
          "type" : "string",
          "title" : "BasicPremiumFactor1",
          "description" : "BasicPremiumFactor1",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "basicPremiumFactor2" : {
          "type" : "string",
          "title" : "BasicPremiumFactor2",
          "description" : "BasicPremiumFactor2",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "basicPremiumFactor3" : {
          "type" : "string",
          "title" : "BasicPremiumFactor3",
          "description" : "BasicPremiumFactor3",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "computationInterval" : {
          "type" : "integer",
          "title" : "ComputationInterval",
          "description" : "ComputationInterval",
          "x-gw-nullable" : true
        },
        "estimatedStandardPremium" : {
          "type" : "object",
          "title" : "EstimatedStandardPremium",
          "description" : "EstimatedStandardPremium",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-nullable" : true
        },
        "firstComputationDate" : {
          "type" : "string",
          "title" : "FirstComputationDate",
          "description" : "FirstComputationDate",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string"
        },
        "includeALAE" : {
          "type" : "boolean",
          "title" : "IncludeALAE",
          "description" : "IncludeALAE",
          "x-gw-nullable" : true
        },
        "lastComputationDate" : {
          "type" : "string",
          "title" : "LastComputationDate",
          "description" : "LastComputationDate",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "lossConversionFactor" : {
          "type" : "string",
          "title" : "LossConversionFactor",
          "description" : "LossConversionFactor",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "lossLimitAmount" : {
          "type" : "object",
          "title" : "LossLimitAmount",
          "description" : "LossLimitAmount",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-nullable" : true
        },
        "maxRetroPremiumRatio" : {
          "type" : "string",
          "title" : "MaxRetroPremiumRatio",
          "description" : "MaxRetroPremiumRatio",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "minRetroPremiumRatio" : {
          "type" : "string",
          "title" : "MinRetroPremiumRatio",
          "description" : "MinRetroPremiumRatio",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "percentStandardPremium1" : {
          "type" : "string",
          "title" : "PercentStandardPremium1",
          "description" : "PercentStandardPremium1",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "percentStandardPremium2" : {
          "type" : "string",
          "title" : "PercentStandardPremium2",
          "description" : "PercentStandardPremium2",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "percentStandardPremium3" : {
          "type" : "string",
          "title" : "PercentStandardPremium3",
          "description" : "PercentStandardPremium3",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        }
      }
    },
    "WCStateMultiplier" : {
      "type" : "object",
      "properties" : {
        "federalExcessLossFactor" : {
          "type" : "string",
          "title" : "FederalExcessLossFactor",
          "description" : "FederalExcessLossFactor",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "federalTaxMultiplier" : {
          "type" : "string",
          "title" : "FederalTaxMultiplier",
          "description" : "FederalTaxMultiplier",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string"
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "State",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "stateExcessLossFactor" : {
          "type" : "string",
          "title" : "StateExcessLossFactor",
          "description" : "StateExcessLossFactor",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        },
        "stateTaxMultiplier" : {
          "type" : "string",
          "title" : "StateTaxMultiplier",
          "description" : "StateTaxMultiplier",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        }
      }
    },
    "WCWaiverOfSubro" : {
      "type" : "object",
      "properties" : {
        "basisAmount" : {
          "type" : "integer",
          "title" : "BasisAmount",
          "description" : "BasisAmount",
          "x-gw-nullable" : true
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Description",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string"
        },
        "ifAnyExposure" : {
          "type" : "boolean",
          "title" : "IfAnyExposure",
          "description" : "IfAnyExposure",
          "x-gw-nullable" : true
        },
        "jobID" : {
          "type" : "string",
          "title" : "JobID",
          "description" : "JobID",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "numEmployees" : {
          "type" : "integer",
          "title" : "NumEmployees",
          "description" : "NumEmployees",
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true,
          "minimum" : 0
        },
        "specialCov" : {
          "type" : "object",
          "title" : "SpecialCov",
          "description" : "SpecialCov",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "SpecialCov"
          }
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "State",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "type" : {
          "type" : "object",
          "title" : "Type",
          "description" : "Type",
          "$ref" : "#/definitions/policyperiod_TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "WaiverOfSubrogationType"
          }
        }
      }
    },
    "WorkersCompLine" : {
      "type" : "object",
      "properties" : {
        "governingClass" : {
          "type" : "object",
          "title" : "GoverningClass",
          "description" : "GoverningClass",
          "$ref" : "#/definitions/WCClassCodeReference",
          "readOnly" : true
        },
        "manuscriptOptionDesc" : {
          "type" : "string",
          "title" : "ManuscriptOptionDesc",
          "description" : "ManuscriptOptionDesc",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 65000
        },
        "manuscriptPremium" : {
          "type" : "object",
          "title" : "ManuscriptPremium",
          "description" : "ManuscriptPremium",
          "$ref" : "#/definitions/policyperiod_MonetaryAmount",
          "x-gw-nullable" : true
        },
        "numAddInsured" : {
          "type" : "integer",
          "title" : "NumAddInsured",
          "description" : "NumAddInsured",
          "x-gw-nullable" : true
        },
        "pattern" : {
          "type" : "object",
          "$ref" : "#/definitions/ProductModelReference",
          "readOnly" : true
        },
        "patternCode" : {
          "type" : "string",
          "title" : "PatternCode",
          "description" : "PatternCode",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        }
      }
    },
    "ErrorDetails" : {
      "type" : "object",
      "properties" : {
        "lineNumber" : {
          "type" : "integer"
        },
        "message" : {
          "type" : "string"
        },
        "parameterLocation" : {
          "type" : "string"
        },
        "parameterName" : {
          "type" : "string"
        },
        "stackTrace" : {
          "type" : "string"
        }
      }
    },
    "ErrorInfo" : {
      "type" : "object",
      "properties" : {
        "details" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ErrorDetails"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "developerMessage" : {
          "type" : "string"
        },
        "statusCode" : {
          "type" : "integer"
        },
        "userMessage" : {
          "type" : "string"
        }
      }
    }
  }
}
