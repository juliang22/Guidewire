{
  "swagger" : "2.0",
  "info" : {
    "title" : "Claim API",
    "description" : "APIs for claims and related objects",
    "version" : "1.4.0"
  },
  "host" : "cc-aaaracqpoc-salesdemo.guidewire.galileo-andromeda.guidewire.net:443",
  "basePath" : "/rest/claim/v1",
  "schemes" : [ "https" ],
  "paths" : {
    "/batch" : {
      "post" : {
        "summary" : "Issue multiple requests at once as a non-transactional batch",
        "description" : "Post a list of subrequests to make against this endpoint. Subrequests will be executed serially, in the order they are specified in the \"requests\" property of the input. Responses to each subrequest will then be batched up and returned all together. Subrequests inherit the headers from the main request, with the exception of the GW-Checksum header, but headers can be specified on the subrequest and will override any headers from the main request.",
        "operationId" : "batchRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "includeResponseHeaders",
          "in" : "query",
          "description" : "Controls what response headers, if any, are included for subresponses. If unspecified, or set to the value \"*all\", all headers for subresponses will be returned. If set to the value \"*none\", no headers for subresponses will be returned. Otherwise, this parameter can consist of a comma-separated list of the names of headers that should be included on subresponses.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "The body of the batch request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BatchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The batch request itself was well-formed; individual subrequests may have succeeded or failed",
            "schema" : {
              "$ref" : "#/definitions/BatchResponse"
            }
          }
        }
      }
    },
    "/claim-infos" : {
      "get" : {
        "summary" : "Retrieves a list of claim infos",
        "description" : "Retrieves a list of claim infos (Since 1.3.1)",
        "operationId" : "getClaimInfos",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.1",
        "x-gw-extensions" : {
          "childResourceType" : "ClaimInfo",
          "operationType" : "get-collection",
          "resourceType" : "ClaimInfos"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of claim infos",
            "schema" : {
              "$ref" : "#/definitions/ClaimInfosList"
            }
          }
        }
      }
    },
    "/claim-infos/{claimInfoId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimInfoId"
      } ],
      "get" : {
        "summary" : "Retrieve a claim info",
        "description" : "Retrieve a claim info (Since 1.3.1)",
        "operationId" : "getClaimInfo",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.1",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ClaimInfo"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ClaimInfoResponse"
            }
          }
        }
      }
    },
    "/claim-infos/{claimInfoId}/retrieve" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimInfoId"
      } ],
      "post" : {
        "summary" : "Retrieve a claim",
        "description" : "Retrieve a claim (Since 1.3.1)",
        "operationId" : "retrieveClaim",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.1",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "ClaimInfo"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "schema" : {
              "$ref" : "#/definitions/ClaimInfoResponse"
            }
          }
        }
      }
    },
    "/claims" : {
      "get" : {
        "summary" : "Retrieves a list of claims",
        "description" : "Retrieves a list of assigned claims",
        "operationId" : "getClaims",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Claim",
          "operationType" : "get-collection",
          "resourceType" : "Claims"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of claims",
            "schema" : {
              "$ref" : "#/definitions/ClaimsList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new draft claim",
        "description" : "Create a new draft claim",
        "operationId" : "createClaim",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Claim",
          "operationType" : "post-collection",
          "resourceType" : "Claims"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClaimRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/ClaimResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve a claim",
        "description" : "Retrieve a claim",
        "operationId" : "getClaim",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "Claim"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ClaimResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a claim",
        "description" : "Update a claim",
        "operationId" : "patchClaim",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "Claim"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClaimRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ClaimResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/activities" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Returns a list of activities associated with this claim",
        "description" : "Returns a list of activities associated with this claim",
        "operationId" : "getClaimActivities",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Activity",
          "operationType" : "get-collection",
          "resourceType" : "ClaimActivities"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of activities",
            "schema" : {
              "$ref" : "#/definitions/ActivityList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a new activity associated with this claim",
        "description" : "Creates a new activity associated with this claim",
        "operationId" : "createClaimActivity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Activity",
          "operationType" : "post-collection",
          "resourceType" : "ClaimActivities"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Returns the details for the newly-created activity",
            "schema" : {
              "$ref" : "#/definitions/ActivityResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/activity-assignees" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The list of suggested people, groups, queues, etc. that new activities on this claim can be assigned to",
        "description" : "The list of suggested people, groups, queues, etc. that new activities on this claim can be assigned to\n",
        "operationId" : "getClaimActivityAssignees",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Assignee",
          "operationType" : "get-collection",
          "resourceType" : "ClaimActivityAssignees"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "The suggested assignees",
            "schema" : {
              "$ref" : "#/definitions/AssigneeList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/activity-patterns" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Returns a list of activity patterns that can be used to create activities on this claim",
        "description" : "Returns a list of activity patterns that can be used to create activities on this claim",
        "operationId" : "getClaimActivityPatterns",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "ActivityPattern",
          "operationType" : "get-collection",
          "resourceType" : "ClaimActivityPatterns"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of activities",
            "schema" : {
              "$ref" : "#/definitions/ActivityPatternList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/assessment-summaries" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve a collection of assessment summaries",
        "description" : "Retrieve a collection of assessment summaries (Since 1.4.0)",
        "operationId" : "getAssessmentSummaries",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "AssessmentSummary",
          "operationType" : "get-collection",
          "resourceType" : "AssessmentSummaries"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/AssessmentSummaryList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new assessment summary",
        "description" : "Create a new assessment summary (Since 1.4.0)",
        "operationId" : "createAssessmentSummary",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "AssessmentSummary",
          "operationType" : "post-collection",
          "resourceType" : "AssessmentSummaries"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AssessmentSummaryRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "The details of the newly-created AssessmentSummary",
            "schema" : {
              "$ref" : "#/definitions/AssessmentSummaryResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/assessment-summaries/{assessmentSummaryId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/assessmentSummaryId"
      } ],
      "get" : {
        "summary" : "Retrieve details of an assessment summary",
        "description" : "Retrieve details of an assessment summary (Since 1.4.0)",
        "operationId" : "getAssessmentSummary",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "AssessmentSummary"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/AssessmentSummaryResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/assign" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "post" : {
        "summary" : "Assign claim to a user or a group",
        "description" : "Assign claim to a user or a group (Since 1.2.0)",
        "operationId" : "assignClaim",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Claim"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClaimAssignmentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully assigned the claim",
            "schema" : {
              "$ref" : "#/definitions/ClaimResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/cancel" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "post" : {
        "summary" : "Cancels and removes the given claim; only allowed on draft claims.",
        "description" : "Cancels and removes the given claim; only allowed on draft claims.",
        "operationId" : "cancel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Claim"
        },
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/check-sets" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of check sets",
        "description" : "Retrieve a list of check sets (Since 1.3.0)",
        "operationId" : "getCheckSets",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "CheckSet",
          "operationType" : "get-collection",
          "resourceType" : "CheckSets"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of CheckSets",
            "schema" : {
              "$ref" : "#/definitions/CheckSetList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new check set with payments",
        "description" : "Create a new check set with payments (Since 1.3.0)",
        "operationId" : "createCheckSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "CheckSet",
          "operationType" : "post-collection",
          "resourceType" : "CheckSets"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckSetRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/CheckSetResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/check-sets/{checkSetId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/checkSetId"
      } ],
      "get" : {
        "summary" : "Retrieve details of a check set",
        "description" : "Retrieve details of a check set (Since 1.3.0)",
        "operationId" : "getCheckSet",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "CheckSet"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CheckSetResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/checks" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of checks",
        "description" : "Retrieve a list of checks (Since 1.3.0)",
        "operationId" : "getChecks",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Check",
          "operationType" : "get-collection",
          "resourceType" : "Checks"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of checks",
            "schema" : {
              "$ref" : "#/definitions/CheckList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/checks/{checkId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/checkId"
      } ],
      "get" : {
        "summary" : "Retrieve details of a check",
        "description" : "Retrieve details of a check (Since 1.3.0)",
        "operationId" : "getCheck",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "Check"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CheckResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a check",
        "description" : "Update a check (Since 1.3.0)",
        "operationId" : "patchCheck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "patch-element",
          "resourceType" : "Check"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CheckResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a check",
        "description" : "Delete a check (Since 1.3.0)",
        "operationId" : "deleteCheck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "delete-element",
          "resourceType" : "Check"
        },
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/checks/{checkId}/acknowledge-submission" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/checkId"
      } ],
      "post" : {
        "summary" : "Acknowledge the submission of this check",
        "description" : "Acknowledge the submission of this check (Since 1.3.0)",
        "operationId" : "checkAcknowledgeSubmission",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "Check"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully acknowledged the check's submission",
            "schema" : {
              "$ref" : "#/definitions/CheckResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/checks/{checkId}/mark-cleared" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/checkId"
      } ],
      "post" : {
        "summary" : "Mark check as cleared this check",
        "description" : "Mark check as cleared (Since 1.3.0)",
        "operationId" : "checkMarkCleared",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "Check"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully marked this check as cleared",
            "schema" : {
              "$ref" : "#/definitions/CheckResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/checks/{checkId}/mark-issued" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/checkId"
      } ],
      "post" : {
        "summary" : "Mark check as issued",
        "description" : "Mark check as issued (Since 1.3.0)",
        "operationId" : "checkMarkIssued",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "Check"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully marked this check as issued",
            "schema" : {
              "$ref" : "#/definitions/CheckResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/checks/{checkId}/mark-stopped" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/checkId"
      } ],
      "post" : {
        "summary" : "Mark check as stopped",
        "description" : "Mark check as stopped (Since 1.3.0)",
        "operationId" : "checkMarkStopped",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "Check"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully marked this check as stopped",
            "schema" : {
              "$ref" : "#/definitions/CheckResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/checks/{checkId}/mark-voided" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/checkId"
      } ],
      "post" : {
        "summary" : "Mark check as voided",
        "description" : "Mark check as voided (Since 1.3.0)",
        "operationId" : "checkMarkVoided",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "Check"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully marked this check as voided",
            "schema" : {
              "$ref" : "#/definitions/CheckResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/checks/{checkId}/request-stop" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/checkId"
      } ],
      "post" : {
        "summary" : "Request to stop this check",
        "description" : "Request to stop this check (Since 1.3.0)",
        "operationId" : "checkRequestStop",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "Check"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully requested to stop this check",
            "schema" : {
              "$ref" : "#/definitions/CheckResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/checks/{checkId}/request-void" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/checkId"
      } ],
      "post" : {
        "summary" : "Request to void this check",
        "description" : "Request to void this check (Since 1.3.0)",
        "operationId" : "checkRequestVoid",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "Check"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully requested to void this check",
            "schema" : {
              "$ref" : "#/definitions/CheckResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/close" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "post" : {
        "summary" : "Close this claim and transition it to the 'closed' state",
        "description" : "Close this claim and transition it to the 'closed' state",
        "operationId" : "closeClaim",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Claim"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClaimCloseRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully closed the claim",
            "schema" : {
              "$ref" : "#/definitions/ClaimResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/contact-role-owners" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The contact role owners associated with a given claim, including incidents, exposures, policy, and more.",
        "description" : "The contact role owners associated with a given claim. This includes the claim, policy, incidents, exposures, matters, negotiations, and evaluations. Worker's comp injury incidents are not included.\n",
        "operationId" : "getClaimContactRoleOwners",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "GenericRelation",
          "operationType" : "get-collection",
          "resourceType" : "ClaimContactRoleOwners"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GenericRelationList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/contacts" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The contacts associated with a given claim",
        "description" : "The contacts associated with a given claim",
        "operationId" : "getClaimContacts",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "ClaimContact",
          "operationType" : "get-collection",
          "resourceType" : "ClaimContacts"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ClaimContactList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new contact on the given claim",
        "description" : "Create a new contact on the given claim",
        "operationId" : "createClaimContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "ClaimContact",
          "operationType" : "post-collection",
          "resourceType" : "ClaimContacts"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContactRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created",
            "schema" : {
              "$ref" : "#/definitions/ContactResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/contacts/{contactId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/contactId"
      } ],
      "get" : {
        "summary" : "The details of a specific contact",
        "description" : "The details of a specific contact",
        "operationId" : "getClaimContact",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ClaimContact"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ContactResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update the details of the specific contact on the given claim",
        "description" : "Update the details of the specific contact on the given claim",
        "operationId" : "patchClaimContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "ClaimContact"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContactRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "schema" : {
              "$ref" : "#/definitions/ContactResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a contact on the given claim",
        "description" : "Delete a contact on the given claim",
        "operationId" : "deleteClaimContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "delete-element",
          "resourceType" : "ClaimContact"
        },
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/documents" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The documents associated with a given claim",
        "description" : "The documents associated with a given claim",
        "operationId" : "getClaimDocuments",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "ClaimDocument",
          "operationType" : "get-collection",
          "resourceType" : "ClaimDocuments"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DocumentList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new document on the given claim",
        "description" : "Create a new document on the given claim",
        "operationId" : "createClaimDocument",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "ClaimDocument",
          "operationType" : "post-collection",
          "resourceType" : "ClaimDocuments"
        },
        "parameters" : [ {
          "name" : "metadata",
          "in" : "formData",
          "required" : true,
          "type" : "string",
          "x-gw-schema-ref" : "#/definitions/ClaimDocumentRequest"
        }, {
          "name" : "content",
          "in" : "formData",
          "type" : "file"
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created",
            "schema" : {
              "$ref" : "#/definitions/ClaimDocumentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/documents/{documentId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/documentId"
      } ],
      "get" : {
        "summary" : "The details of a specific document",
        "description" : "The details of a specific document",
        "operationId" : "getClaimDocument",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ClaimDocument"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ClaimDocumentResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a document on the given claim",
        "description" : "Update a document on the given claim",
        "operationId" : "patchClaimDocument",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "ClaimDocument"
        },
        "parameters" : [ {
          "name" : "metadata",
          "in" : "formData",
          "type" : "string",
          "x-gw-schema-ref" : "#/definitions/ClaimDocumentRequest"
        }, {
          "name" : "content",
          "in" : "formData",
          "type" : "file"
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "schema" : {
              "$ref" : "#/definitions/ClaimDocumentResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a document on the given claim",
        "description" : "Delete a document on the given claim",
        "operationId" : "deleteClaimDocument",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "delete-element",
          "resourceType" : "ClaimDocument"
        },
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/documents/{documentId}/content" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/documentId"
      } ],
      "get" : {
        "summary" : "The contents of a document",
        "description" : "The contents of a document",
        "operationId" : "getDocumentContent",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ClaimDocumentContent"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DocumentContentsResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/dwelling-incidents" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve dwelling incidents on a claim",
        "description" : "Retrieve dwelling incidents on a claim",
        "operationId" : "getDwellingIncidents",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "DwellingIncident",
          "operationType" : "get-collection",
          "resourceType" : "ClaimDwellingIncidents"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DwellingIncidentList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new dwelling incident",
        "description" : "Create a new dwelling incident",
        "operationId" : "createClaimDwellingIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "DwellingIncident",
          "operationType" : "post-collection",
          "resourceType" : "ClaimDwellingIncidents"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DwellingIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created",
            "schema" : {
              "$ref" : "#/definitions/DwellingIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/dwelling-incidents/{incidentId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/incidentId"
      } ],
      "get" : {
        "summary" : "Retrieve a dwelling incident",
        "description" : "Retrieve a dwelling incident",
        "operationId" : "getDwellingIncident",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "DwellingIncident"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DwellingIncidentResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a dwelling incident",
        "description" : "Update a dwelling incident",
        "operationId" : "patchDwellingIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "DwellingIncident"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DwellingIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "schema" : {
              "$ref" : "#/definitions/DwellingIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/exposures" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The exposures associated with a given claim",
        "description" : "The exposures associated with a given claim",
        "operationId" : "getClaimExposures",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Exposure",
          "operationType" : "get-collection",
          "resourceType" : "ClaimExposures"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ExposuresList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new exposure on the given claim",
        "description" : "Create a new exposure on the given claim",
        "operationId" : "createClaimExposure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Exposure",
          "operationType" : "post-collection",
          "resourceType" : "ClaimExposures"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExposureRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created",
            "schema" : {
              "$ref" : "#/definitions/ExposureResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/exposures/{exposureId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/exposureId"
      } ],
      "get" : {
        "summary" : "The details of a specific exposure",
        "description" : "The details of a specific exposure",
        "operationId" : "getExposure",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "Exposure"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ExposureResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update the details of the specific exposure on the given claim",
        "description" : "Update the details of the specific exposure on the given claim",
        "operationId" : "patchExposure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "Exposure"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExposureRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "schema" : {
              "$ref" : "#/definitions/ExposureResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete the draft exposure",
        "description" : "Delete the draft exposure",
        "operationId" : "deleteExposure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "delete-element",
          "resourceType" : "Exposure"
        },
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/exposures/{exposureId}/assign" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/exposureId"
      } ],
      "post" : {
        "summary" : "Assign exposure to a user or a group",
        "description" : "Assign exposure to a user or a group (Since 1.2.0)",
        "operationId" : "assignExposure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Exposure"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExposureAssignmentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully assigned the exposure",
            "schema" : {
              "$ref" : "#/definitions/ExposureResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/exposures/{exposureId}/close" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/exposureId"
      } ],
      "post" : {
        "summary" : "Close the exposure",
        "description" : "Close the exposure",
        "operationId" : "closeExposure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Exposure"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExposureCloseRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully closed the exposure",
            "schema" : {
              "$ref" : "#/definitions/ExposureResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/exposures/{exposureId}/validate" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/exposureId"
      } ],
      "post" : {
        "summary" : "Validate the exposure",
        "description" : "Validate the exposure",
        "operationId" : "validateExposure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Exposure"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExposureValidationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ExposureValidationResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/fixed-property-incidents" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The fixed property incidents associated with a given claim",
        "description" : "The fixed property incidents associated with a given claim",
        "operationId" : "getClaimFixedPropertyIncidents",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "FixedPropertyIncident",
          "operationType" : "get-collection",
          "resourceType" : "ClaimFixedPropertyIncidents"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FixedPropertyIncidentList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new fixed property incident on the given claim",
        "description" : "Create a new fixed property incident on the given claim",
        "operationId" : "createClaimFixedPropertyIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "FixedPropertyIncident",
          "operationType" : "post-collection",
          "resourceType" : "ClaimFixedPropertyIncidents"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FixedPropertyIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created",
            "schema" : {
              "$ref" : "#/definitions/FixedPropertyIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/fixed-property-incidents/{incidentId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/incidentId"
      } ],
      "get" : {
        "summary" : "The details of a specific fixed property incident",
        "description" : "The details of a specific fixed property incident",
        "operationId" : "getFixedPropertyIncident",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "FixedPropertyIncident"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FixedPropertyIncidentResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update the details of a specific fixed property incident",
        "description" : "Update the details of a specific fixed property incident",
        "operationId" : "patchFixedPropertyIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "FixedPropertyIncident"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FixedPropertyIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "schema" : {
              "$ref" : "#/definitions/FixedPropertyIncidentResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a fixed property incident on the given claim",
        "description" : "Delete a fixed property incident on the given claim",
        "operationId" : "deleteFixedPropertyIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "delete-element",
          "resourceType" : "FixedPropertyIncident"
        },
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/injury-incidents" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The injury incidents associated with a given claim",
        "description" : "The injury incidents associated with a given claim",
        "operationId" : "getClaimInjuryIncidents",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "InjuryIncident",
          "operationType" : "get-collection",
          "resourceType" : "ClaimInjuryIncidents"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/InjuryIncidentList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new injury incident on the given claim",
        "description" : "Create a new injury incident on the given claim",
        "operationId" : "createClaimInjuryIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "InjuryIncident",
          "operationType" : "post-collection",
          "resourceType" : "ClaimInjuryIncidents"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InjuryIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created",
            "schema" : {
              "$ref" : "#/definitions/InjuryIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/injury-incidents/{incidentId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/incidentId"
      } ],
      "get" : {
        "summary" : "The details of a specific injury incident",
        "description" : "The details of a specific injury incident",
        "operationId" : "getInjuryIncident",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "InjuryIncident"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/InjuryIncidentResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update the details of a specific injury incident",
        "description" : "Update the details of a specific injury incident",
        "operationId" : "patchInjuryIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "InjuryIncident"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InjuryIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "schema" : {
              "$ref" : "#/definitions/InjuryIncidentResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete an injury incident on the given claim",
        "description" : "Delete an injury incident on the given claim",
        "operationId" : "deleteInjuryIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "delete-element",
          "resourceType" : "InjuryIncident"
        },
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/intake-interactions" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The intake interactions associated with a given claim",
        "description" : "The intake interactions associated with a given claim (Since 1.3.0)",
        "operationId" : "getClaimIntakeInteractions",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "IntakeInteraction",
          "operationType" : "get-collection",
          "resourceType" : "ClaimIntakeInteractions"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/IntakeInteractionsList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new intake interaction on the given claim",
        "description" : "Create a new intake interaction on the given claim (Since 1.3.0)",
        "operationId" : "createIntakeInteraction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "IntakeInteraction",
          "operationType" : "post-collection",
          "resourceType" : "ClaimIntakeInteractions"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IntakeInteractionRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created",
            "schema" : {
              "$ref" : "#/definitions/IntakeInteractionResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/intake-interactions/{interactionId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/interactionId"
      } ],
      "get" : {
        "summary" : "The details of a specific intake interaction",
        "description" : "The details of a specific intake interaction (Since 1.3.0)",
        "operationId" : "getIntakeInteraction",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "IntakeInteraction"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/IntakeInteractionResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update the details of a specific intake interaction",
        "description" : "Update the details of a specific intake interaction (Since 1.3.0)",
        "operationId" : "patchIntakeInteraction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "IntakeInteraction"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IntakeInteractionRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "schema" : {
              "$ref" : "#/definitions/IntakeInteractionResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/living-expenses-incidents" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve living expense incidents on a claim",
        "description" : "Retrieve living expense incidents on a claim",
        "operationId" : "getLivingExpensesIncidents",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "LivingExpensesIncident",
          "operationType" : "get-collection",
          "resourceType" : "ClaimLivingExpensesIncidents"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LivingExpensesIncidentList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new living expense incident",
        "description" : "Create a new living expense incident",
        "operationId" : "createClaimLivingExpensesIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "LivingExpensesIncident",
          "operationType" : "post-collection",
          "resourceType" : "ClaimLivingExpensesIncidents"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LivingExpensesIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created",
            "schema" : {
              "$ref" : "#/definitions/LivingExpensesIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/living-expenses-incidents/{incidentId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/incidentId"
      } ],
      "get" : {
        "summary" : "Retrieve a living expense incident",
        "description" : "Retrieve a living expense incident",
        "operationId" : "getLivingExpensesIncident",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "LivingExpensesIncident"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LivingExpensesIncidentResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a living expense incident",
        "description" : "Update a living expense incident",
        "operationId" : "patchLivingExpensesIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "LivingExpensesIncident"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LivingExpensesIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "schema" : {
              "$ref" : "#/definitions/LivingExpensesIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/notes" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The notes associated with a given claim",
        "description" : "The notes associated with a given claim",
        "operationId" : "getClaimNotes",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Note",
          "operationType" : "get-collection",
          "resourceType" : "ClaimNotes"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/NoteList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new note on this claim",
        "description" : "Create a new note on this claim",
        "operationId" : "createClaimNote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Note",
          "operationType" : "post-collection",
          "resourceType" : "ClaimNotes"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NoteRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "The details of the newly-created note",
            "schema" : {
              "$ref" : "#/definitions/NoteResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/other-structure-incidents" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve a collection of other structure incidents",
        "description" : "Retrieve a collection of other structure incidents (Since 1.4.0)",
        "operationId" : "getOtherStructureIncidents",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "OtherStructureIncident",
          "operationType" : "get-collection",
          "resourceType" : "ClaimOtherStructureIncidents"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/OtherStructureIncidentList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new other structure incident",
        "description" : "Create a new other structure incident (Since 1.4.0)",
        "operationId" : "createOtherStructureIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "OtherStructureIncident",
          "operationType" : "post-collection",
          "resourceType" : "ClaimOtherStructureIncidents"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OtherStructureIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "The details of the newly-created OtherStructureIncident",
            "schema" : {
              "$ref" : "#/definitions/OtherStructureIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/other-structure-incidents/{incidentId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/incidentId"
      } ],
      "get" : {
        "summary" : "Retrieve details of a other structure incident",
        "description" : "Retrieve details of a other structure incident (Since 1.4.0)",
        "operationId" : "getOtherStructureIncident",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "OtherStructureIncident"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/OtherStructureIncidentResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a other structure incident",
        "description" : "Update a other structure incident (Since 1.4.0)",
        "operationId" : "updateOtherStructureIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "OtherStructureIncident"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OtherStructureIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/OtherStructureIncidentResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a other structure incident",
        "description" : "Delete a other structure incident (Since 1.4.0)",
        "operationId" : "deleteOtherStructureIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "delete-element",
          "resourceType" : "OtherStructureIncident"
        },
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/payments" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The payments associated with a given claim",
        "description" : "The payments associated with a given claim (Since 1.3.0)",
        "operationId" : "getPayments",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Payment",
          "operationType" : "get-collection",
          "resourceType" : "Payments"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/payments/{transactionId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/transactionId"
      } ],
      "get" : {
        "summary" : "The details of a specific payment",
        "description" : "The details of a specific payment (Since 1.3.0)",
        "operationId" : "getPayment",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "Payment"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/payments/{transactionId}/acknowledge-submission" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/transactionId"
      } ],
      "post" : {
        "summary" : "Acknowledge submission of this payment",
        "description" : "Acknowledge submission of this payment (Since 1.3.0)",
        "operationId" : "paymentAcknowledgeSubmission",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "Payment"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully acknowledged the payment's submission",
            "schema" : {
              "$ref" : "#/definitions/TransactionResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The policy associated with a given claim",
        "description" : "The policy associated with a given claim",
        "operationId" : "getPolicy",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "Policy"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The policy level coverages associated with a given claim",
        "description" : "The policy level coverages associated with a given claim",
        "operationId" : "getPolicyCoverages",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PolicyCoverage",
          "operationType" : "get-collection",
          "resourceType" : "PolicyCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyCoverageList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "The policy level coverage associated with a given claim",
        "description" : "The policy level coverage associated with a given claim",
        "operationId" : "getPolicyCoverage",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PolicyCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyCoverageResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/endorsements" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The policy endorsements of a given claim",
        "description" : "The policy endorsements of a given claim",
        "operationId" : "getPolicyEndorsements",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "Endorsement",
          "operationType" : "get-collection",
          "resourceType" : "PolicyEndorsements"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyEndorsementList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/endorsements/{endorsementId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/endorsementId"
      } ],
      "get" : {
        "summary" : "The policy endorsement of a given claim",
        "description" : "The policy endorsement of a given claim",
        "operationId" : "getPolicyEndorsement",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "Endorsement"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyEndorsementResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/location-based-risk-units" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The location based risk units of a policy associated with a given claim",
        "description" : "The location based risk units of a policy associated with a given claim",
        "operationId" : "getLocationBasedRiskUnits",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "LocationBasedRiskUnit",
          "operationType" : "get-collection",
          "resourceType" : "LocationBasedRiskUnits"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LocationBasedRiskUnitList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/location-based-risk-units/{locationBasedRiskUnitId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/locationBasedRiskUnitId"
      } ],
      "get" : {
        "summary" : "Retrieve a location based risk unit",
        "description" : "Retrieve a location based risk unit",
        "operationId" : "getLocationBasedRiskUnit",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "LocationBasedRiskUnit"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LocationBasedRiskUnitResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/location-based-risk-units/{locationBasedRiskUnitId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/locationBasedRiskUnitId"
      } ],
      "get" : {
        "summary" : "Retrieves a list of coverages on a location based risk unit",
        "description" : "Retrieves a list of coverages on a location based risk unit (Since 1.4.0)",
        "operationId" : "getLocationBasedRiskUnitCoverages",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "LocationBasedRiskUnitCoverage",
          "operationType" : "get-collection",
          "resourceType" : "LocationBasedRiskUnitCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyCoverageList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/location-based-risk-units/{locationBasedRiskUnitId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/locationBasedRiskUnitId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Details of a coverage on a location based risk unit",
        "description" : "Details of a coverage on a location based risk unit (Since 1.4.0)",
        "operationId" : "getLocationBasedRiskUnitCoverage",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "LocationBasedRiskUnitCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyCoverageResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/locations" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The locations associated with a given claim's policy",
        "description" : "The locations associated with a given claim's policy",
        "operationId" : "getPolicyLocations",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "PolicyLocation",
          "operationType" : "get-collection",
          "resourceType" : "PolicyLocations"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyLocationList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/locations/{locationId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Details of a location on the given claim's policy",
        "description" : "Details of a location on the given claim's policy",
        "operationId" : "getPolicyLocation",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PolicyLocation"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyLocationResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/vehicle-risk-units" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The vehicle risk units of a policy associated with a given claim",
        "description" : "The vehicle risk units of a policy associated with a given claim",
        "operationId" : "getVehicleRiskUnits",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "VehicleRiskUnit",
          "operationType" : "get-collection",
          "resourceType" : "VehicleRiskUnits"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/VehicleRiskUnitList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/vehicle-risk-units/{vehicleRiskUnitId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/vehicleRiskUnitId"
      } ],
      "get" : {
        "summary" : "Retrieve a vehicle risk unit",
        "description" : "Retrieve a vehicle risk unit",
        "operationId" : "getVehicleRiskUnit",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "VehicleRiskUnit"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/VehicleRiskUnitResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/vehicle-risk-units/{vehicleRiskUnitId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/vehicleRiskUnitId"
      } ],
      "get" : {
        "summary" : "Retrieves a list of coverages on a vehicle risk unit",
        "description" : "Retrieves a list of coverages on a vehicle risk unit (Since 1.4.0)",
        "operationId" : "getVehicleRiskUnitCoverages",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "VehicleRiskUnitCoverage",
          "operationType" : "get-collection",
          "resourceType" : "VehicleRiskUnitCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyCoverageList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/vehicle-risk-units/{vehicleRiskUnitId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/vehicleRiskUnitId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Details of a coverage on a vehicle risk unit",
        "description" : "Details of a coverage on a vehicle risk unit (Since 1.4.0)",
        "operationId" : "getVehicleRiskUnitCoverage",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "VehicleRiskUnitCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyCoverageResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/property-contents-incidents" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve a collection of property contents incidents",
        "description" : "Retrieve a collection of property contents incidents (Since 1.4.0)",
        "operationId" : "getPropertyContentsIncidents",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "PropertyContentsIncident",
          "operationType" : "get-collection",
          "resourceType" : "ClaimPropertyContentsIncidents"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PropertyContentsIncidentList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new property contents incident",
        "description" : "Create a new property contents incident (Since 1.4.0)",
        "operationId" : "createPropertyContentsIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "PropertyContentsIncident",
          "operationType" : "post-collection",
          "resourceType" : "ClaimPropertyContentsIncidents"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PropertyContentsIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "The details of the newly-created PropertyContentsIncident",
            "schema" : {
              "$ref" : "#/definitions/PropertyContentsIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/property-contents-incidents/{incidentId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/incidentId"
      } ],
      "get" : {
        "summary" : "Retrieve details of a property contents incident",
        "description" : "Retrieve details of a property contents incident (Since 1.4.0)",
        "operationId" : "getPropertyContentsIncident",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "PropertyContentsIncident"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PropertyContentsIncidentResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a property contents incident",
        "description" : "Update a property contents incident (Since 1.4.0)",
        "operationId" : "updatePropertyContentsIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "PropertyContentsIncident"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PropertyContentsIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PropertyContentsIncidentResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a property contents incident",
        "description" : "Delete a property contents incident (Since 1.4.0)",
        "operationId" : "deletePropertyContentsIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "delete-element",
          "resourceType" : "PropertyContentsIncident"
        },
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/property-contents-incidents/{incidentId}/assessment-content-items" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/incidentId"
      } ],
      "get" : {
        "summary" : "Retrieve a collection of assessment content items",
        "description" : "Retrieve a collection of assessment content items (Since 1.4.0)",
        "operationId" : "getPropertyContentsIncidentAssessmentContentItems",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "AssessmentContentItem",
          "operationType" : "get-collection",
          "resourceType" : "AssessmentContentItems"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/AssessmentContentItemList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new assessment content item",
        "description" : "Create a new assessment content item (Since 1.4.0)",
        "operationId" : "createPropertyContentsIncidentAssessmentContentItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "AssessmentContentItem",
          "operationType" : "post-collection",
          "resourceType" : "AssessmentContentItems"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AssessmentContentItemRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "The details of the newly-created AssessmentContentItem",
            "schema" : {
              "$ref" : "#/definitions/AssessmentContentItemResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/property-contents-incidents/{incidentId}/assessment-content-items/{assessmentContentItemId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/incidentId"
      }, {
        "$ref" : "#/parameters/assessmentContentItemId"
      } ],
      "get" : {
        "summary" : "Retrieve details of a assessment content item",
        "description" : "Retrieve details of a assessment content item (Since 1.4.0)",
        "operationId" : "getPropertyContentsIncidentAssessmentContentItem",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "AssessmentContentItem"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/AssessmentContentItemResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a assessment content item",
        "description" : "Update a assessment content item (Since 1.4.0)",
        "operationId" : "updatePropertyContentsIncidentAssessmentContentItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "AssessmentContentItem"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AssessmentContentItemRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/AssessmentContentItemResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a assessment content item",
        "description" : "Delete a assessment content item (Since 1.4.0)",
        "operationId" : "deletePropertyContentsIncidentAssessmentContentItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "operationType" : "delete-element",
          "resourceType" : "AssessmentContentItem"
        },
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/recoveries" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The recoveries associated with a given claim",
        "description" : "The recoveries associated with a given claim (Since 1.3.0)",
        "operationId" : "getRecoveries",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Recovery",
          "operationType" : "get-collection",
          "resourceType" : "Recoveries"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/recoveries/{transactionId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/transactionId"
      } ],
      "get" : {
        "summary" : "The details of a specific recovery",
        "description" : "The details of a specific recovery (Since 1.3.0)",
        "operationId" : "getRecovery",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "Recovery"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/recoveries/{transactionId}/acknowledge-submission" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/transactionId"
      } ],
      "post" : {
        "summary" : "Acknowledge submission of this recovery",
        "description" : "Acknowledge submission of this recovery (Since 1.3.0)",
        "operationId" : "recoveryAcknowledgeSubmission",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "Recovery"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully acknowledged the recovery's submission",
            "schema" : {
              "$ref" : "#/definitions/TransactionResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/recovery-reserve-sets" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of recovery reserve sets",
        "description" : "Retrieve a list of recovery reserve sets (Since 1.3.0)",
        "operationId" : "getRecoveryReserveSets",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "RecoveryReserveSet",
          "operationType" : "get-collection",
          "resourceType" : "RecoveryReserveSets"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of recovery reserve sets",
            "schema" : {
              "$ref" : "#/definitions/RecoveryReserveSetList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new recovery reserve set with recovery reserves",
        "description" : "Create a new recovery reserve set with recovery reserves (Since 1.3.0)",
        "operationId" : "createRecoveryReserveSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "childResourceType" : "RecoveryReserveSet",
          "operationType" : "post-collection",
          "resourceType" : "RecoveryReserveSets"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecoveryReserveSetRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/RecoveryReserveSetResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/recovery-reserve-sets/{recoveryReserveSetId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/recoveryReserveSetId"
      } ],
      "get" : {
        "summary" : "Retrieve details of a recovery reserve set",
        "description" : "Retrieve details of a recovery reserve set (Since 1.3.0)",
        "operationId" : "getRecoveryReserveSet",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "RecoveryReserveSet"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RecoveryReserveSetResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/recovery-reserves" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The recovery reserves associated with a given claim",
        "description" : "The recovery reserves associated with a given claim (Since 1.3.0)",
        "operationId" : "getRecoveryReserves",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "RecoveryReserve",
          "operationType" : "get-collection",
          "resourceType" : "RecoveryReserves"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/recovery-reserves/{transactionId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/transactionId"
      } ],
      "get" : {
        "summary" : "The details of a specific recovery reserve",
        "description" : "The details of a specific recovery reserve (Since 1.3.0)",
        "operationId" : "getRecoveryReserve",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "RecoveryReserve"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/recovery-reserves/{transactionId}/acknowledge-submission" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/transactionId"
      } ],
      "post" : {
        "summary" : "Acknowledge submission of this recovery reserve",
        "description" : "Acknowledge submission of this recovery reserve (Since 1.3.0)",
        "operationId" : "recoveryReserveAcknowledgeSubmission",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "RecoveryReserve"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully acknowledged the recovery reserve's submission",
            "schema" : {
              "$ref" : "#/definitions/TransactionResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/recovery-sets" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of recovery sets",
        "description" : "Retrieve a list of recovery sets (Since 1.3.0)",
        "operationId" : "getRecoverySets",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "RecoverySet",
          "operationType" : "get-collection",
          "resourceType" : "RecoverySets"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of recovery sets",
            "schema" : {
              "$ref" : "#/definitions/RecoverySetList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new recovery set with recoveries",
        "description" : "Create a new recovery set with recoveries (Since 1.3.0)",
        "operationId" : "createRecoverySet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "childResourceType" : "RecoverySet",
          "operationType" : "post-collection",
          "resourceType" : "RecoverySets"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecoverySetRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/RecoverySetResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/recovery-sets/{recoverySetId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/recoverySetId"
      } ],
      "get" : {
        "summary" : "Retrieve details of a recovery set",
        "description" : "Retrieve details of a recovery set (Since 1.3.0)",
        "operationId" : "getRecoverySet",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "RecoverySet"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RecoverySetResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/related-objects" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The list of objects related to this claim",
        "description" : "The list of objects related to this claim which can be used as the values for the \"relatedTo\" field on a note or activity. This includes the claim, contacts, unpromoted service requests, service request specialists, exposures, and matters.\n",
        "operationId" : "getClaimRelatedObjects",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "GenericRelation",
          "operationType" : "get-collection",
          "resourceType" : "ClaimRelatedObjects"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request",
            "schema" : {
              "$ref" : "#/definitions/GenericRelationList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/reserve-sets" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve a list of reserve sets",
        "description" : "Retrieve a list of reserve sets (Since 1.3.0)",
        "operationId" : "getReserveSets",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "ReserveSet",
          "operationType" : "get-collection",
          "resourceType" : "ReserveSets"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of reserve sets",
            "schema" : {
              "$ref" : "#/definitions/ReserveSetList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new reserve set with reserves",
        "description" : "Create a new reserve set with reserves (Since 1.3.0)",
        "operationId" : "createReserveSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "childResourceType" : "ReserveSet",
          "operationType" : "post-collection",
          "resourceType" : "ReserveSets"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReserveSetRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/ReserveSetResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/reserve-sets/{reserveSetId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/reserveSetId"
      } ],
      "get" : {
        "summary" : "Retrieve details of a reserve set",
        "description" : "Retrieve details of a reserve set (Since 1.3.0)",
        "operationId" : "getReserveSet",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ReserveSet"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ReserveSetResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/reserves" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "The reserves associated with a given claim",
        "description" : "The reserves associated with a given claim (Since 1.3.0)",
        "operationId" : "getReserves",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "childResourceType" : "Reserve",
          "operationType" : "get-collection",
          "resourceType" : "Reserves"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/reserves/{transactionId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/transactionId"
      } ],
      "get" : {
        "summary" : "The details of a specific reserve",
        "description" : "The details of a specific reserve (Since 1.3.0)",
        "operationId" : "getReserve",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "Reserve"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/reserves/{transactionId}/acknowledge-submission" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/transactionId"
      } ],
      "post" : {
        "summary" : "Acknowledge submission of this reserve",
        "description" : "Acknowledge submission of this reserve (Since 1.3.0)",
        "operationId" : "reserveAcknowledgeSubmission",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "Reserve"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully acknowledged the reserve's submission",
            "schema" : {
              "$ref" : "#/definitions/TransactionResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Returns a list of service requests associated with the claim",
        "description" : "Returns a list of service requests associated with the claim (Since 1.1.0)",
        "operationId" : "getServiceRequestsForClaim",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "ServiceRequest",
          "operationType" : "get-collection",
          "resourceType" : "ClaimServiceRequests"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of service requests for a claim",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Adds a service request to the claim",
        "description" : "Adds a service request to the claim (Since 1.1.0)",
        "operationId" : "addServiceRequestToClaim",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "ServiceRequest",
          "operationType" : "post-collection",
          "resourceType" : "ClaimServiceRequests"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Returns the details of the newly created service request",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "get" : {
        "summary" : "Retrieves a service request by its id",
        "description" : "Retrieves a service request by its id (Since 1.1.0)",
        "operationId" : "getServiceRequest",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ServiceRequest"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the service request",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Modifies an existing service request",
        "description" : "Modifies an existing service request (Since 1.1.0)",
        "operationId" : "changeServiceRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "ServiceRequest"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the modified service request",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/accept" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "post" : {
        "summary" : "Accepts a service request",
        "description" : "Records that the specialist has accepted this service request (Since 1.1.0)",
        "operationId" : "acceptServiceRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequest"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestOperationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the accepted service request",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/add-quote" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "post" : {
        "summary" : "Adds a quote to the service request",
        "description" : "Adds a quote to the service request (Since 1.3.0)",
        "operationId" : "addServiceRequestQuote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequest"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestOperationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the updated service request",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/approve-quote" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "post" : {
        "summary" : "Approves the quote on the service request",
        "description" : "Approves the quote on the service request (Since 1.3.0)",
        "operationId" : "approveQuote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequest"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestOperationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the updated service request",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/assign" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "post" : {
        "summary" : "Assigns a service request",
        "description" : "Assigns a service request (Since 1.1.0)",
        "operationId" : "assignServiceRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequest"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestAssignmentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the assigned service request",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/cancel" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "post" : {
        "summary" : "Cancels a service request",
        "description" : "Records that the specialist does not intend to perform any further work on this service request (Since 1.2.0)",
        "operationId" : "cancelServiceRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequest"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestOperationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the canceled service request",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/complete-work" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "post" : {
        "summary" : "Indicates that the specialist has completed work",
        "description" : "Indicates that the specialist has completed work (Since 1.2.0)",
        "operationId" : "completeRequestedWork",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequest"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestOperationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the service request",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/decline" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "post" : {
        "summary" : "Declines a service request",
        "description" : "Records that the specialist has declined to perform this service request (Since 1.2.0)",
        "operationId" : "declineServiceRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequest"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestOperationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the declined service request",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/internal-cancel" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "post" : {
        "summary" : "Cancels a service request without specialist response",
        "description" : "Internally cancels this service request without further input from the specialist (Since 1.2.0)",
        "operationId" : "internalCancelServiceRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequest"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestOperationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the canceled service request",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/invoices" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "get" : {
        "summary" : "Retrieves the invoices on a service request",
        "description" : "Retrieves the invoices on a service request (Since 1.1.0)",
        "operationId" : "getServiceRequestInvoices",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "ServiceRequestInvoice",
          "operationType" : "get-collection",
          "resourceType" : "ServiceRequestInvoices"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of the service request's invoices",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestStatementList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a new service request invoice",
        "description" : "Creates a new service request invoice (Since 1.1.0)",
        "operationId" : "addInvoice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "childResourceType" : "ServiceRequestInvoice",
          "operationType" : "post-collection",
          "resourceType" : "ServiceRequestInvoices"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestStatementRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Returns the details of the newly created invoice",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestStatementResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      }, {
        "$ref" : "#/parameters/invoiceId"
      } ],
      "get" : {
        "summary" : "Retrieves a service request invoice by its id",
        "description" : "Retrieves a service request invoice by its id (Since 1.1.0)",
        "operationId" : "getInvoice",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ServiceRequestInvoice"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the the service request invoice",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestStatementResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}/approve" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      }, {
        "$ref" : "#/parameters/invoiceId"
      } ],
      "post" : {
        "summary" : "Approves an invoice that has been submitted",
        "description" : "Approves an invoice that has been submitted (Since 1.3.0)",
        "operationId" : "approveInvoice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequestInvoice"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestInvoiceOperationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the approved service request invoice",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestStatementResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}/mark-as-paid" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      }, {
        "$ref" : "#/parameters/invoiceId"
      } ],
      "post" : {
        "summary" : "Mark an invoice as paid",
        "description" : "Mark an invoice as paid (Since 1.3.0)",
        "operationId" : "markInvoiceAsPaid",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequestInvoice"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestInvoiceMarkAsPaidRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the paid service request invoice",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestStatementResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}/withdraw" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      }, {
        "$ref" : "#/parameters/invoiceId"
      } ],
      "post" : {
        "summary" : "Withdraws an invoice that has been submitted",
        "description" : "Withdraws an invoice that has been submitted (Since 1.2.0)",
        "operationId" : "withdrawInvoice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequestInvoice"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestInvoiceOperationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the withdrawn invoice",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestStatementResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/submit" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "post" : {
        "summary" : "Requests service from specialist",
        "description" : "Submits the service request to the specialist for acceptance (with optional instruction) (Since 1.1.0)",
        "operationId" : "submitServiceRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.1.0",
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "ServiceRequest"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestOperationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the resulting service request (state)",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/try-auto-approve-quote" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/serviceRequestId"
      } ],
      "post" : {
        "summary" : "Try automatically approving the latest quote on a Service Request",
        "description" : "Try automatically approving the latest quote on a Service Request",
        "operationId" : "tryAutoApproveQuote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "allowForCompositeApi" : false,
          "operationType" : "custom-action",
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestOperationRequest"
            }
          } ],
          "resourceType" : "ServiceRequest",
          "x-gw-parameter-sets" : [ "custom-action" ]
        },
        "responses" : {
          "200" : {
            "description" : "Successfully run auto-approval process",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/submit" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "post" : {
        "summary" : "Submit this claim and transition it to the 'open' state",
        "description" : "Submit this claim and transition it to the 'open' state",
        "operationId" : "submitClaim",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Claim"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClaimSubmitRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully submitted the claim",
            "schema" : {
              "$ref" : "#/definitions/ClaimResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/validate" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "post" : {
        "summary" : "Validate a claim",
        "description" : "Validate a claim",
        "operationId" : "validate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "custom-action",
          "resourceType" : "Claim"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClaimValidationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ClaimValidationResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/vehicle-incidents" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      } ],
      "get" : {
        "summary" : "Retrieve vehicle incidents on a claim",
        "description" : "Retrieve vehicle incidents on a claim",
        "operationId" : "getClaimVehicleIncidents",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "VehicleIncident",
          "operationType" : "get-collection",
          "resourceType" : "ClaimVehicleIncidents"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/VehicleIncidentList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new vehicle incident",
        "description" : "Create a new vehicle incident",
        "operationId" : "createClaimVehicleIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "VehicleIncident",
          "operationType" : "post-collection",
          "resourceType" : "ClaimVehicleIncidents"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VehicleIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created",
            "schema" : {
              "$ref" : "#/definitions/VehicleIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/vehicle-incidents/{incidentId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/claimId"
      }, {
        "$ref" : "#/parameters/incidentId"
      } ],
      "get" : {
        "summary" : "Retrieve a vehicle incident",
        "description" : "Retrieve a vehicle incident",
        "operationId" : "getVehicleIncident",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "VehicleIncident"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/VehicleIncidentResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a vehicle incident",
        "description" : "Update a vehicle incident",
        "operationId" : "patchVehicleIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "VehicleIncident"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VehicleIncidentRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "schema" : {
              "$ref" : "#/definitions/VehicleIncidentResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a vehicle incident on the given claim",
        "description" : "Delete a vehicle incident on the given claim",
        "operationId" : "deleteVehicleIncident",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "delete-element",
          "resourceType" : "VehicleIncident"
        },
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          }
        }
      }
    },
    "/graph-schema" : {
      "get" : {
        "summary" : "Return the JSON Schema Draft-7 representation of the claim graph schema",
        "description" : "Return the JSON Schema Draft-7 representation of the claim graph schema (Since 1.2.0)",
        "operationId" : "getClaimGraphSchema",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ClaimGraphSchema"
        },
        "parameters" : [ {
          "name" : "prettyPrint",
          "in" : "query",
          "description" : "Whether to pretty-print the returned schema, making it larger but more human readable. Defaults to false.",
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "inlineTypelists",
          "in" : "query",
          "description" : "Whether to include all referenced typelist values inline on properties. Defaults to false.",
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/openapi.json" : {
      "get" : {
        "summary" : "Return the Open API 3.0 representation of the schema",
        "description" : "Return the Open API 3.0 representation of the schema",
        "operationId" : "getOpenApiSchema",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ClaimApiOpenApiSchema"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/enablePolymorphism"
        }, {
          "$ref" : "#/parameters/filterByUser"
        }, {
          "$ref" : "#/parameters/omitInclusions"
        }, {
          "$ref" : "#/parameters/prettyPrintSchema"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/role-constraints" : {
      "get" : {
        "summary" : "All contact role constraints list",
        "description" : "All contact role constraints list",
        "operationId" : "getContactRolesConstraints",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "ContactRoleConstraint",
          "operationType" : "get-collection",
          "resourceType" : "ContactRoleConstraints"
        },
        "parameters" : [ {
          "name" : "schema",
          "in" : "query",
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ContactRoleConstraintList"
            }
          }
        }
      }
    },
    "/role-constraints/{contactRoleId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/contactRoleId"
      } ],
      "get" : {
        "summary" : "The constraints of the given contact role",
        "description" : "The constraints of the given contact role",
        "operationId" : "getContactRoleConstraint",
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "ContactRoleConstraint"
        },
        "parameters" : [ {
          "name" : "schema",
          "in" : "query",
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ContactRoleConstraintResponse"
            }
          }
        }
      }
    },
    "/search/claims" : {
      "post" : {
        "summary" : "Deprecated. Searches for active claims that match the specified criteria",
        "description" : "Deprecated. Please use /search/claims-v2. Searches for active claims that match the specified criteria.",
        "operationId" : "searchClaims",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-extensions" : {
          "childResourceType" : "ClaimSearchResult",
          "operationType" : "search-collection",
          "resourceType" : "ClaimSearch"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClaimSearchRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of active claims that match the search criteria",
            "schema" : {
              "$ref" : "#/definitions/ClaimSearchResultList"
            }
          }
        }
      }
    },
    "/search/claims-freetext" : {
      "post" : {
        "summary" : "Searches for claims that match the specified criteria",
        "description" : "Searches for claims that match the specified criteria (Since 1.4.0)",
        "operationId" : "searchClaimsFreeText",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.4.0",
        "x-gw-extensions" : {
          "childResourceType" : "ClaimSolrSearchResult",
          "operationType" : "search-collection",
          "resourceType" : "ClaimSolrSearch"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClaimSolrSearchRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of claims that match the search criteria",
            "schema" : {
              "$ref" : "#/definitions/ClaimSolrSearchResultList"
            }
          }
        }
      }
    },
    "/search/claims-v2" : {
      "post" : {
        "summary" : "Searches for active or archived claims that match the specified criteria",
        "description" : "Searches for active or archived claims that match the specified criteria (Since 1.3.1)",
        "operationId" : "searchClaimsV2",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.3.1",
        "x-gw-extensions" : {
          "childResourceType" : "ClaimSearchResultWrapper",
          "operationType" : "search-collection",
          "resourceType" : "ClaimSearchV2"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClaimSearchV2Request"
          }
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of active or archived claims that match the search criteria",
            "schema" : {
              "$ref" : "#/definitions/ClaimSearchResultWrapperList"
            }
          }
        }
      }
    },
    "/service-requests" : {
      "get" : {
        "summary" : "Retrieves service requests",
        "description" : "Retrieves a list of assigned service requests (Since 1.2.0)",
        "operationId" : "getServiceRequests",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "ServiceRequest",
          "operationType" : "get-collection",
          "resourceType" : "ServiceRequests"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of service requests",
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestList"
            }
          }
        }
      }
    },
    "/swagger.json" : {
      "get" : {
        "summary" : "Returns the Swagger schema for this API",
        "description" : "Returns a Swagger 2.0 schema for this API as json",
        "operationId" : "generateDocs",
        "produces" : [ "application/json" ],
        "x-gw-authenticated" : false,
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          }
        }
      }
    },
    "/unverified-policies" : {
      "get" : {
        "summary" : "Get all unverified policies",
        "description" : "Get all unverified policies (Since 1.2.0)",
        "operationId" : "getUnverifiedPolicies",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedPolicy",
          "operationType" : "get-collection",
          "resourceType" : "UnverifiedPolicies"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PoliciesList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create an unverified policy",
        "description" : "Create an unverified policy for a new claim; this endpoint cannot be used in isolation, and can only be used as part of a composite request followed by a /claims POST (Since 1.2.0)",
        "operationId" : "postUnverifiedPolicy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedPolicy",
          "operationType" : "post-collection",
          "resourceType" : "UnverifiedPolicies"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PolicyRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/PolicyResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Get details of an unverified policy",
        "description" : "Get details of an unverified policy (Since 1.2.0)",
        "operationId" : "getUnverifiedPolicy",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "UnverifiedPolicy"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update an unverified policy",
        "description" : "Update an unverified policy (Since 1.2.0)",
        "operationId" : "patchUnverifiedPolicy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "UnverifiedPolicy"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PolicyRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PolicyResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/contacts" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "post" : {
        "summary" : "Create a policy contact",
        "description" : "Create a contact on an unverified policy that has not yet been attached to a claim; if this policy has already been attached to a claim, use /claims/{claimId}}/contacts POST instead (Since 1.2.0)",
        "operationId" : "postUnverifiedPolicyContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedPolicyContact",
          "operationType" : "post-collection",
          "resourceType" : "UnverifiedPolicyContacts"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContactRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/ContactResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieves a list of policy coverages on an unverified policy",
        "description" : "Retrieves a list of policy coverages on an unverified policy (Since 1.2.0)",
        "operationId" : "getUnverifiedPolicyCoverages",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedPolicyCoverage",
          "operationType" : "get-collection",
          "resourceType" : "UnverifiedPolicyCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a policy coverage on an unverified policy",
        "description" : "Create a coverage on an unverified policy (Since 1.2.0)",
        "operationId" : "postUnverifiedPolicyCoverage",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedPolicyCoverage",
          "operationType" : "post-collection",
          "resourceType" : "UnverifiedPolicyCoverages"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UnverifiedPolicyCoverageRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Details of a coverage on an unverified policy",
        "description" : "Details of a coverage on an unverified policy (Since 1.2.0)",
        "operationId" : "getUnverifiedPolicyCoverage",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "UnverifiedPolicyCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a coverage on an unverified policy",
        "description" : "Update a coverage on an unverified policy (Since 1.2.0)",
        "operationId" : "patchUnverifiedPolicyCoverage",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "UnverifiedPolicyCoverage"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UnverifiedPolicyCoverageRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/location-based-risk-units" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieves a list of location based risk units",
        "description" : "Retrieves a list of location based risk units (Since 1.2.0)",
        "operationId" : "getUnverifiedLocationBasedRiskUnits",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedLocationBasedRiskUnit",
          "operationType" : "get-collection",
          "resourceType" : "UnverifiedLocationBasedRiskUnits"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LocationBasedRiskUnitList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a location-based risk unit",
        "description" : "Create a location-based risk unit (Since 1.2.0)",
        "operationId" : "postUnverifiedLocationBasedRiskUnit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedLocationBasedRiskUnit",
          "operationType" : "post-collection",
          "resourceType" : "UnverifiedLocationBasedRiskUnits"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocationBasedRiskUnitRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/LocationBasedRiskUnitResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/location-based-risk-units/{locationBasedRiskUnitId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationBasedRiskUnitId"
      } ],
      "get" : {
        "summary" : "Get a location based risk unit",
        "description" : "Get a location based risk unit (Since 1.2.0)",
        "operationId" : "getUnverifiedLocationBasedRiskUnit",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "UnverifiedLocationBasedRiskUnit"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LocationBasedRiskUnitResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a location based risk unit",
        "description" : "Update a location based risk unit (Since 1.2.0)",
        "operationId" : "patchUnverifiedLocationBasedRiskUnit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "UnverifiedLocationBasedRiskUnit"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocationBasedRiskUnitRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LocationBasedRiskUnitResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/location-based-risk-units/{locationBasedRiskUnitId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationBasedRiskUnitId"
      } ],
      "get" : {
        "summary" : "Retrieves a list of coverages on a location based risk unit",
        "description" : "Retrieves a list of coverages on a location based risk unit (Since 1.2.0)",
        "operationId" : "getUnverifiedLocationBasedRiskUnitCoverages",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedLocationBasedRiskUnitCoverage",
          "operationType" : "get-collection",
          "resourceType" : "UnverifiedLocationBasedRiskUnitCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a coverage on a location based risk unit",
        "description" : "Create a coverage on a location based risk unit (Since 1.2.0)",
        "operationId" : "postUnverifiedLocationBasedRiskUnitCoverage",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedLocationBasedRiskUnitCoverage",
          "operationType" : "post-collection",
          "resourceType" : "UnverifiedLocationBasedRiskUnitCoverages"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UnverifiedPolicyCoverageRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/location-based-risk-units/{locationBasedRiskUnitId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationBasedRiskUnitId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Details of a coverage on a location based risk unit",
        "description" : "Details of a coverage on a location based risk unit (Since 1.2.0)",
        "operationId" : "getUnverifiedLocationBasedRiskUnitCoverage",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "UnverifiedLocationBasedRiskUnitCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a coverage on a location based risk unit",
        "description" : "Update a coverage on a location based risk unit (Since 1.2.0)",
        "operationId" : "patchUnverifiedLocationBasedRiskUnitCoverage",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "UnverifiedLocationBasedRiskUnitCoverage"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UnverifiedPolicyCoverageRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/locations" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieves a list of policy locations",
        "description" : "Retrieves a list of policy locations (Since 1.2.0)",
        "operationId" : "getUnverifiedPolicyLocations",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedPolicyLocation",
          "operationType" : "get-collection",
          "resourceType" : "UnverifiedPolicyLocations"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyLocationList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a policy location",
        "description" : "Create a policy location on an unverified policy (Since 1.2.0)",
        "operationId" : "postUnverifiedPolicyLocation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedPolicyLocation",
          "operationType" : "post-collection",
          "resourceType" : "UnverifiedPolicyLocations"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UnverifiedPolicyLocationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyLocationResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/locations/{locationId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/locationId"
      } ],
      "get" : {
        "summary" : "Details of a location on a policy",
        "description" : "Details of a location on a policy (Since 1.2.0)",
        "operationId" : "getUnverifiedPolicyLocation",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "UnverifiedPolicyLocation"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyLocationResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a location on a policy",
        "description" : "Update a location on a policy (Since 1.2.0)",
        "operationId" : "patchUnverifiedPolicyLocation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "UnverifiedPolicyLocation"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UnverifiedPolicyLocationRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyLocationResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/vehicle-risk-units" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      } ],
      "get" : {
        "summary" : "Retrieves a list of vehicle risk units",
        "description" : "Retrieves a list of vehicle risk units (Since 1.2.0)",
        "operationId" : "getUnverifiedVehicleRiskUnits",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedVehicleRiskUnit",
          "operationType" : "get-collection",
          "resourceType" : "UnverifiedVehicleRiskUnits"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/VehicleRiskUnitList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a vehicle risk unit",
        "description" : "Create a vehicle risk unit (Since 1.2.0)",
        "operationId" : "postUnverifiedVehicleRiskUnit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedVehicleRiskUnit",
          "operationType" : "post-collection",
          "resourceType" : "UnverifiedVehicleRiskUnits"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VehicleRiskUnitRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/VehicleRiskUnitResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/vehicle-risk-units/{vehicleRiskUnitId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleRiskUnitId"
      } ],
      "get" : {
        "summary" : "Get a vehicle risk unit",
        "description" : "Get a vehicle risk unit (Since 1.2.0)",
        "operationId" : "getUnverifiedVehicleRiskUnit",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "UnverifiedVehicleRiskUnit"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/VehicleRiskUnitResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a vehicle risk unit",
        "description" : "Update a vehicle risk unit (Since 1.2.0)",
        "operationId" : "patchUnverifiedVehicleRiskUnit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "UnverifiedVehicleRiskUnit"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VehicleRiskUnitRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/VehicleRiskUnitResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/vehicle-risk-units/{vehicleRiskUnitId}/coverages" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleRiskUnitId"
      } ],
      "get" : {
        "summary" : "Retrieves a list of coverages on a vehicle risk unit",
        "description" : "Retrieves a list of coverages on a vehicle risk unit (Since 1.2.0)",
        "operationId" : "getUnverifiedVehicleRiskUnitCoverages",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedVehicleRiskUnitCoverage",
          "operationType" : "get-collection",
          "resourceType" : "UnverifiedVehicleRiskUnitCoverages"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/pageOffset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageList"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a coverage on a vehicle risk unit",
        "description" : "Create a coverage on a vehicle risk unit (Since 1.2.0)",
        "operationId" : "postUnverifiedVehicleRiskUnitCoverage",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "childResourceType" : "UnverifiedVehicleRiskUnitCoverage",
          "operationType" : "post-collection",
          "resourceType" : "UnverifiedVehicleRiskUnitCoverages"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UnverifiedPolicyCoverageRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful creation",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/vehicle-risk-units/{vehicleRiskUnitId}/coverages/{coverageId}" : {
      "parameters" : [ {
        "$ref" : "#/parameters/policyId"
      }, {
        "$ref" : "#/parameters/vehicleRiskUnitId"
      }, {
        "$ref" : "#/parameters/coverageId"
      } ],
      "get" : {
        "summary" : "Details of a coverage on a vehicle risk unit",
        "description" : "Details of a coverage on a vehicle risk unit (Since 1.2.0)",
        "operationId" : "getUnverifiedVehicleRiskUnitCoverage",
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "get-element",
          "resourceType" : "UnverifiedVehicleRiskUnitCoverage"
        },
        "parameters" : [ {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/filter"
        }, {
          "$ref" : "#/parameters/include"
        }, {
          "$ref" : "#/parameters/includeTotal"
        }, {
          "$ref" : "#/parameters/pageSize"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageResponse"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a coverage on a vehicle risk unit",
        "description" : "Update a coverage on a vehicle risk unit (Since 1.2.0)",
        "operationId" : "patchUnverifiedVehicleRiskUnitCoverage",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "x-gw-sinceVersion" : "1.2.0",
        "x-gw-extensions" : {
          "operationType" : "patch-element",
          "resourceType" : "UnverifiedVehicleRiskUnitCoverage"
        },
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UnverifiedPolicyCoverageRequest"
          }
        }, {
          "$ref" : "#/parameters/fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UnverifiedPolicyCoverageResponse"
            }
          }
        }
      }
    }
  },
  "parameters" : {
    "assessmentContentItemId" : {
      "name" : "assessmentContentItemId",
      "in" : "path",
      "description" : "The REST identifier for the assessment content item (Since 1.4.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.4.0"
    },
    "assessmentSummaryId" : {
      "name" : "assessmentSummaryId",
      "in" : "path",
      "description" : "The REST identifier for the assessment summary (Since 1.4.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.4.0"
    },
    "checkId" : {
      "name" : "checkId",
      "in" : "path",
      "description" : "The identifier for the check (Since 1.3.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.3.0"
    },
    "checkSetId" : {
      "name" : "checkSetId",
      "in" : "path",
      "description" : "The identifier for the check set (Since 1.3.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.3.0"
    },
    "claimId" : {
      "name" : "claimId",
      "in" : "path",
      "description" : "The identifier for the claim",
      "required" : true,
      "type" : "string"
    },
    "claimInfoId" : {
      "name" : "claimInfoId",
      "in" : "path",
      "description" : "The identifier for the claim info (Since 1.3.1)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.3.1"
    },
    "contactId" : {
      "name" : "contactId",
      "in" : "path",
      "description" : "The identifier for the contact",
      "required" : true,
      "type" : "string"
    },
    "contactRoleId" : {
      "name" : "contactRoleId",
      "in" : "path",
      "description" : "The identifier for the contact role",
      "required" : true,
      "type" : "string"
    },
    "coverageId" : {
      "name" : "coverageId",
      "in" : "path",
      "description" : "The identifier for the coverage",
      "required" : true,
      "type" : "string"
    },
    "documentId" : {
      "name" : "documentId",
      "in" : "path",
      "description" : "The identifier for the document",
      "required" : true,
      "type" : "string"
    },
    "enablePolymorphism" : {
      "name" : "enablePolymorphism",
      "in" : "query",
      "description" : "Whether or not to use the `discriminator`/`oneOf` pattern to output schemas in cases where the valid set of fields can vary based on some attribute of the data such as the country or subtype.  Defaults to `true`. See the documentation for more information.",
      "type" : "boolean",
      "default" : true
    },
    "endorsementId" : {
      "name" : "endorsementId",
      "in" : "path",
      "description" : "The identifier for policy endorsement",
      "required" : true,
      "type" : "string"
    },
    "exposureId" : {
      "name" : "exposureId",
      "in" : "path",
      "description" : "The identifier for the exposure",
      "required" : true,
      "type" : "string"
    },
    "fields" : {
      "name" : "fields",
      "in" : "query",
      "description" : "Allows the caller to specify the set of fields that should be included on the response. This can be used to limit the set of fields returned as well as to include optional fields that otherwise wouldn't normally be returned. The parameter is either of the form `fields=<field list>` or `fields=<include>:<field list>`, where `<field list>` consists of a comma-separated list of field or field set names. See the documentation for more information.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "filter" : {
      "name" : "filter",
      "in" : "query",
      "description" : "Filters the list of results based on the specified field, operator, and value. The parameter is either of the form `filter=<field>:<operator>:<value>` or `filter=<include>:<field>:<operator>:<value>`. See the documentation for more information.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "filterByUser" : {
      "name" : "filterByUser",
      "in" : "query",
      "description" : "Whether or not to filter endpoints and schema properties by the authorization of the caller. Defaults to `false`.",
      "type" : "boolean",
      "default" : false
    },
    "gwLanguageHeader" : {
      "name" : "GW-Language",
      "in" : "header",
      "description" : "If specified, this header will set the language used when processing the request",
      "type" : "string"
    },
    "gwLocaleHeader" : {
      "name" : "GW-Locale",
      "in" : "header",
      "description" : "If specified, this header will set the locale used when processing the request",
      "type" : "string"
    },
    "gwSchemaProperty" : {
      "name" : "GW-IncludeSchemaProperty",
      "in" : "header",
      "description" : "If specified and the operation returns json with a defined schema, this will add a property, '$GW-Schema',  with the fully qualified name of the object's schema.",
      "type" : "boolean"
    },
    "gwTraceability" : {
      "name" : "X-Correlation-ID",
      "in" : "header",
      "description" : "This header permits a customer to trace a request from its initial reception through all of the subsequent applications that were invoked to handle that request. The actual traceability id present in the MDC and logs (and returned in the response), is dependent on the implementation of TraceabilityIDPlugin. The default implementation uses this value, if specified, or a generated UID.  However, another implementation may always generate a unique id and just log  the relationship between these incoming values and the generated UID. Note: that this header can be repeated, but the resulting string will just be the comma separated values.",
      "type" : "string"
    },
    "gwTransactionID" : {
      "name" : "GW-DBTransaction-ID",
      "in" : "header",
      "description" : "If specified and this operation results in a database commit, this header's value must not have been submitted before.  This value must be globally unique across all clients, apis and webservices. It is used for those transaction that are not idempotent. Unless this is explicitly referenced for an operation it is not required.",
      "required" : true,
      "type" : "string"
    },
    "gwUnknownPropertyHeader" : {
      "name" : "GW-UnknownPropertyHandling",
      "in" : "header",
      "description" : "If specified, this header will drive the behavior for unknown property handling",
      "type" : "string",
      "enum" : [ "log", "reject", "ignore" ]
    },
    "gwUnknownQueryParameterHeader" : {
      "name" : "GW-UnknownQueryParamHandling",
      "in" : "header",
      "description" : "If specified, this header will drive the behavior for unknown query parameter handling.  Default is to reject them.",
      "type" : "string",
      "enum" : [ "log", "reject", "ignore" ]
    },
    "gwValidateResponseHandling" : {
      "name" : "GW-ValidateResponseHandling",
      "in" : "header",
      "description" : "If specified, this header permits the client to override the behavior around validating response",
      "type" : "boolean"
    },
    "incidentId" : {
      "name" : "incidentId",
      "in" : "path",
      "description" : "The identifier for the incident",
      "required" : true,
      "type" : "string"
    },
    "include" : {
      "name" : "include",
      "in" : "query",
      "description" : "Used to request that additional resources be returned with the API response in the `included` section of the responses. The `include` parameter can appear multiple times, and is a comma-separated list of additional resources to include. See the documentation for more information.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi"
    },
    "includeTotal" : {
      "name" : "includeTotal",
      "in" : "query",
      "description" : "Used to request that results should include a count of the total number of results available, which may be more than the total number of results currently being returned. This parameter is of the form `includeTotal=<true|false>` or `includeTotal=<include>:<true|false>`. If not specified, the default is considered to be `false`. See the documentation for more information about response pagination.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "interactionId" : {
      "name" : "interactionId",
      "in" : "path",
      "description" : "The intake interaction identifier (Since 1.3.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.3.0"
    },
    "invoiceId" : {
      "name" : "invoiceId",
      "in" : "path",
      "description" : "The identifier for the invoice",
      "required" : true,
      "type" : "string"
    },
    "locationBasedRiskUnitId" : {
      "name" : "locationBasedRiskUnitId",
      "in" : "path",
      "description" : "The identifier for the location based risk unit",
      "required" : true,
      "type" : "string"
    },
    "locationId" : {
      "name" : "locationId",
      "in" : "path",
      "description" : "The identifier for the location",
      "required" : true,
      "type" : "string"
    },
    "messageId" : {
      "name" : "messageId",
      "in" : "path",
      "description" : "The service request message identifier",
      "required" : true,
      "type" : "string"
    },
    "omitInclusions" : {
      "name" : "omitInclusions",
      "in" : "query",
      "description" : "Whether or not to omit the `included` properties on request and response schemas.  Defaults to `false`. See the documentation for more information. (Since 1.4.0)",
      "type" : "boolean",
      "default" : false,
      "x-gw-sinceVersion" : "1.4.0"
    },
    "pageOffset" : {
      "name" : "pageOffset",
      "in" : "query",
      "description" : "The offset of the first result to fetch when fetching a paginated set of results. The parameter is of the form `pageOffset=<number>` where the first result has an offset of 0. For example, `pageOffset=25` will skip the first 25 results in sorted order. If not specified, the default value is 0. See the documentation for more information about response pagination.",
      "type" : "string",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "pageSize" : {
      "name" : "pageSize",
      "in" : "query",
      "description" : "The maximum number of results to return in the response. The parameter is of the form `pageSize=<size>` or `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the default `pageSize` both depend on the specific API endpoint the request is made to. See the documentation for more information about response pagination.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "policyId" : {
      "name" : "policyId",
      "in" : "path",
      "description" : "The identifier for the policy (Since 1.2.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.2.0"
    },
    "prettyPrintSchema" : {
      "name" : "prettyPrint",
      "in" : "query",
      "description" : "Whether or not to pretty-print the returned schema, making it larger but more human readable.  Defaults to `false`.",
      "type" : "boolean",
      "default" : false
    },
    "propertyContentsIncidentId" : {
      "name" : "propertyContentsIncidentId",
      "in" : "path",
      "description" : "The REST identifier for the property contents incident (Since 1.4.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.4.0"
    },
    "recoveryReserveSetId" : {
      "name" : "recoveryReserveSetId",
      "in" : "path",
      "description" : "The identifier for the recovery reserve set (Since 1.3.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.3.0"
    },
    "recoverySetId" : {
      "name" : "recoverySetId",
      "in" : "path",
      "description" : "The identifier for the recovery set (Since 1.3.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.3.0"
    },
    "reserveSetId" : {
      "name" : "reserveSetId",
      "in" : "path",
      "description" : "The identifier for the reserve set (Since 1.3.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.3.0"
    },
    "serviceRequestId" : {
      "name" : "serviceRequestId",
      "in" : "path",
      "description" : "The service request identifier",
      "required" : true,
      "type" : "string"
    },
    "sort" : {
      "name" : "sort",
      "in" : "query",
      "description" : "Controls the sorting of elements within a response. The sort parameter is of the form `sort=<fields>` or `sort=<include>:<fields>`, where `<fields>` represents a comma-separated list of field names to sort on. Field names can be prefixed with `-` to request a descending sort, otherwise the sort will be ascending. See the documentation for more information.",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi",
      "x-gw-extensions" : {
        "allowForCompositeApi" : true
      }
    },
    "transactionId" : {
      "name" : "transactionId",
      "in" : "path",
      "description" : "The identifier for the transaction (Since 1.3.0)",
      "required" : true,
      "type" : "string",
      "x-gw-sinceVersion" : "1.3.0"
    },
    "vehicleRiskUnitId" : {
      "name" : "vehicleRiskUnitId",
      "in" : "path",
      "description" : "The identifier for the vehicle risk unit",
      "required" : true,
      "type" : "string"
    }
  },
  "responses" : {
    "AuthenticationError" : {
      "description" : "401 error that is returned if the request's user cannot be authenticated",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "BadInput" : {
      "description" : "400 error that is returned if the input to this endpoint is not valid; this can happen because of missing required parameters, malformed json, json that does not validate against the declared schema, etc.",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "InternalServerError" : {
      "description" : "500 error that is returned if a server-side error prevented this request from being processed",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "NotAcceptable" : {
      "description" : "406 error that is returned if the Accept header provided by the client does not match any types produced by this endpoint",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "NotAuthorized" : {
      "description" : "403 error that is returned if the authenticated user is not authorized to access a given resource",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "NotFound" : {
      "description" : "404 error that is returned if the specified resource does not exist",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "OperationNotSupported" : {
      "description" : "405 error that is returned if the specified HTTP verb is not allowed on a given resource",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "ServiceUnavailable" : {
      "description" : "503 error that is returned if the server's runlevel is not adequate to service this request",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    },
    "UnsupportedContentType" : {
      "description" : "415 error that is returned if the Content-Type of the request is not consumable by this endpoint",
      "schema" : {
        "$ref" : "#/definitions/ErrorInfo"
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "security" : [ {
    "basicAuth" : [ ]
  } ],
  "definitions" : {
    "ActionWithReasonRequestAttributes" : {
      "type" : "object",
      "properties" : {
        "reason" : {
          "type" : "string"
        }
      }
    },
    "ActionWithReasonRequestBody" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ActionWithReasonRequestData"
        }
      }
    },
    "ActionWithReasonRequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ActionWithReasonRequestAttributes"
        }
      }
    },
    "ActivityData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Activity"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ActivityList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ActivityData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "ActivityPatternData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityPattern"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ActivityPatternList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ActivityPatternData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "ActivityRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "ActivityResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "ActivityResponseInclusions" : {
      "type" : "object",
      "properties" : {
        "Assignee" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssigneeData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Note" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/NoteData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "AssessmentContentItemData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/AssessmentContentItem"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "AssessmentContentItemList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssessmentContentItemData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "AssessmentContentItemRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AssessmentContentItemData"
        }
      }
    },
    "AssessmentContentItemResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AssessmentContentItemData"
        }
      }
    },
    "AssessmentSummaryData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/AssessmentSummary"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "AssessmentSummaryList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssessmentSummaryData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AssessmentSummaryResponseInclusions"
        }
      }
    },
    "AssessmentSummaryRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AssessmentSummaryData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AssessmentSummaryRequestInclusions"
        }
      }
    },
    "AssessmentSummaryRequestInclusions" : {
      "type" : "object",
      "properties" : {
        "Exposure" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ExposureData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "AssessmentSummaryResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/AssessmentSummaryData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/AssessmentSummaryResponseInclusions"
        }
      }
    },
    "AssessmentSummaryResponseInclusions" : {
      "type" : "object",
      "properties" : {
        "Exposure" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ExposureData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "AssigneeData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Assignee"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "AssigneeList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssigneeData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "ChangeExpectedDateAttributes" : {
      "type" : "object",
      "required" : [ "newdate" ],
      "properties" : {
        "newdate" : {
          "type" : "string",
          "format" : "date",
          "x-gw-extensions" : {
            "after" : "yesterday"
          }
        },
        "reason" : {
          "type" : "string"
        }
      }
    },
    "ChangeExpectedDateBody" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ChangeExpectedDateData"
        }
      }
    },
    "ChangeExpectedDateData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ChangeExpectedDateAttributes"
        }
      }
    },
    "CheckData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Check"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CheckList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CheckData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "CheckRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CheckData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "CheckResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CheckData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "CheckSetData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/CheckSet"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "CheckSetList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CheckSetData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "CheckSetRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CheckSetData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "CheckSetResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CheckSetData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ClaimAssigneeData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimAssignee"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ClaimAssignmentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimAssigneeData"
        }
      }
    },
    "ClaimCloseRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimCloseRequestData"
        }
      }
    },
    "ClaimCloseRequestAttributes" : {
      "type" : "object",
      "properties" : {
        "closedOutcome" : {
          "type" : "object",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ClaimClosedOutcomeType"
          }
        },
        "reason" : {
          "type" : "string"
        }
      }
    },
    "ClaimCloseRequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimCloseRequestAttributes"
        }
      }
    },
    "ClaimContactData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimContact"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ClaimContactList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ClaimContactData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "ClaimData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Claim"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ClaimDocumentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/DocumentData"
        }
      }
    },
    "ClaimDocumentResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/DocumentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/DocumentResponseInclusions"
        }
      }
    },
    "ClaimInfoData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimInfo"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ClaimInfoResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimInfoData"
        }
      }
    },
    "ClaimInfosList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ClaimInfoData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ClaimRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "ClaimRequestInclusions" : {
      "type" : "object",
      "properties" : {
        "AssessmentContentItem" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssessmentContentItemData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "AssessmentSummary" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssessmentSummaryData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ClaimContact" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ClaimContactData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "DwellingIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DwellingIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Exposure" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ExposureData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "FixedPropertyIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/FixedPropertyIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "InjuryIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/InjuryIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "LivingExpensesIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/LivingExpensesIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Note" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/NoteData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "OtherStructureIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/OtherStructureIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PropertyContentsIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PropertyContentsIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ServiceRequest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ServiceRequestData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "VehicleIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/VehicleIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ClaimResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ClaimResponseInclusions" : {
      "type" : "object",
      "properties" : {
        "Activity" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ActivityData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ActivityPattern" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ActivityPatternData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "AssessmentContentItem" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssessmentContentItemData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "AssessmentSummary" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssessmentSummaryData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Assignee" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AssigneeData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Check" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CheckData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ClaimContact" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ClaimContactData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "DwellingIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DwellingIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Endorsement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/EndorsementData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Exposure" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ExposureData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "FixedPropertyIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/FixedPropertyIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "GenericRelation" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/GenericRelationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "InjuryIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/InjuryIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "LivingExpensesIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/LivingExpensesIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "LocationBasedRiskUnit" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/LocationBasedRiskUnitData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "LocationBasedRiskUnitCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Note" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/NoteData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "OtherStructureIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/OtherStructureIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Payment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TransactionData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Policy" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PolicyLocation" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "PropertyContentsIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PropertyContentsIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Recovery" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TransactionData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "RecoveryReserve" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TransactionData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "RecoveryReserveSet" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/RecoveryReserveSetData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "RecoverySet" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/RecoverySetData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Reserve" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TransactionData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ReserveSet" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ReserveSetData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ServiceRequest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ServiceRequestData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "VehicleIncident" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/VehicleIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "VehicleRiskUnit" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/VehicleRiskUnitData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "VehicleRiskUnitCoverage" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ClaimSearchRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimSearchRequestData"
        }
      }
    },
    "ClaimSearchRequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimSearchRequestAttributes"
        }
      }
    },
    "ClaimSearchResultData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimSearchResult"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ClaimSearchResultList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ClaimSearchResultData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ClaimSearchResultWrapperData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimSearchResultWrapper"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ClaimSearchResultWrapperList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ClaimSearchResultWrapperData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ClaimSearchV2Request" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimSearchV2RequestData"
        }
      }
    },
    "ClaimSearchV2RequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimSearchV2Attributes"
        }
      }
    },
    "ClaimSolrSearchRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimSolrSearchRequestData"
        }
      }
    },
    "ClaimSolrSearchRequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimSolrSearchRequestAttributes"
        }
      }
    },
    "ClaimSolrSearchResultData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimSolrSearchResult"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ClaimSolrSearchResultList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ClaimSolrSearchResultData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ClaimSubmitRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimSubmitRequestData"
        }
      }
    },
    "ClaimSubmitRequestAttributes" : {
      "type" : "object",
      "properties" : {
        "initialAssignment" : {
          "type" : "object",
          "$ref" : "#/definitions/Assignee"
        }
      }
    },
    "ClaimSubmitRequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimSubmitRequestAttributes"
        }
      }
    },
    "ClaimValidationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ValidationResult"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ClaimValidationRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimValidationRequestData"
        }
      }
    },
    "ClaimValidationRequestAttributes" : {
      "type" : "object",
      "required" : [ "validateExposures", "validationLevel" ],
      "properties" : {
        "validateExposures" : {
          "type" : "boolean"
        },
        "validationLevel" : {
          "type" : "object",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ValidationLevel"
          }
        }
      }
    },
    "ClaimValidationRequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimValidationRequestAttributes"
        }
      }
    },
    "ClaimValidationResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimValidationData"
        }
      }
    },
    "ClaimsList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ClaimData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ContactRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimContactData"
        }
      }
    },
    "ContactResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimContactData"
        }
      }
    },
    "ContactRoleConstraintData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ContactRoleConstraint"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ContactRoleConstraintList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ContactRoleConstraintData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ContactRoleConstraintResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ContactRoleConstraintData"
        }
      }
    },
    "CoverageData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Coverage"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "DataEnvelope" : {
      "type" : "object",
      "title" : "Data envelope",
      "description" : "Data envelope for requests and responses for individual elements. The primary data for the element will be in the `attributes` field.",
      "properties" : {
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "DataListEnvelope" : {
      "type" : "object",
      "title" : "Data list envelope",
      "description" : "Data envelope for responses for lists of elements. The primary list of elements will be in the `data` field.",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        }
      }
    },
    "DocumentContentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/DocumentContent"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "DocumentContentsResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/DocumentContentData"
        }
      }
    },
    "DocumentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Document"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "DocumentList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DocumentData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "DocumentResponseInclusions" : {
      "type" : "object",
      "properties" : {
        "ClaimDocumentContent" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DocumentContentData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "DwellingIncidentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/DwellingIncident"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "DwellingIncidentList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DwellingIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "DwellingIncidentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/DwellingIncidentData"
        }
      }
    },
    "DwellingIncidentResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/DwellingIncidentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "EndorsementData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Endorsement"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ExposureAssigneeData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ExposureAssignee"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ExposureAssignmentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ExposureAssigneeData"
        }
      }
    },
    "ExposureCloseRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ExposureCloseRequestData"
        }
      }
    },
    "ExposureCloseRequestAttributes" : {
      "type" : "object",
      "properties" : {
        "closedOutcome" : {
          "type" : "object",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ExposureClosedOutcomeType"
          }
        },
        "reason" : {
          "type" : "string"
        }
      }
    },
    "ExposureCloseRequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ExposureCloseRequestAttributes"
        }
      }
    },
    "ExposureData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Exposure"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ExposureRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ExposureData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "ExposureResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ExposureData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ExposureValidationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ValidationResult"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ExposureValidationRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ExposureValidationRequestData"
        }
      }
    },
    "ExposureValidationRequestAttributes" : {
      "type" : "object",
      "required" : [ "validateClaim", "validationLevel" ],
      "properties" : {
        "validateClaim" : {
          "type" : "boolean"
        },
        "validationLevel" : {
          "type" : "object",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ValidationLevel"
          }
        }
      }
    },
    "ExposureValidationRequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ExposureValidationRequestAttributes"
        }
      }
    },
    "ExposureValidationResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ExposureValidationData"
        }
      }
    },
    "ExposuresList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ExposureData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "FixedPropertyIncidentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/FixedPropertyIncident"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "FixedPropertyIncidentList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/FixedPropertyIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "FixedPropertyIncidentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/FixedPropertyIncidentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "FixedPropertyIncidentResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/FixedPropertyIncidentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "GenericRelationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/GenericRelation"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "GenericRelationList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/GenericRelationData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "InjuryIncidentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/InjuryIncident"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "InjuryIncidentList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/InjuryIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "InjuryIncidentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/InjuryIncidentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "InjuryIncidentResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/InjuryIncidentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "IntakeInteractionData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/IntakeInteraction"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "IntakeInteractionRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IntakeInteractionData"
        }
      }
    },
    "IntakeInteractionResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/IntakeInteractionData"
        }
      }
    },
    "IntakeInteractionsList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/IntakeInteractionData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "LivingExpensesIncidentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/LivingExpensesIncident"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "LivingExpensesIncidentList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/LivingExpensesIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "LivingExpensesIncidentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/LivingExpensesIncidentData"
        }
      }
    },
    "LivingExpensesIncidentResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/LivingExpensesIncidentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "LocationBasedRiskUnitData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/LocationBasedRiskUnit"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "LocationBasedRiskUnitList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/LocationBasedRiskUnitData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "LocationBasedRiskUnitRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/LocationBasedRiskUnitData"
        }
      }
    },
    "LocationBasedRiskUnitResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/LocationBasedRiskUnitData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "NoteData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Note"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "NoteList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/NoteData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "NoteRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/NoteData"
        }
      }
    },
    "NoteResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/NoteData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "OtherStructureIncidentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/OtherStructureIncident"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "OtherStructureIncidentList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/OtherStructureIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "OtherStructureIncidentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/OtherStructureIncidentData"
        }
      }
    },
    "OtherStructureIncidentResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/OtherStructureIncidentData"
        }
      }
    },
    "PoliciesList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "PolicyCoverageList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyCoverageResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/CoverageData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Policy"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PolicyEndorsementList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/EndorsementData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyEndorsementResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/EndorsementData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyLocationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyLocation"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PolicyLocationList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyLocationResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyLocationData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyData"
        }
      }
    },
    "PolicyResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PolicyData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PropertyContentsIncidentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/PropertyContentsIncident"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "PropertyContentsIncidentList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PropertyContentsIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PropertyContentsIncidentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PropertyContentsIncidentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "PropertyContentsIncidentResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/PropertyContentsIncidentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "RecoveryReserveSetData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/RecoveryReserveSet"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "RecoveryReserveSetList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/RecoveryReserveSetData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "RecoveryReserveSetRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/RecoveryReserveSetData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "RecoveryReserveSetResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/RecoveryReserveSetData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "RecoverySetData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/RecoverySet"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "RecoverySetList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/RecoverySetData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "RecoverySetRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/RecoverySetData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "RecoverySetResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/RecoverySetData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ReserveSetData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ReserveSet"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ReserveSetList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ReserveSetData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ReserveSetRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ReserveSetData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "ReserveSetResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ReserveSetData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ServiceRequestAssigneeData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestAssignee"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ServiceRequestAssignmentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestAssigneeData"
        }
      }
    },
    "ServiceRequestData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequest"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ServiceRequestInvoiceMarkAsPaidData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestInvoicePayInfo"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ServiceRequestInvoiceMarkAsPaidRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestInvoiceMarkAsPaidData"
        }
      }
    },
    "ServiceRequestInvoiceOperationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestInvoiceOperationContext"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ServiceRequestInvoiceOperationRequest" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestInvoiceOperationData"
        }
      }
    },
    "ServiceRequestList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ServiceRequestData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "ServiceRequestOperationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestOperationContext"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ServiceRequestOperationRequest" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestOperationData"
        }
      }
    },
    "ServiceRequestRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "ServiceRequestResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "ServiceRequestResponseInclusions" : {
      "type" : "object",
      "properties" : {
        "Claim" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ClaimData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ClaimContact" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ClaimContactData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "Exposure" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ExposureData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "ServiceRequestInvoice" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ServiceRequestStatementData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ServiceRequestStatementData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestStatement"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "ServiceRequestStatementList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ServiceRequestStatementData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "ServiceRequestStatementRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestStatementData"
        }
      }
    },
    "ServiceRequestStatementResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestStatementData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "TransactionData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Transaction"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "TransactionList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TransactionData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "TransactionResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/TransactionData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "UnverifiedPolicyCoverageData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/Coverage"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "UnverifiedPolicyCoverageList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UnverifiedPolicyCoverageData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "UnverifiedPolicyCoverageRequest" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/UnverifiedPolicyCoverageData"
        }
      }
    },
    "UnverifiedPolicyCoverageResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/UnverifiedPolicyCoverageData"
        }
      }
    },
    "UnverifiedPolicyLocationData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/UnverifiedPolicyLocation"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "UnverifiedPolicyLocationList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UnverifiedPolicyLocationData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "UnverifiedPolicyLocationRequest" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/UnverifiedPolicyLocationData"
        }
      }
    },
    "UnverifiedPolicyLocationResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/UnverifiedPolicyLocationData"
        }
      }
    },
    "VehicleIncidentData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/VehicleIncident"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "VehicleIncidentList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/VehicleIncidentData"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "VehicleIncidentRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/VehicleIncidentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "VehicleIncidentResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/VehicleIncidentData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "VehicleRiskUnitData" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.",
          "enum" : [ "post", "patch" ]
        },
        "related" : {
          "type" : "object",
          "title" : "Related",
          "description" : "Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.",
          "$ref" : "#/definitions/framework_RelatedCollections",
          "readOnly" : true
        },
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention."
        },
        "attributes" : {
          "type" : "object",
          "$ref" : "#/definitions/VehicleRiskUnit"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of this element",
          "readOnly" : true
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion."
        }
      }
    },
    "VehicleRiskUnitList" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.",
          "readOnly" : true
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "Links related to the overall list of elements, used to paginate the list",
          "$ref" : "#/definitions/framework_Links",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/VehicleRiskUnitData"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "VehicleRiskUnitRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/VehicleRiskUnitData"
        }
      }
    },
    "VehicleRiskUnitResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "$ref" : "#/definitions/VehicleRiskUnitData"
        },
        "included" : {
          "type" : "object",
          "$ref" : "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "BatchRequest" : {
      "type" : "object",
      "title" : "Batch request",
      "description" : "The body of a batch request",
      "required" : [ "requests" ],
      "properties" : {
        "requests" : {
          "type" : "array",
          "title" : "Requests",
          "description" : "The array of subrequests",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BatchSubRequest"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "BatchResponse" : {
      "type" : "object",
      "title" : "Batch response",
      "description" : "The body of a response to a batch request. The `responses` field will have one element for every entry in the `requests` field on the request, and responses will appear in the same order.",
      "properties" : {
        "responses" : {
          "type" : "array",
          "title" : "Responses",
          "description" : "The list of subresponses, appearing in the same order as the elements in the `requests` field of the request",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/BatchSubResponse"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "BatchSubRequest" : {
      "type" : "object",
      "title" : "Batch subrequest",
      "description" : "An individual subrequest within a batch request",
      "required" : [ "method", "path" ],
      "properties" : {
        "body" : {
          "type" : "object",
          "title" : "Body",
          "description" : "The body of the subrequest"
        },
        "headers" : {
          "type" : "array",
          "title" : "Headers",
          "description" : "Headers that will be included as part of the subrequest. Any headers defined using this field will override header values inherited from the main request. Any headers present on the main request that are not defined in this list will be inherited when the subrequest is made, with the exception of the `GW-Checksum` header.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Header"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "method" : {
          "type" : "string",
          "title" : "Method",
          "description" : "The HTTP method for the subrequest",
          "enum" : [ "delete", "head", "get", "options", "patch", "post", "put" ]
        },
        "onFail" : {
          "type" : "string",
          "title" : "On fail",
          "description" : "Controls whether or not subsequent subrequests are processed if this subrequest fails. The default behavior is to continue processing subrequests. The `abort` option specifies that all subsequent subrequests will be skipped.",
          "enum" : [ "abort", "continue" ]
        },
        "path" : {
          "type" : "string",
          "title" : "Path",
          "description" : "The path for the subrequest. This path is relative to the root of the API hosting the batch endpoint. For example, if the batch endpoint is `<servlet>/rest/common/v1/batch`, then a path of `/activities` will mean a request against `<servlet>/rest/common/v1/activities`. The path must start with `/` and cannot contain whitespace.",
          "minLength" : 1,
          "pattern" : "^/[\\S]*$"
        },
        "query" : {
          "type" : "string",
          "title" : "Query",
          "description" : "The query string to use for the subrequest"
        }
      }
    },
    "BatchSubResponse" : {
      "type" : "object",
      "title" : "Batch subresponse",
      "description" : "A subresponse to a batch subrequest",
      "properties" : {
        "body" : {
          "type" : "object",
          "title" : "Body",
          "description" : "The body of the subresponse"
        },
        "code" : {
          "type" : "integer",
          "title" : "Code",
          "description" : "The HTTP status code for the subresponse"
        },
        "headers" : {
          "type" : "array",
          "title" : "Headers",
          "description" : "The headers returned for the subresponse",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Header"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "skipped" : {
          "type" : "boolean",
          "title" : "Skipped",
          "description" : "A `true` value indicates that the corresponding subrequest was not processed due to a prior failed request that specified the `onFail` field with the `abort` option"
        }
      }
    },
    "Header" : {
      "type" : "object",
      "title" : "Header",
      "description" : "An HTTP request or response header",
      "required" : [ "name", "value" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The header name"
        },
        "value" : {
          "type" : "string",
          "title" : "Value",
          "description" : "The header value"
        }
      }
    },
    "Activity" : {
      "type" : "object",
      "title" : "Activity",
      "description" : "An `Activity` is an assignable item that represents a task to be done, a decision to be made, or information to be aware of",
      "properties" : {
        "activityPattern" : {
          "type" : "string",
          "title" : "Activity pattern",
          "description" : "The code of the `ActivityPattern` used to create this activity and set its initial values",
          "x-gw-extensions" : {
            "createOnly" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "activityType" : {
          "type" : "object",
          "title" : "Activity type",
          "description" : "The type of this activity, such as `general` or `approval`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ActivityType"
          }
        },
        "approvalIssue" : {
          "type" : "string",
          "title" : "Approval issue",
          "description" : "The reason approval is needed. Only applicable to activities with an `activityType` of `approval`.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "approvalRationale" : {
          "type" : "string",
          "title" : "Approval rationale",
          "description" : "Rationale for approving or rejecting this activity. Only applicable to activities with an `activityType` of `approval`.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "approved" : {
          "type" : "boolean",
          "title" : "Approved",
          "description" : "This field is `true` if this activity has been approved, `false` if this activity has been rejected, and omitted otherwise. Only applicable to activities with an `activityType` of `approval`.",
          "readOnly" : true
        },
        "assignedByUser" : {
          "type" : "object",
          "title" : "Assigned by user",
          "description" : "A reference to the `User` who last assigned or re-assigned this activity",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "assignedGroup" : {
          "type" : "object",
          "title" : "Assigned group",
          "description" : "A reference to the `Group` that this activity is currently assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true
        },
        "assignedQueue" : {
          "type" : "object",
          "title" : "Assigned queue",
          "description" : "A reference to the `Queue` that this activity is currently assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true
        },
        "assignedUser" : {
          "type" : "object",
          "title" : "Assigned user",
          "description" : "A reference to the `User` that this activity is currently assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User",
            "sortable" : true
          }
        },
        "assignmentStatus" : {
          "type" : "object",
          "title" : "Assignment status",
          "description" : "The current assignment status of this activity, such as `assigned` or `unassigned`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "AssignmentStatus"
          }
        },
        "autopilotHandlingDecision" : {
          "type" : "object",
          "title" : "Autopilot handling decision",
          "description" : "Record of the decision made around how to handle this activity. Only intended for use if Claims Autopilot is enabled. (Since 1.2.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "filterable" : true,
            "typelist" : "AutopilotHandlingDecision"
          }
        },
        "autopilotId" : {
          "type" : "string",
          "title" : "Autopilot ID",
          "description" : "Unique identifier assigned to this activity by the Claims Autopilot system. Only intended for use by the Claims Autopilot system. (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "filterable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "autopilotPurpose" : {
          "type" : "object",
          "title" : "Autopilot purpose",
          "description" : "Activity purpose set by the Claims Autopilot system. Only intended for use by the Claims Autopilot system. (Since 1.2.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "filterable" : true,
            "typelist" : "AutopilotPurpose"
          }
        },
        "closeDate" : {
          "type" : "string",
          "title" : "Close date",
          "description" : "The date and time when this activity was completed, skipped, approved, or rejected",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "closeUser" : {
          "type" : "object",
          "title" : "Close user",
          "description" : "A reference to the `User` that completed, skipped, approved, or rejected this activity",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "coverageIssues" : {
          "type" : "array",
          "title" : "Coverage issues",
          "description" : "A list of possible issues with coverage for the associated claim (Since 1.2.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CoverageIssue"
          },
          "x-gw-sinceVersion" : "1.2.0",
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `Activity` was created (Since 1.1.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.1.0",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this activity",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "dueDate" : {
          "type" : "string",
          "title" : "Due date",
          "description" : "Date and time by which a person should complete the activity. If not completed by this time, the activity is considered overdue. Not applicable to activities that represent events rather than tasks.",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "endDate" : {
          "type" : "string",
          "title" : "End date",
          "description" : "Date and time at which the activity is expected to end. Only applicable to activities that represent events.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "escalated" : {
          "type" : "boolean",
          "title" : "Escalated",
          "description" : "A `true` value for this field indicates that the activity has been escalated",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "escalationDate" : {
          "type" : "string",
          "title" : "Escalation date",
          "description" : "Date and time at which this activity will be escalated if it has not yet been completed",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "externallyOwned" : {
          "type" : "boolean",
          "title" : "Externally owned",
          "description" : "A `true` value for this field indicates that the activity is owned by a user or group outside of the insurer",
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Activity`",
          "readOnly" : true
        },
        "importance" : {
          "type" : "object",
          "title" : "Importance",
          "description" : "Level of importance of the activity",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ImportanceLevel"
          }
        },
        "initialAssignment" : {
          "type" : "object",
          "title" : "Initial assignment",
          "description" : "The `Assignee` that this activity should be assigned to when it is first created",
          "$ref" : "#/definitions/Assignee",
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "mandatory" : {
          "type" : "boolean",
          "title" : "Mandatory",
          "description" : "A `true` value for this field indicates that the activity is mandatory and cannot be skipped"
        },
        "priority" : {
          "type" : "object",
          "title" : "Priority",
          "description" : "The priority of this activity",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "Priority"
          }
        },
        "recurring" : {
          "type" : "boolean",
          "title" : "Recurring",
          "description" : "A `true` value indicates that this activity is recurring"
        },
        "relatedTo" : {
          "type" : "object",
          "title" : "Related to",
          "description" : "A reference to the primary element that the activity is related to (Since 1.3.0)",
          "$ref" : "#/definitions/GenericRelation",
          "x-gw-sinceVersion" : "1.3.0"
        },
        "startDate" : {
          "type" : "string",
          "title" : "Start date",
          "description" : "Date and time at which the activity is scheduled to begin. Only applicable to activities that represent events.",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The status of this activity, such as `open` or `complete`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ActivityStatus"
          }
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "A brief title for the activity",
          "minLength" : 1,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "pattern" : "\\S",
          "maxLength" : 255
        }
      }
    },
    "ActivityPattern" : {
      "type" : "object",
      "title" : "Activity pattern",
      "description" : "An `ActivityPattern` is a template for an activity, and is used to create a new activity and set defaults for some of its fields",
      "properties" : {
        "activityClass" : {
          "type" : "object",
          "title" : "Activity class",
          "description" : "The class of activity that this activity pattern creates, such as `task` or `event`",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ActivityClass"
          }
        },
        "activityType" : {
          "type" : "object",
          "title" : "Activity type",
          "description" : "The type of activity that this activity pattern creates, such as `general` or `approval`",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ActivityType"
          }
        },
        "availableForClosedClaims" : {
          "type" : "boolean",
          "title" : "Available for closed claims",
          "description" : "A `true` value for this field indicates that this activity pattern can be used to create activities on closed claims"
        },
        "category" : {
          "type" : "object",
          "title" : "Category",
          "description" : "The category of the activity pattern. Used to help organize `ActivityPatterns` when presenting them to a user.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ActivityCategory",
            "filterBy" : [ "activityType" ]
          }
        },
        "claimLossType" : {
          "type" : "object",
          "title" : "Claim loss type",
          "description" : "A claim loss type for this pattern. Used to allow filtering activity patterns based on the loss type of the associated claim.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "LossType"
          }
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code that uniquely identifies this `ActivityPattern`",
          "x-gw-extensions" : {
            "createOnly" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The default `description` for activities created from this activity pattern",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "dueDate" : {
          "type" : "string",
          "title" : "Due date",
          "description" : "The default `dueDate` for activities created from this activity pattern, calculated based on the current date and time",
          "format" : "date-time"
        },
        "escalationDate" : {
          "type" : "string",
          "title" : "Escalation date",
          "description" : "The default `escalationDate` for activities created from this activity pattern, calculated based on the current date and time",
          "format" : "date-time"
        },
        "externallyOwned" : {
          "type" : "boolean",
          "title" : "Externally owned",
          "description" : "The default `externallyOwned` value for activities created from this activity pattern"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `ActivityPattern`"
        },
        "importance" : {
          "type" : "object",
          "title" : "Importance",
          "description" : "The default `importance` value for activities created from this activity pattern",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ImportanceLevel"
          }
        },
        "mandatory" : {
          "type" : "boolean",
          "title" : "Mandatory",
          "description" : "The default `mandatory` value for activities created from this activity pattern"
        },
        "priority" : {
          "type" : "object",
          "title" : "Priority",
          "description" : "The default `priority` for activities created from this activity pattern",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "Priority"
          }
        },
        "recurring" : {
          "type" : "boolean",
          "title" : "Recurring",
          "description" : "The default `recurring` value for activities created from this activity pattern"
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "The default `subject` for activities created from this activity pattern",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        }
      }
    },
    "AdditionalInfo" : {
      "type" : "object",
      "title" : "Additional info",
      "description" : "A name and value that defines an additional property of a contact role constraint, such as what loss types the constraint applies to",
      "properties" : {
        "propertyName" : {
          "type" : "string",
          "title" : "Property name",
          "description" : "The name of the property",
          "readOnly" : true
        },
        "value" : {
          "type" : "string",
          "title" : "Value",
          "description" : "The value of the property",
          "readOnly" : true
        }
      }
    },
    "Address" : {
      "type" : "object",
      "title" : "Address",
      "description" : "An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.",
      "x-gw-extensions" : {
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "CEDEX" : {
          "type" : "string",
          "title" : "CEDEX",
          "description" : "The CEDEX bureau of the address. Only applicable in certain countries.",
          "maxLength" : 2,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine1Kanji" : {
          "type" : "string",
          "title" : "Address line 1 kanji",
          "description" : "The kanji version of the first line of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine2Kanji" : {
          "type" : "string",
          "title" : "Address line 2 kanji",
          "description" : "The kanji version of the second line of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressType" : {
          "type" : "object",
          "title" : "Address type",
          "description" : "The type of the address (Since 1.2.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AddressType"
          }
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "cityKanji" : {
          "type" : "string",
          "title" : "City kanji",
          "description" : "The kanji version of the city of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of the address (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the address represented by this `Address`, including all standard fields for the address's country",
          "readOnly" : true
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "enterManually" : {
          "type" : "boolean",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Address`",
          "readOnly" : true
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "spatialPoint" : {
          "type" : "object",
          "title" : "Spatial point",
          "description" : "The latitude and longitude of this address, if it has been geocoded (Since 1.2.0)",
          "$ref" : "#/definitions/SpatialPoint",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "validUntil" : {
          "type" : "string",
          "title" : "Valid until",
          "description" : "The date and time that the address is valid until (Since 1.2.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true
        }
      }
    },
    "AssessmentContentItem" : {
      "type" : "object",
      "title" : "Assessment content item",
      "description" : "Assessment content item (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "amountAfterLimit" : {
          "type" : "object",
          "title" : "Amount after limit",
          "description" : "The amount payable on the item(s)",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        },
        "contentCategory" : {
          "type" : "object",
          "title" : "Content category",
          "description" : "Assessment category for property",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ContentLineItemCategory",
            "filterBy" : [ "contentSchedule" ]
          }
        },
        "contentSchedule" : {
          "type" : "object",
          "title" : "Content schedule",
          "description" : "Assessment schedule for property",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ContentLineItemSchedule"
          }
        },
        "dateAcquired" : {
          "type" : "string",
          "title" : "Date acquired",
          "description" : "Date when this item was acquired",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "depreciationPercentage" : {
          "type" : "string",
          "title" : "Depreciation percentage",
          "description" : "Depreciation percentage, per year",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "maximum" : 100,
          "minimum" : 0
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "Assessment line",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "incidentOrder" : {
          "type" : "integer",
          "title" : "Incident order",
          "description" : "Order of the item on the Incident",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "itemComment" : {
          "type" : "string",
          "title" : "Item comment",
          "description" : "Assessment item comment",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "numberOfItems" : {
          "type" : "integer",
          "title" : "Number of items",
          "description" : "Number of items",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "purchaseCost" : {
          "type" : "object",
          "title" : "Purchase cost",
          "description" : "Purchase cost",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        },
        "replacementValue" : {
          "type" : "object",
          "title" : "Replacement value",
          "description" : "Estimated cost of replacing item(s)",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        }
      }
    },
    "AssessmentSummary" : {
      "type" : "object",
      "title" : "Assessment summary",
      "description" : "Assessment summary (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "category" : {
          "type" : "string",
          "title" : "Category",
          "description" : "The categorization of the score. For example, a fraud system may use low_risk, medium_risk, high_risk. A total loss evaluation system may use repairable, total_loss.",
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "exposure" : {
          "type" : "object",
          "title" : "Exposure",
          "description" : "A reference to the `Exposure` that this assessment summary is associated with",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "resourceType" : "Exposure"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "normalizedScore" : {
          "type" : "string",
          "title" : "Normalized score",
          "description" : "The raw score mapped into the range 0-100. For example, a raw score of 320 out of 400 could map on a normalized score of 80.",
          "format" : "gw-bigdecimal",
          "minimum" : 0,
          "maximum" : 100,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "sortable" : true
          }
        },
        "rawAssessmentReferenceId" : {
          "type" : "string",
          "title" : "Raw assessment reference ID",
          "description" : "Reference ID to the raw assessment response",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "recommendedActionCode" : {
          "type" : "string",
          "title" : "Recommended action code",
          "description" : "A code corresponding to the recommended action, such as \"request_witness_statement\", \"block_payment\", \"initiate_recovery\", \"offer_cash_settlement\". This code could be used in business rules.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "recommendedActionDescription" : {
          "type" : "string",
          "title" : "Recommended action description",
          "description" : "A human readable description of the recommended action, such as \"Take a recorded statement from the witness\"",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "score" : {
          "type" : "string",
          "title" : "Score",
          "description" : "The score of the `Claim` or `Exposure`",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "sortable" : true
          }
        },
        "scoreDate" : {
          "type" : "string",
          "title" : "Score date",
          "description" : "The date and time the external system scored the `Claim` or `Exposure`",
          "format" : "date-time",
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          }
        },
        "scorePercentile" : {
          "type" : "string",
          "title" : "score percentile",
          "description" : "A value corresponding to where the score lies in the distribution of scores, as determined by the external system",
          "format" : "gw-bigdecimal",
          "minimum" : 0,
          "maximum" : 100,
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "sortable" : true
          }
        },
        "tapId" : {
          "type" : "string",
          "title" : "TAP ID",
          "description" : "The assessment provider name",
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "tapSubtypeId" : {
          "type" : "string",
          "title" : "TAP subtype ID",
          "description" : "Designation to differentiate between distinct types of assessments. For example, line.",
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        }
      }
    },
    "Assignee" : {
      "type" : "object",
      "title" : "Assignee",
      "description" : "An `Assignee` represents the target of an assignment action, such as a user/group combination, assignment queue, or automatic rule-based assignment",
      "properties" : {
        "assigneeId" : {
          "type" : "string",
          "title" : "Assignee ID",
          "description" : "Unique ID to reference this `Assignee` for includes (Since 1.4.0)",
          "x-gw-sinceVersion" : "1.4.0",
          "readOnly" : true
        },
        "autoAssign" : {
          "type" : "boolean",
          "title" : "Auto assign",
          "description" : "Set to `true` to indicate the assignment should be done automatically by the system. Cannot be combined with any other fields."
        },
        "claimOwner" : {
          "type" : "boolean",
          "title" : "Claim owner",
          "description" : "Set to `true` to indicate that the element should be assigned to the same user and group that own the element's claim"
        },
        "groupId" : {
          "type" : "string",
          "title" : "Group ID",
          "description" : "The ID of the `Group` that the resource should be assigned to. If specified without the `userId` field, the `User` within the `Group` is selected by assignment rules. If specified along with the `userId` field, that specific `User` is assigned the element."
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "A human-readable name for the type of assignment that this `Assignee` represents",
          "readOnly" : true
        },
        "queueId" : {
          "type" : "string",
          "title" : "Queue ID",
          "description" : "The ID of the `Queue` that the resource should be assigned to. Cannot be combined with any other fields."
        },
        "userId" : {
          "type" : "string",
          "title" : "User ID",
          "description" : "The ID of the `User` that the resource should be assigned to. The `groupId` field must also be specified if the `userId` field is specified, and the `User` must be a member of that `Group` and have permission to be assigned the element."
        }
      }
    },
    "Building" : {
      "type" : "object",
      "title" : "Building",
      "description" : "A building on a policy or claim",
      "properties" : {
        "buildingNumber" : {
          "type" : "string",
          "title" : "Building number",
          "description" : "The alphanumeric number assigned to this building",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "notes" : {
          "type" : "string",
          "title" : "Notes",
          "description" : "Any comments regarding this building",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element within the policy system",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        }
      }
    },
    "Check" : {
      "type" : "object",
      "title" : "Check",
      "description" : "A paper check or electronic funds transfer issued to a particular payee to deliver one or more payments (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "bankAccount" : {
          "type" : "object",
          "title" : "Bank account",
          "description" : "The type of bank account that will be used as the source for the check",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true,
            "typelist" : "BankAccount"
          }
        },
        "checkBatching" : {
          "type" : "object",
          "title" : "Check batching",
          "description" : "How the check should be batched for sending",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true,
            "typelist" : "CheckBatching"
          }
        },
        "checkInstructions" : {
          "type" : "object",
          "title" : "Check instructions",
          "description" : "Special handling instructions for the check",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true,
            "typelist" : "CheckHandlingInstructions"
          }
        },
        "checkNumber" : {
          "type" : "string",
          "title" : "Check number",
          "description" : "The identifier for the check or the electronic funds transfer",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "checkType" : {
          "type" : "object",
          "title" : "Check type",
          "description" : "Indicates if the check is the primary or secondary check within a check group",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true,
            "typelist" : "CheckType"
          }
        },
        "claimContact" : {
          "type" : "object",
          "title" : "Claim contact",
          "description" : "A reference to the `ClaimContact` that represents the claimant the check is being written to",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "resourceType" : "ClaimContact"
          }
        },
        "comments" : {
          "type" : "string",
          "title" : "Comments",
          "description" : "Comments about the check",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "dateOfService" : {
          "type" : "string",
          "title" : "Date of service",
          "description" : "The date and time the service being paid for was performed, if the check is for a service",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "deductionType" : {
          "type" : "object",
          "title" : "Deduction type",
          "description" : "The type of deduction for a secondary check. Only applicable if `checkType` is `secondary`.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true,
            "typelist" : "DeductionType"
          }
        },
        "deliveryMethod" : {
          "type" : "object",
          "title" : "Delivery method",
          "description" : "The requested delivery method for the check",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true,
            "typelist" : "DeliveryMethod"
          }
        },
        "enteredTime" : {
          "type" : "string",
          "title" : "Entered time",
          "description" : "The date and time that the check was actually created. Note that this is not necessarily the same as the time that the `Check` element was created in the claims system.",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true
          }
        },
        "grossAmount" : {
          "type" : "object",
          "title" : "Gross amount",
          "description" : "The gross amount of the check, before any deductions",
          "$ref" : "#/definitions/MonetaryAmount",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "invoiceNumber" : {
          "type" : "string",
          "title" : "Invoice number",
          "description" : "The invoice number associated with this check",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "issueDate" : {
          "type" : "string",
          "title" : "Issue date",
          "description" : "The date and time that the check was issued",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true
          }
        },
        "mailTo" : {
          "type" : "string",
          "title" : "Mail to",
          "description" : "The name of the person or company that the check is mailed to",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "mailingAddress" : {
          "type" : "object",
          "title" : "Mailing address",
          "description" : "The address of the person or company that the check is mailed to",
          "$ref" : "#/definitions/Address",
          "x-gw-nullable" : true
        },
        "memo" : {
          "type" : "string",
          "title" : "Memo",
          "description" : "The memo to include on the check",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "payTo" : {
          "type" : "string",
          "title" : "Pay to",
          "description" : "The person or company the check is made out to",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "payees" : {
          "type" : "array",
          "title" : "Payees",
          "description" : "The list of recipients of the check",
          "minItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Payee"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "requiredForCreate" : true
          }
        },
        "paymentMethod" : {
          "type" : "object",
          "title" : "Payment method",
          "description" : "The requested payment method for the check",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true,
            "typelist" : "PaymentMethod"
          }
        },
        "payments" : {
          "type" : "array",
          "title" : "Payments",
          "description" : "The list of `Transaction` elements that detail the payments included with this check",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/SimpleReference",
            "x-gw-extensions" : {
              "resourceType" : "Payment"
            }
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "paymentsToWrite" : {
          "type" : "array",
          "title" : "Payments to create",
          "description" : "The list of `Payments` used to populate a check during creation or edit",
          "minItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Transaction"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "portion" : {
          "type" : "object",
          "title" : "Portion",
          "description" : "The amount of the primary payment that is allocated to this secondary check. Only applicable if `checkType` is `secondary`.",
          "$ref" : "#/definitions/CheckPortion",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "reportability" : {
          "type" : "object",
          "title" : "Reportability",
          "description" : "Indicates whether the check should be reported as income to the appropriate tax agency. Only applicable if `checkType` is `primary`.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ReportabilityType"
          }
        },
        "reportableAmount" : {
          "type" : "object",
          "title" : "Reportable amount",
          "description" : "The amount of the check that should be reported as income to the appropriate tax agency, if the check is considered to be reportable",
          "$ref" : "#/definitions/MonetaryAmount",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true
          },
          "maximum" : 9999999999999999.99,
          "minimum" : -9999999999999999.99
        },
        "scheduledSendDate" : {
          "type" : "string",
          "title" : "Scheduled send date",
          "description" : "The date that the check is scheduled to be sent. The scheduled send date begins at the start of this date in the server's timezone.",
          "format" : "date",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "scheduledSendDateTime" : {
          "type" : "string",
          "title" : "Scheduled send date and time",
          "description" : "The date and time that the check is scheduled to be sent. This is an instant that occurs at midnight in the server's time zone.",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "servicePdEnd" : {
          "type" : "string",
          "title" : "Service period end",
          "description" : "The end date and time of the service period for the check",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true
          }
        },
        "servicePdStart" : {
          "type" : "string",
          "title" : "Service period start",
          "description" : "The start date and time of the service period for the check",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "sortable" : true
          }
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The status of the check",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "TransactionStatus"
          }
        }
      }
    },
    "CheckPortion" : {
      "type" : "object",
      "title" : "Check portion",
      "description" : "The amount of multi-payee check that is allocated to particular secondary `Check` (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "fixedAmount" : {
          "type" : "object",
          "title" : "Fixed amount",
          "description" : "The fixed amount to allocate to this check. Setting this value will null out the value of the `percentage` field.",
          "$ref" : "#/definitions/MonetaryAmount",
          "maximum" : 9999999999999999.99,
          "minimum" : -9999999999999999.99
        },
        "percentage" : {
          "type" : "string",
          "title" : "Percentage",
          "description" : "The percentage of the overall amount to allocate to this check. Setting this value will null out the value of the `fixedAmount` field.",
          "format" : "gw-bigdecimal",
          "maximum" : 100,
          "minimum" : 0
        }
      }
    },
    "CheckRecurrence" : {
      "type" : "object",
      "title" : "Check recurrence",
      "description" : "Defines the recurrence schedule for a `Check` (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "firstDueDate" : {
          "type" : "string",
          "title" : "First due date",
          "description" : "The due date and time of the first check in the recurrence",
          "format" : "date-time",
          "x-gw-extensions" : {
            "requiredForCreate" : true
          }
        },
        "issuanceDateOffset" : {
          "type" : "integer",
          "title" : "Issuance date offset",
          "description" : "The number of days before the due date that a check should be issued"
        },
        "monthlyFrequency" : {
          "type" : "integer",
          "title" : "Monthly frequency",
          "description" : "The number of months between recurring checks. For example, a value of `1` will create a check every month, and a value of `3` will create a check every three months. Only applicable if `subtype` is `MonthlyCheckRecurrence`.",
          "minimum" : 0,
          "x-gw-extensions" : {
            "entitySubtype" : "MonthlyCheckRecurrence"
          },
          "exclusiveMinimum" : true
        },
        "numChecks" : {
          "type" : "integer",
          "title" : "Number of checks",
          "description" : "The number of checks in the recurrence",
          "minimum" : 0,
          "x-gw-extensions" : {
            "requiredForCreate" : true
          },
          "exclusiveMinimum" : true
        },
        "recurrenceDate" : {
          "type" : "integer",
          "title" : "Recurrence date",
          "description" : "The day of the month on which the check is due. For example, a value of `15` would result in recurring checks being due on the 15th day of the month. Only applicable if `subtype` is `MonthlyCheckRecurrence`. If `recurrenceDate` is set, `recurrenceDay` and `recurrenceWeek` should not be set.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "MonthlyCheckRecurrence"
          }
        },
        "recurrenceDay" : {
          "type" : "object",
          "title" : "Recurrence day",
          "description" : "The day of the week on which the check is due",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "RecurrenceDay"
          }
        },
        "recurrenceWeek" : {
          "type" : "object",
          "title" : "Recurrence week",
          "description" : "The week of the month on which the check is due. Only applicable if `subtype` is `MonthlyCheckRecurrence`.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "MonthlyCheckRecurrence",
            "typelist" : "RecurrenceWeek"
          }
        },
        "subtype" : {
          "type" : "object",
          "title" : "Subtype",
          "description" : "The type of recurrence",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "requiredForCreate" : true,
            "typelist" : "CheckRecurrence"
          }
        },
        "weeklyFrequency" : {
          "type" : "integer",
          "title" : "Weekly frequency",
          "description" : "The number of weeks between recurring checks. For example, a value of `1` will create a check every week, and a value of `4` will create a check every four weeks. Only applicable if `subtype` is `WeeklyCheckRecurrence`.",
          "minimum" : 0,
          "x-gw-extensions" : {
            "entitySubtype" : "WeeklyCheckRecurrence"
          },
          "exclusiveMinimum" : true
        }
      }
    },
    "CheckSet" : {
      "type" : "object",
      "title" : "Check set",
      "description" : "A set of related checks that are submitted together for approval (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "approvalDate" : {
          "type" : "string",
          "title" : "Approval date",
          "description" : "The date and time when this check set was approved or rejected",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "approvalStatus" : {
          "type" : "object",
          "title" : "Approval status",
          "description" : "Whether this check set has been approved, rejected, or is still awaiting approval",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ApprovalStatus"
          }
        },
        "checks" : {
          "type" : "array",
          "title" : "Checks",
          "description" : "A list of references to `Check` elements that were created as part of this check set",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/SimpleReference",
            "x-gw-extensions" : {
              "resourceType" : "Check"
            }
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          }
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `CheckSet` was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "primaryCheckToWrite" : {
          "type" : "object",
          "title" : "First primary check",
          "description" : "When creating a new `CheckSet`, this represents the primary check in the check set. After creation, this will be the primary check with the earliest scheduled send date, if this check set defines a recurrence.",
          "$ref" : "#/definitions/Check",
          "x-gw-extensions" : {
            "requiredForCreate" : true
          }
        },
        "recurrence" : {
          "type" : "object",
          "title" : "Recurrence",
          "description" : "Details of the recurrence schedule, if this set of checks should recur",
          "$ref" : "#/definitions/CheckRecurrence",
          "x-gw-nullable" : true
        },
        "requestingUser" : {
          "type" : "object",
          "title" : "Requesting user",
          "description" : "A reference to the `User` that represents the caller that submitted this check set for approval",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "secondaryChecksToWrite" : {
          "type" : "array",
          "title" : "First secondary checks",
          "description" : "When creating a new `CheckSet`, this represents the list of secondary checks in the check set. After creation, this will be the secondary checks with the earliest scheduled send date, if this check set defines a recurrence.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Check"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "Claim" : {
      "type" : "object",
      "title" : "Claim",
      "description" : "An insurance claim",
      "properties" : {
        "allValidationLevelsReached" : {
          "type" : "array",
          "title" : "All validation levels reached",
          "description" : "The list of all the validation levels that this claim has passed (Since 1.3.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TypeKeyReference",
            "x-gw-extensions" : {
              "defaultViews" : [ "detail" ],
              "typelist" : "ValidationLevel"
            }
          },
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          }
        },
        "arson" : {
          "type" : "boolean",
          "title" : "Arson",
          "description" : "A `true` value indicates that this claim involves arson",
          "x-gw-nullable" : true
        },
        "assignedByUser" : {
          "type" : "object",
          "title" : "Assigned by user",
          "description" : "A reference to the `User` who last assigned or re-assigned this claim",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "assignedGroup" : {
          "type" : "object",
          "title" : "Assigned group",
          "description" : "A reference to the `Group` that this claim is currently assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Group"
          }
        },
        "assignedQueue" : {
          "type" : "object",
          "title" : "Assigned queue",
          "description" : "A reference to the `AssignableQueue` that this claim is currently assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "AssignableQueue"
          }
        },
        "assignedUser" : {
          "type" : "object",
          "title" : "Assigned user",
          "description" : "A reference to the `User` that this claim is currently assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User",
            "sortable" : true
          }
        },
        "assignmentStatus" : {
          "type" : "object",
          "title" : "Assignment status",
          "description" : "The current assignment status of this claim, such as `assigned` or `unassigned`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "AssignmentStatus"
          }
        },
        "claimNumber" : {
          "type" : "string",
          "title" : "Claim number",
          "description" : "The claim number assigned to this claim",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "closeDate" : {
          "type" : "string",
          "title" : "Close date",
          "description" : "The date and time when this claim was closed",
          "format" : "date-time",
          "readOnly" : true
        },
        "closedOutcome" : {
          "type" : "object",
          "title" : "Closed outcome",
          "description" : "The outcome reached when closing this claim",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ClaimClosedOutcomeType"
          }
        },
        "coverageInQuestion" : {
          "type" : "boolean",
          "title" : "Coverage in question",
          "description" : "A `true` value indicates that the claim might not be covered by the insured's policy (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0"
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of the accident or loss",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "faultRating" : {
          "type" : "object",
          "title" : "Fault rating",
          "description" : "A determination of who is considered to be at fault",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "FaultRating"
          }
        },
        "filterPropertyRiskUnits" : {
          "type" : "array",
          "title" : "Filter property risk units",
          "description" : "A list of `policySystemId` values for property risk units to include when retrieving the policy",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "filterVehicleRiskUnits" : {
          "type" : "array",
          "title" : "Filter vehicle risk units",
          "description" : "A list of `policySystemId` values for vehicle risk units to include when retrieving the policy",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "fireDepartmentResponded" : {
          "type" : "boolean",
          "title" : "Fire department responded",
          "description" : "A `true` value indicates that the fire department responded to the damage",
          "x-gw-nullable" : true
        },
        "fireSource" : {
          "type" : "string",
          "title" : "Fire source",
          "description" : "A description of the source of the fire that caused this claim",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 250
        },
        "flagged" : {
          "type" : "object",
          "title" : "Flagged",
          "description" : "Whether this claim has been flagged",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "FlaggedType"
          }
        },
        "hasWaterBeenTurnedOff" : {
          "type" : "boolean",
          "title" : "Has the water been turned off",
          "description" : "A `true` value indicates that the water to the house or room affected by water damage has been turned off",
          "x-gw-nullable" : true
        },
        "howReported" : {
          "type" : "object",
          "title" : "How reported",
          "description" : "How the claim was reported",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "HowReportedType"
          }
        },
        "howWasFireDiscovered" : {
          "type" : "string",
          "title" : "How was fire discovered",
          "description" : "A description of how the fire that caused this claim was discovered",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 250
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "incidentOnly" : {
          "type" : "boolean",
          "title" : "Incident only",
          "description" : "A `true` value indicates that this claim represents an incident report only and should not be processed further"
        },
        "insured" : {
          "type" : "object",
          "title" : "Insured",
          "description" : "A reference to the `ClaimContact` that represents the insured",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "isAnyoneInjured" : {
          "type" : "boolean",
          "title" : "Is anyone injured",
          "description" : "A `true` value indicates that someone was injured as a result of the loss",
          "x-gw-nullable" : true
        },
        "isHomeHabitable" : {
          "type" : "boolean",
          "title" : "Is the home habitable",
          "description" : "A `true` value indicates that the home is still habitable. Used only for claims involving damage to the insured's home.",
          "x-gw-nullable" : true
        },
        "isHomeSecure" : {
          "type" : "boolean",
          "title" : "Is the home secure",
          "description" : "A `true` value indicates that the home is still secure. Used only for claims involving damage to the insured's home.",
          "x-gw-nullable" : true
        },
        "isRoofProtected" : {
          "type" : "boolean",
          "title" : "Is the roof protected",
          "description" : "A `true` value indicates that water damage to the roof is covered",
          "x-gw-nullable" : true
        },
        "jurisdiction" : {
          "type" : "object",
          "title" : "Jurisdiction",
          "description" : "The jurisdiction that covers this loss. This jurisdiction may differ from the jurisdiction in which the loss occurred.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "lobCode" : {
          "type" : "object",
          "title" : "Line of business code",
          "description" : "The line of business code for the policy line this claim is made against. If the policy only contains a single line of business, this will be set automatically when the claim is created, otherwise it must be specified manually.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "typelist" : "LOBCode",
            "filterBy" : [ "lossType" ]
          }
        },
        "lossCause" : {
          "type" : "object",
          "title" : "Loss cause",
          "description" : "The cause of the loss",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LossCause",
            "filterBy" : [ "lossType" ]
          }
        },
        "lossDate" : {
          "type" : "string",
          "title" : "Loss date",
          "description" : "The date and time when the loss occurred",
          "format" : "date-time",
          "x-gw-extensions" : {
            "before" : "now",
            "createOnly" : true,
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          }
        },
        "lossLocation" : {
          "type" : "object",
          "title" : "Loss location",
          "description" : "The location of the loss",
          "$ref" : "#/definitions/ClaimAddress",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "lossType" : {
          "type" : "object",
          "title" : "Loss type",
          "description" : "The type of loss represented by this claim",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "LossType"
          }
        },
        "mainContact" : {
          "type" : "object",
          "title" : "Main contact",
          "description" : "A reference to the `ClaimContact` that represents the main contact for this claim",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "policyAddresses" : {
          "type" : "array",
          "title" : "Policy addresses",
          "description" : "A list of addresses from the policy, which can then be used to set values of other fields such as the `lossLocation`",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ClaimAddress"
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The policy number of the insurance policy this claim is filed against",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "reportedByType" : {
          "type" : "object",
          "title" : "Reported by type",
          "description" : "The relation between the insured party and the claim reporter",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "PersonRelationType"
          }
        },
        "reportedDate" : {
          "type" : "string",
          "title" : "Reported date",
          "description" : "The date and time when the claim was reported",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now"
          }
        },
        "reporter" : {
          "type" : "object",
          "title" : "Main contact",
          "description" : "A reference to the `ClaimContact` that represents the person who reported this claim",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "segment" : {
          "type" : "object",
          "title" : "Segment",
          "description" : "The segment assigned to this claim",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ClaimSegment"
          }
        },
        "siuStatus" : {
          "type" : "object",
          "title" : "SIU status",
          "description" : "The special investigation unit status of this claim (Since 1.2.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "SIUStatus"
          }
        },
        "smokeDamageOnly" : {
          "type" : "boolean",
          "title" : "Smoke damage only",
          "description" : "A `true` value indicates that damage was caused only by smoke and not by fire",
          "x-gw-nullable" : true
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The status of the claim, such as `open` or `closed`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "ClaimState"
          }
        },
        "strategy" : {
          "type" : "object",
          "title" : "Strategy",
          "description" : "The strategy assigned to this claim",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ClaimStrategy"
          }
        },
        "validationLevel" : {
          "type" : "object",
          "title" : "Validation level",
          "description" : "The validation level of this claim. If the claim `state` is `open`, edits to this claim must continue to pass this validation rules at this level and all lower validation levels.",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ValidationLevel"
          }
        },
        "waterSource" : {
          "type" : "object",
          "title" : "Water source",
          "description" : "The source of the water that is entering the damaged property",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "WaterSource"
          }
        },
        "witnesses" : {
          "type" : "array",
          "title" : "Witnesses",
          "description" : "A list of witnesses relevant to this claim",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Witness"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "ClaimAddress" : {
      "type" : "object",
      "title" : "Claim address",
      "description" : "A `ClaimAddress` represents an address that appears on a claim or policy. It combines standard address fields with policy identifiers.",
      "x-gw-extensions" : {
        "discriminatorProperty" : "country"
      },
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "title" : "Address line 1",
          "description" : "The first line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine2" : {
          "type" : "string",
          "title" : "Address line 2",
          "description" : "The second line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "addressLine3" : {
          "type" : "string",
          "title" : "Address line 3",
          "description" : "The third line of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "area" : {
          "type" : "object",
          "title" : "Area",
          "description" : "The area of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The city of the address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "country" : {
          "type" : "string",
          "title" : "Country",
          "description" : "The country of the address. The value of the `country` field will affect which other fields on the `ClaimAddress` are applicable.",
          "x-gw-type" : "typekey.Country",
          "x-gw-nullable" : true
        },
        "county" : {
          "type" : "string",
          "title" : "County",
          "description" : "The county of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "department" : {
          "type" : "object",
          "title" : "Department",
          "description" : "The department of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted value of the address represented by this `ClaimAddress`, including all standard fields for the address's country",
          "readOnly" : true
        },
        "emirate" : {
          "type" : "object",
          "title" : "Emirate",
          "description" : "The emirate of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "island" : {
          "type" : "object",
          "title" : "Island",
          "description" : "The island of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "oblast" : {
          "type" : "object",
          "title" : "Oblast",
          "description" : "The oblast of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "parish" : {
          "type" : "object",
          "title" : "Parish",
          "description" : "The parish of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "policyAddress" : {
          "type" : "boolean",
          "title" : "Policy address",
          "description" : "A `true` value for this field indicates that this `ClaimAddress` is part of the claim's policy and cannot be edited directly",
          "readOnly" : true
        },
        "policyLabel" : {
          "type" : "string",
          "title" : "Policy label",
          "description" : "Describes where on the policy this address came from. Only applicable if `policyAddress` is `true`."
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The postal code of the address. Only applicable in certain countries.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "prefecture" : {
          "type" : "object",
          "title" : "Prefecture",
          "description" : "The prefecture of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "province" : {
          "type" : "object",
          "title" : "Province",
          "description" : "The province of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state of the address. Only applicable in certain countries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "countryRestricted" : true,
            "typelist" : "State",
            "filterBy" : [ "country" ]
          }
        }
      }
    },
    "ClaimAssignee" : {
      "type" : "object",
      "title" : "Claim assignee",
      "description" : "The target of an assignment action, such as a user/group combination or automatic rule-based assignment (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "autoAssign" : {
          "type" : "boolean",
          "title" : "Auto assign",
          "description" : "Set to `true` to indicate the assignment should be done by assignment rules. Cannot be combined with any other assignment criteria fields."
        },
        "groupId" : {
          "type" : "string",
          "title" : "Group ID",
          "description" : "The `id` of the `Group` that the claim should be assigned to. If specified without the `userId` field, the `User` within the `Group` is selected by assignment rules. If specified along with the `userId` field, the `User` must be a member of the `Group`. That `User` is assigned the element."
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "A human-readable name for the type of assignment that this `ClaimAssignee` represents",
          "readOnly" : true
        },
        "userId" : {
          "type" : "string",
          "title" : "User ID",
          "description" : "The `id` of the `User` that the claim should be assigned to. The `groupId` field must also be specified if the `userId` field is specified, and the `User` must be a member of that `Group` and have permission to be assigned the element."
        }
      }
    },
    "ClaimContact" : {
      "type" : "object",
      "title" : "Claim contact",
      "description" : "A contact on the claim",
      "x-gw-extensions" : {
        "discriminatorProperty" : "contactSubtype"
      },
      "properties" : {
        "addressBookUID" : {
          "type" : "string",
          "title" : "Address book UID",
          "description" : "The unique ID of this `ClaimContact` within the contact management system. Only applicable if the `ClaimContact` has been linked to a contact management system.",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        },
        "cellPhone" : {
          "type" : "object",
          "title" : "Cell phone",
          "description" : "The person's mobile phone number. Only applicable for a `ClaimContact` that represents a person.",
          "$ref" : "#/definitions/PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The name of the company represented by this `Contact`. Only applicable for a `ClaimContact` that represents a company.",
          "x-gw-extensions" : {
            "entitySubtype" : "Company"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "companyNameKanji" : {
          "type" : "string",
          "title" : "Company name kanji",
          "description" : "The kanji version of the name of the company represented by this `ClaimContact`. Only applicable for a `ClaimContact` that represents a company.",
          "x-gw-extensions" : {
            "entitySubtype" : "Company"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "contactSubtype" : {
          "type" : "string",
          "title" : "Contact subtype",
          "description" : "The specific type of contact that this `ClaimContact` represents, such as `Person` or `Company`. The set of fields that can be set on a `ClaimContact` depend on its `contactSubtype`.",
          "x-gw-type" : "typekey.Contact",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "dateOfBirth" : {
          "type" : "string",
          "title" : "Date of birth",
          "description" : "The person's date of birth. Only applicable for a `ClaimContact` that represents a person.",
          "format" : "date",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now",
            "entitySubtype" : "Person"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "A formatted representation of the full name for this `ClaimContact', including all applicable fields such as `firstName` or `lastName`",
          "readOnly" : true,
          "x-gw-nullable" : true
        },
        "doctorSpecialty" : {
          "type" : "object",
          "title" : "Doctor specialty",
          "description" : "The doctor's specialty. Only applicable for a `ClaimContact` that represent a doctor.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Doctor",
            "typelist" : "SpecialtyType"
          }
        },
        "editableRoles" : {
          "type" : "array",
          "title" : "Editable roles",
          "description" : "The list of roles that this contact has on the claim and which are not otherwise represented by concrete fields such as `reporter` or `witness`. This list can be edited directly to change the roles assigned to this contact.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ContactRole"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "emailAddress1" : {
          "type" : "string",
          "title" : "E-mail address 1",
          "description" : "The contact's primary e-mail address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "emailAddress2" : {
          "type" : "string",
          "title" : "E-mail address 2",
          "description" : "The contact's secondary e-mail address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The persons's first name. Only applicable for a `ClaimContact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "homePhone" : {
          "type" : "object",
          "title" : "Home phone",
          "description" : "The person's home phone number. Only applicable for a `ClaimContact` that represents a person.",
          "$ref" : "#/definitions/PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The person's last name. Only applicable for a `ClaimContact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "licenseNumber" : {
          "type" : "string",
          "title" : "Driver's license number",
          "description" : "The person's driver's license number. Only applicable for a `ClaimContact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 20
        },
        "licenseState" : {
          "type" : "object",
          "title" : "Driver's license state",
          "description" : "The person's driver's license state. Only applicable for a `ClaimContact` that represents a person.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "Jurisdiction"
          }
        },
        "linkStatus" : {
          "type" : "string",
          "title" : "Link status",
          "description" : "A code that indicates whether the contact is currently linked to the contact management system. Requesting this field will slow down API responses, since computing this value requires a call to the contact management system. (Since 1.3.0)",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "medicalLicense" : {
          "type" : "string",
          "title" : "Medical license",
          "description" : "The doctor's medical license number. Only applicable for a `ClaimContact` that represent a doctor.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Doctor"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "Policy system ID",
          "description" : "The unique identifier of this element within the policy system",
          "readOnly" : true,
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "primaryAddress" : {
          "type" : "object",
          "title" : "Primary address",
          "description" : "The contact's primary address",
          "$ref" : "#/definitions/Address",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "primaryLanguage" : {
          "type" : "object",
          "title" : "Primary language",
          "description" : "The contact's primary language",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "primaryLocale" : {
          "type" : "object",
          "title" : "Primary locale",
          "description" : "The contact's primary locale",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LocaleType"
          }
        },
        "primaryPhone" : {
          "type" : "string",
          "title" : "Primary phone",
          "description" : "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
          "readOnly" : true
        },
        "primaryPhoneType" : {
          "type" : "object",
          "title" : "Primary phone type",
          "description" : "The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for a `ClaimContact` that represents a person.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "PrimaryPhoneType"
          }
        },
        "roles" : {
          "type" : "array",
          "title" : "Roles",
          "description" : "The list of all roles that this contact has on the claim, including roles that are represented by concrete fields such as `reporter`. This field cannot be edited directly. To edit the roles assigned to a contact, use either the concrete fields on the appropriate element, such as `reporter` on `Claim`, or update the `editableRoles` field on the contact.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ContactRole"
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          }
        },
        "taxId" : {
          "type" : "string",
          "title" : "Tax ID",
          "description" : "The contact's tax ID",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "workPhone" : {
          "type" : "object",
          "title" : "Work phone",
          "description" : "The contact's work phone number, if this `Contact` represents a person, or the business's phone number, if this `Contact` represents a company",
          "$ref" : "#/definitions/PhoneNumber",
          "x-gw-nullable" : true
        }
      }
    },
    "ClaimInfo" : {
      "type" : "object",
      "title" : "Claim info",
      "description" : "Claim summary information (Since 1.3.1)",
      "x-gw-sinceVersion" : "1.3.1",
      "properties" : {
        "archiveState" : {
          "type" : "object",
          "title" : "Archive state",
          "description" : "The archive state of this claim info",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ArchiveState"
          }
        },
        "claim" : {
          "type" : "object",
          "title" : "Claim",
          "description" : "The details of the claim",
          "$ref" : "#/definitions/Claim",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "claimNumber" : {
          "type" : "string",
          "title" : "Claim number",
          "description" : "The claim number assigned to this claim",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "lossDate" : {
          "type" : "string",
          "title" : "Loss date",
          "description" : "The `lossDate` of the claim",
          "format" : "date-time",
          "readOnly" : true
        },
        "noticeDate" : {
          "type" : "string",
          "title" : "Reported date",
          "description" : "The date and time when the claim was reported",
          "format" : "date-time",
          "readOnly" : true
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The `policyNumber` of the claim's policy",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        }
      }
    },
    "ClaimReference" : {
      "type" : "object",
      "title" : "Claim reference",
      "description" : "A reference to a claim",
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "claimNumber" : {
          "type" : "string",
          "title" : "Claim number",
          "description" : "The `claimNumber` of the referenced claim",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "ClaimSearchRequestAttributes" : {
      "type" : "object",
      "title" : "Claim search request attributes",
      "description" : "Criteria of the claim to search for",
      "properties" : {
        "claimNumber" : {
          "type" : "string",
          "title" : "Claim number",
          "description" : "The `clamNumber` of the claim",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The first name of a contact on the claim. By default the search will look for contacts who have the role of `claimant` on the claim. You can use the `nameSearchType` field to change the search to look for contacts with other roles, such as `insured`, or to search all contacts regardless of role.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The last name of a contact on the claim. By default the search will look for contacts who have the role of `claimant` on the claim. You can use the `nameSearchType` field to change the search to look for contacts with other roles, such as `insured`, or to search all contacts regardless of role.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "nameSearchType" : {
          "type" : "object",
          "title" : "Name search type",
          "description" : "When searching by `firstName` or `lastName`, specifies which claim contacts to check based on the contact role. For example, when searching by last name, if this field is set to `insured`, the search will return any claim where the specified last name matches the last name of the contact who is designated as the insured.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ClaimSearchNameSearchType"
          }
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The `policyNumber` of the claim's policy",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        }
      }
    },
    "ClaimSearchResult" : {
      "type" : "object",
      "title" : "Claim search results",
      "description" : "Summary information about a active claim returned from a claim search request",
      "properties" : {
        "adjusterName" : {
          "type" : "string",
          "title" : "Adjuster name",
          "description" : "The name of the claim's assigned user, or information about the assignment status if the claim is unassigned"
        },
        "claimId" : {
          "type" : "string",
          "title" : "Claim ID",
          "description" : "The `id` of the claim"
        },
        "claimNumber" : {
          "type" : "string",
          "title" : "Claim number",
          "description" : "The `claimNumber` of the claim",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "claimants" : {
          "type" : "array",
          "title" : "Claimants",
          "description" : "A list of names of claimants on the claim",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "insuredName" : {
          "type" : "string",
          "title" : "Insured name",
          "description" : "The name of the insured"
        },
        "lossDate" : {
          "type" : "string",
          "title" : "Loss date",
          "description" : "The `lossDate` of the claim",
          "format" : "date-time"
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The `policyNumber` of the claim",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The `state` of the claim, such as `open` or `closed`",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ClaimState"
          }
        }
      }
    },
    "ClaimSearchResultWrapper" : {
      "type" : "object",
      "title" : "Claim search results",
      "description" : "Summary information about a active or archived claim returned from a claim search request (Since 1.3.1)",
      "x-gw-sinceVersion" : "1.3.1",
      "properties" : {
        "adjusterName" : {
          "type" : "string",
          "title" : "Adjuster name",
          "description" : "The name of the claim's assigned user, or information about the assignment status if the claim is unassigned"
        },
        "archiveState" : {
          "type" : "object",
          "title" : "Archive state",
          "description" : "Archive state of the claim",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ArchiveState"
          }
        },
        "archived" : {
          "type" : "boolean",
          "title" : "The claim was archived or not",
          "description" : "The claim was archived or not"
        },
        "archivedAdjuster" : {
          "type" : "string",
          "title" : "The adjuster that performed the archive",
          "description" : "The adjuster that performed the archive"
        },
        "assignedGroup" : {
          "type" : "string",
          "title" : "Assigned group",
          "description" : "Assigned group of the claim"
        },
        "claimId" : {
          "type" : "string",
          "title" : "Claim ID",
          "description" : "The `id` of the claim"
        },
        "claimInfoId" : {
          "type" : "string",
          "title" : "ClaimInfo ID",
          "description" : "The `id` of the claimInfo"
        },
        "claimNumber" : {
          "type" : "string",
          "title" : "Claim number",
          "description" : "The `claimNumber` of the claim"
        },
        "claimants" : {
          "type" : "array",
          "title" : "Claimants",
          "description" : "A list of names of claimants on the claim",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "flagged" : {
          "type" : "boolean",
          "title" : "Flagged",
          "description" : "Whether this claim has been flagged"
        },
        "futurePayments" : {
          "type" : "object",
          "title" : "Future payments",
          "description" : "Future payments",
          "$ref" : "#/definitions/MonetaryAmount"
        },
        "insuredName" : {
          "type" : "string",
          "title" : "Insured name",
          "description" : "The name of the insured"
        },
        "lossDate" : {
          "type" : "string",
          "title" : "Loss date",
          "description" : "The `lossDate` of the claim",
          "format" : "date-time"
        },
        "paid" : {
          "type" : "object",
          "title" : "Total paid amount",
          "description" : "Total paid amount",
          "$ref" : "#/definitions/MonetaryAmount"
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The `policyNumber` of the claim"
        },
        "remainingReserves" : {
          "type" : "object",
          "title" : "Remaining reserves",
          "description" : "Remaining reserves",
          "$ref" : "#/definitions/MonetaryAmount"
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The `state` of the claim, such as `open` or `closed`",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ClaimState"
          }
        }
      }
    },
    "ClaimSearchV2Attributes" : {
      "type" : "object",
      "title" : "Request attributes for active or archived claim search",
      "description" : "Criteria of active or archived claims to search for (Since 1.3.1)",
      "x-gw-sinceVersion" : "1.3.1",
      "properties" : {
        "archivedSearch" : {
          "type" : "boolean",
          "title" : "Search archived claim",
          "description" : "Search archived claim"
        },
        "claimNumber" : {
          "type" : "string",
          "title" : "Claim number",
          "description" : "The `clamNumber` of the claim",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The name of a company on the claim. By default the search will look for contacts who have the role of `claimant` on the claim. You can use the `nameSearchType` field to change the search to look for contacts with other roles, such as `insured`, or to search all contacts regardless of role.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The first name of a contact on the claim. By default the search will look for contacts who have the role of `claimant` on the claim. You can use the `nameSearchType` field to change the search to look for contacts with other roles, such as `insured`, or to search all contacts regardless of role.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The last name of a contact on the claim. By default the search will look for contacts who have the role of `claimant` on the claim. You can use the `nameSearchType` field to change the search to look for contacts with other roles, such as `insured`, or to search all contacts regardless of role.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "nameSearchType" : {
          "type" : "object",
          "title" : "Name search type",
          "description" : "When searching by `firstName` or `lastName`, specifies which claim contacts to check based on the contact role. For example, when searching by last name, if this field is set to `insured`, the search will return any claim where the specified last name matches the last name of the contact who is designated as the insured.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ClaimSearchNameSearchType"
          }
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The `policyNumber` of the claim's policy",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "taxId" : {
          "type" : "string",
          "title" : "Tax ID",
          "description" : "The claim contact's tax ID",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        }
      }
    },
    "ClaimSolrSearchRequestAttributes" : {
      "type" : "object",
      "title" : "Claim Solr search request attributes",
      "description" : "Criteria of the claim to search for via Solr (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "address" : {
          "type" : "object",
          "title" : "Address",
          "description" : "An address associated with the claim",
          "$ref" : "#/definitions/Address"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of a contact on the claim. By default the search will look for contacts who have any role on the claim. You can use the `nameSearchType` field to change the search to look for contacts with other roles, such as `insured`, or to search all contacts regardless of role.",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "nameSearchType" : {
          "type" : "object",
          "title" : "Name search type",
          "description" : "Specifies which claim contacts to check based on the contact role. For example, if this field is set to `insured`, the search will return any claim where the specified name matches the name of the contact who is designated as the insured.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "FreTxtClmSrchNameSrchTyp"
          }
        },
        "phoneNumber" : {
          "type" : "string",
          "title" : "Phone number",
          "description" : "Phone number on the contact being searched for",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        }
      }
    },
    "ClaimSolrSearchResult" : {
      "type" : "object",
      "title" : "Claim Solr search results",
      "description" : "Summary information about a claim returned from a claim Solr search request (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "address" : {
          "type" : "string",
          "title" : "Address",
          "description" : "The `address` of the contact matched to the search result",
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 500
        },
        "city" : {
          "type" : "string",
          "title" : "City",
          "description" : "The `city` of the contact matched to the search result",
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "claimId" : {
          "type" : "string",
          "title" : "Claim ID",
          "description" : "The `id` of the claim",
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "claimNumber" : {
          "type" : "string",
          "title" : "Claim number",
          "description" : "The `claimNumber` of the claim",
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "lossDate" : {
          "type" : "string",
          "title" : "Loss date",
          "description" : "The `lossDate` of the claim",
          "format" : "date-time",
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of the contact matched to the search result",
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "phoneNumber" : {
          "type" : "string",
          "title" : "Phone number",
          "description" : "The phone number associated with the contact matched to the search result",
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The `policyNumber` of the claim",
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "postalCode" : {
          "type" : "string",
          "title" : "Postal code",
          "description" : "The `postal code` on the address matched to the search result",
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "rank" : {
          "type" : "integer",
          "title" : "Rank",
          "description" : "The `rank` of the solr search result",
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "reportedDate" : {
          "type" : "string",
          "title" : "Reported date",
          "description" : "The `reportedDate` of the claim",
          "format" : "date-time",
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "roles" : {
          "type" : "string",
          "title" : "Roles",
          "description" : "The roles the contact holds on the search result",
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 200
        },
        "score" : {
          "type" : "string",
          "title" : "Score",
          "description" : "The relevance `score` of the solr search result",
          "format" : "gw-bigdecimal",
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The `state` on the address that was matched to the search result",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "State"
          }
        },
        "status" : {
          "type" : "string",
          "title" : "Status",
          "description" : "The `state` of the claim, such as `open` or `closed`",
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 20
        }
      }
    },
    "CodeReference" : {
      "type" : "object",
      "title" : "Code reference",
      "description" : "A reference object that combines a code with a human-readable name (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The referenced code",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The name of the reference"
        }
      }
    },
    "Contact" : {
      "type" : "object",
      "title" : "Contact",
      "description" : "A `Contact` represents a person or company",
      "properties" : {
        "addressBookUID" : {
          "type" : "string",
          "title" : "Address book UID",
          "description" : "The unique ID of this `Contact` within the contact management system. Only applicable if the `Contact` has been linked to a contact management system.",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        },
        "cellPhone" : {
          "type" : "object",
          "title" : "Cell phone",
          "description" : "The person's mobile phone number. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "companyName" : {
          "type" : "string",
          "title" : "Company name",
          "description" : "The name of the company represented by this `Contact`. Only applicable for a `Contact` that represents a company.",
          "x-gw-extensions" : {
            "entitySubtype" : "Company"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "dateOfBirth" : {
          "type" : "string",
          "title" : "Date of birth",
          "description" : "The person's date of birth. Only applicable for a `Contact` that represents a person.",
          "format" : "date",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now",
            "entitySubtype" : "Person"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "A formatted representation of the full name for this `Contact', including all applicable fields such as `firstName` or `lastName`",
          "readOnly" : true,
          "x-gw-nullable" : true
        },
        "doctorSpecialty" : {
          "type" : "object",
          "title" : "Doctor specialty",
          "description" : "The doctor's specialty",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "SpecialtyType"
          }
        },
        "emailAddress1" : {
          "type" : "string",
          "title" : "E-mail address 1",
          "description" : "The contact's primary e-mail address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "emailAddress2" : {
          "type" : "string",
          "title" : "E-mail address 2",
          "description" : "The contact's secondary e-mail address",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "firstName" : {
          "type" : "string",
          "title" : "First name",
          "description" : "The persons's first name. Only applicable for a `Contact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "homePhone" : {
          "type" : "object",
          "title" : "Home phone",
          "description" : "The person's home phone number. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/PhoneNumber",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Contact`",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "title" : "Last name",
          "description" : "The person's last name. Only applicable for a `Contact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "licenseNumber" : {
          "type" : "string",
          "title" : "Driver's license number",
          "description" : "The person's driver's license number. Only applicable for a `Contact` that represents a person.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 20
        },
        "licenseState" : {
          "type" : "object",
          "title" : "Driver's license state",
          "description" : "The person's driver's license state. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "Jurisdiction"
          }
        },
        "medicalLicense" : {
          "type" : "string",
          "title" : "Medical license",
          "description" : "The doctor's medical license number",
          "x-gw-nullable" : true
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element within the policy system",
          "readOnly" : true,
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "preferred" : {
          "type" : "boolean",
          "title" : "Preferred",
          "description" : "A `true` value for this field indicates that the vendor is one of the insurer's preferred vendors. Only applicable for a `Contact` that represents a vendor.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : [ "CompanyVendor", "PersonVendor" ]
          }
        },
        "primaryAddress" : {
          "type" : "object",
          "title" : "Primary address",
          "description" : "The contact's primary address",
          "$ref" : "#/definitions/Address",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "primaryLanguage" : {
          "type" : "object",
          "title" : "Primary language",
          "description" : "The contact's primary language",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "primaryLocale" : {
          "type" : "object",
          "title" : "Primary locale",
          "description" : "The contact's primary locale",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LocaleType"
          }
        },
        "primaryPhone" : {
          "type" : "string",
          "title" : "Primary phone",
          "description" : "The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field",
          "readOnly" : true
        },
        "primaryPhoneType" : {
          "type" : "object",
          "title" : "Primary phone type",
          "description" : "The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for a `Contact` that represents a person.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "Person",
            "typelist" : "PrimaryPhoneType"
          }
        },
        "roles" : {
          "type" : "array",
          "title" : "Roles",
          "description" : "The list of all roles that this contact has on the claim",
          "minItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ContactRole"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "subtype" : {
          "type" : "object",
          "title" : "Subtype",
          "description" : "The specific type of contact that this `Contact` represents, such as `Person` or `Company`. The set of fields that can be set on a `Contact` depend on its `subtype`.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "typelist" : "Contact"
          }
        },
        "taxId" : {
          "type" : "string",
          "title" : "Tax ID",
          "description" : "The contact's tax ID",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "workPhone" : {
          "type" : "object",
          "title" : "Work phone",
          "description" : "The contact's work phone number, if this `Contact` represents a person, or the business's phone number, if this `Contact` represents a company",
          "$ref" : "#/definitions/PhoneNumber",
          "x-gw-nullable" : true
        }
      }
    },
    "ContactRole" : {
      "type" : "object",
      "title" : "Contact role",
      "description" : "A role that a contact has on a particular claim or element of the claim",
      "required" : [ "relatedTo", "role" ],
      "properties" : {
        "active" : {
          "type" : "boolean",
          "title" : "Active",
          "description" : "A `true` value for this field indicates that the contact is still active for this role on the related element"
        },
        "comments" : {
          "type" : "string",
          "title" : "Comments",
          "description" : "Comments regarding this role",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "relatedTo" : {
          "type" : "object",
          "title" : "Related to",
          "description" : "A reference to the element that this role is related to",
          "$ref" : "#/definitions/GenericRelation"
        },
        "role" : {
          "type" : "object",
          "title" : "Role",
          "description" : "This role this contact plays on the related element",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ContactRole"
          }
        }
      }
    },
    "ContactRoleConstraint" : {
      "type" : "object",
      "title" : "Contact role constraint",
      "description" : "Defines constraints related to contact roles, such as whether the role is restricted to certain contact types and whether the role can be assigned to more than one contact",
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `ContactRole`",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The `name` of the `ContactRole`",
          "readOnly" : true
        },
        "schemaConstraints" : {
          "type" : "array",
          "title" : "Schema constraints",
          "description" : "A list of constraints specific to this role",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/RoleSchemaConstraint"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "subtype" : {
          "type" : "string",
          "title" : "Subtype",
          "description" : "The subtype that a contact must be in order to have this role, if the role is restricted to a particular subtype",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true
          }
        }
      }
    },
    "CovTerm" : {
      "type" : "object",
      "title" : "Coverage term",
      "description" : "A term on a coverage, condition, or exclusion",
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The classification code value for the term. Only applicable if `covTermSubtype` is `ClassificationCovTerm`.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "ClassificationCovTerm"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "covTermOrder" : {
          "type" : "integer",
          "title" : "Coverage term order",
          "description" : "The order of this coverage term relative to other terms on the same coverage. Used to present the terms in sorted order.",
          "x-gw-nullable" : true
        },
        "covTermPattern" : {
          "type" : "object",
          "title" : "Coverage term pattern",
          "description" : "The specific pattern for this term. The pattern defines the type of value that the term carries.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "CovTermPattern"
          }
        },
        "covTermSubtype" : {
          "type" : "string",
          "title" : "Coverage term subtype",
          "description" : "The specific subtype of coverage term. This field determines what other fields are available. (Since 1.2.0)",
          "x-gw-type" : "typekey.CovTerm",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of the classification code value for the term. Only applicable if `covTermSubtype` is `ClassificationCovTerm`.",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "ClassificationCovTerm"
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "financialAmount" : {
          "type" : "object",
          "title" : "Financial amount",
          "description" : "The value of the coverage term as a monetary amount. Only applicable if `covTermSubtype` is `FinancialCovTerm`.",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-extensions" : {
            "entitySubtype" : "FinancialCovTerm",
            "requiredForCreate" : true
          },
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "modelAggregation" : {
          "type" : "object",
          "title" : "Model aggregation",
          "description" : "Describes how aggregate limits are determined for this coverage term",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "CovTermModelAgg"
          }
        },
        "modelRestriction" : {
          "type" : "object",
          "title" : "Model restriction",
          "description" : "A sub-categorization of the term that further refines what the model type on the `covTermPattern` applies to in the context of this term",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "CovTermModelRest"
          }
        },
        "numericValue" : {
          "type" : "string",
          "title" : "Numeric value",
          "description" : "The value of the coverage term as a decimal. Only applicable if `covTermSubtype` is `NumericCovTerm`.",
          "format" : "gw-bigdecimal",
          "x-gw-extensions" : {
            "entitySubtype" : "NumericCovTerm",
            "requiredForCreate" : true
          }
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "Policy system ID",
          "description" : "The unique identifier of this element within the policy system (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "units" : {
          "type" : "object",
          "title" : "Units",
          "description" : "The type of units that apply to the `numericValue` of this coverage term. Only applicable if `covTermSubtype` is `NumericCovTerm`.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "NumericCovTerm",
            "typelist" : "CovTermModelVal"
          }
        },
        "value" : {
          "type" : "string",
          "title" : "Value",
          "description" : "The value of this term",
          "readOnly" : true
        }
      }
    },
    "Coverage" : {
      "type" : "object",
      "title" : "Coverage",
      "description" : "A coverage, condition, or exclusion on an insurance policy or risk unit",
      "properties" : {
        "claimAggLimit" : {
          "type" : "object",
          "title" : "PIP claim aggregate limit",
          "description" : "The per-claim limit of PIP coverage. Only applicable to PIP vehicle coverages.",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "VehicleCoverage"
          },
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        },
        "coinsurance" : {
          "type" : "string",
          "title" : "Coinsurance",
          "description" : "The coinsurance percentage. Only applicable to property coverages. (Since 1.2.0)",
          "format" : "gw-bigdecimal",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "PropertyCoverage"
          },
          "maximum" : 100,
          "minimum" : 0
        },
        "covTerms" : {
          "type" : "array",
          "title" : "Coverage terms",
          "description" : "The list of terms for this coverage",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/CovTerm"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "coverageBasis" : {
          "type" : "object",
          "title" : "Coverage basis",
          "description" : "The method used for determining the coverage value for damaged property. Only applicable to property coverages. (Since 1.2.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "PropertyCoverage",
            "typelist" : "CoverageBasis"
          }
        },
        "coverageType" : {
          "type" : "object",
          "title" : "Coverage type",
          "description" : "The specific type of coverage represented by this element. The `coverageType` corresponds to the particular coverage code within the policy system.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true,
            "typelist" : "CoverageType"
          }
        },
        "currency" : {
          "type" : "object",
          "title" : "Currency",
          "description" : "The currency of the coverage",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Currency"
          }
        },
        "effectiveDate" : {
          "type" : "string",
          "title" : "Effective date",
          "description" : "The date and time when this coverage became effective",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "expirationDate" : {
          "type" : "string",
          "title" : "Expiration date",
          "description" : "The date and time when this coverage ceased being effective",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "exposureLimit" : {
          "type" : "object",
          "title" : "Exposure limit",
          "description" : "The coverage limit per exposure",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-nullable" : true,
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "incidentLimit" : {
          "type" : "object",
          "title" : "Incident limit",
          "description" : "The coverage limit per incident",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-nullable" : true,
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        },
        "limitsIndicator" : {
          "type" : "object",
          "title" : "Limits indicator",
          "description" : "Indicates whether the coverage limits are part of a combined single limit",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LimitsIndicator"
          }
        },
        "nonmedAggLimit" : {
          "type" : "object",
          "title" : "PIP non-medical aggregate limit",
          "description" : "The aggregate limit for non-medical PIP coverage. Only applicable to PIP vehicle coverages.",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "VehicleCoverage"
          },
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        },
        "notes" : {
          "type" : "string",
          "title" : "Notes",
          "description" : "Additional comments about this coverage",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "personAggLimit" : {
          "type" : "object",
          "title" : "PIP per-person aggregate limit",
          "description" : "The aggregate limit per-person for PIP coverage. Only applicable to PIP vehicle coverages.",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "VehicleCoverage"
          },
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "Policy system ID",
          "description" : "The unique identifier of this element within the policy system (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "replaceAggLimit" : {
          "type" : "object",
          "title" : "PIP replacement aggregate limit",
          "description" : "The aggregate limit for PIP lost wage and replacement services coverage. Only applicable to PIP vehicle coverages.",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "VehicleCoverage"
          },
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The state that this coverage is applicable, if the coverage is state-specific",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "State"
          }
        }
      }
    },
    "CoverageIssue" : {
      "type" : "object",
      "title" : "Coverage issue",
      "description" : "A potential problem related to coverage (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "coverageSubtype" : {
          "type" : "object",
          "title" : "Coverage subtype",
          "description" : "The type of coverage this issue relates to",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "CoverageSubtype"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "reason" : {
          "type" : "string",
          "title" : "Reason",
          "description" : "The reason this issue was raised",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 65000
        },
        "severity" : {
          "type" : "object",
          "title" : "Severity",
          "description" : "The severity of the issue",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "CoverageIssueSeverity"
          }
        }
      }
    },
    "Deductible" : {
      "type" : "object",
      "title" : "Deductible",
      "description" : "Amount to deduct from payments (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "amount" : {
          "type" : "object",
          "title" : "Amount",
          "description" : "Deductible amount to be applied to a payment",
          "$ref" : "#/definitions/MonetaryAmount",
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        },
        "amountApplied" : {
          "type" : "object",
          "title" : "Amount applied",
          "description" : "The amount applied on this deductible",
          "$ref" : "#/definitions/MonetaryAmount"
        },
        "amountRemaining" : {
          "type" : "object",
          "title" : "Amount remaining",
          "description" : "The amount of this deductible that has not yet been applied",
          "$ref" : "#/definitions/MonetaryAmount"
        },
        "waived" : {
          "type" : "boolean",
          "title" : "Waived",
          "description" : "Specifies whether this deductible has been waived"
        }
      }
    },
    "Document" : {
      "type" : "object",
      "title" : "Document",
      "description" : "A `Document` represents a document within the application, which can have additional metadata such as the author of the document or a specific security level. The actual contents of the document are generally stored in a separate document management system that this application is linked to. (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "properties" : {
        "author" : {
          "type" : "string",
          "title" : "Author",
          "description" : "The name of the person who created this document",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "dateModified" : {
          "type" : "string",
          "title" : "Date modified",
          "description" : "The date and time that this `Document` was most recently updated",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of this document",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "docUID" : {
          "type" : "string",
          "title" : "Document UID",
          "description" : "The unique identifier for this `Document` in the linked document management system. The exact format of the identifier depends upon the specifics of the document management system the application is linked to.",
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this `Document`",
          "readOnly" : true
        },
        "inbound" : {
          "type" : "boolean",
          "title" : "Inbound",
          "description" : "This field indicates whether this document is considered to be inbound, outbound, or neither",
          "x-gw-nullable" : true
        },
        "language" : {
          "type" : "object",
          "title" : "Language",
          "description" : "The language in which this document was produced",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LanguageType"
          }
        },
        "mimeType" : {
          "type" : "string",
          "title" : "MIME type",
          "description" : "The MIME type of this document, such as `application/msword` for a Microsoft Word document",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 80
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this document",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 80
        },
        "obsolete" : {
          "type" : "boolean",
          "title" : "Obsolete",
          "description" : "Setting this field to `true` indicates that the information in this document can no longer be relied upon to be current and relevant. This is often used instead of deletion to preserve history.",
          "x-gw-nullable" : true
        },
        "recipient" : {
          "type" : "string",
          "title" : "Recipient",
          "description" : "The name of the intended recipient of this document",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 60
        },
        "relatedTo" : {
          "type" : "object",
          "title" : "Related to",
          "description" : "A reference to the element that this document is related to",
          "$ref" : "#/definitions/GenericRelation"
        },
        "section" : {
          "type" : "object",
          "title" : "Section",
          "description" : "The section to which this document belongs",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "DocumentSection"
          }
        },
        "securityType" : {
          "type" : "object",
          "title" : "Security type",
          "description" : "The security level that has been assigned to this document",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DocumentSecurityType"
          }
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The current status of this document, such as `draft` or `approved`",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "requiredForCreate" : true,
            "typelist" : "DocumentStatusType"
          }
        },
        "type" : {
          "type" : "object",
          "title" : "Type",
          "description" : "The specific type of document",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "requiredForCreate" : true,
            "typelist" : "DocumentType"
          }
        }
      }
    },
    "DocumentContent" : {
      "type" : "object",
      "title" : "Document content",
      "description" : "The contents of a `Document` (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "properties" : {
        "contents" : {
          "type" : "string",
          "title" : "Contents",
          "description" : "The contents of this document as a Base64-encoded string",
          "format" : "byte",
          "readOnly" : true
        },
        "responseMimeType" : {
          "type" : "string",
          "title" : "Response MIME type",
          "description" : "The MIME type of this document's contents, such as `application/msword` for a Microsoft Word document",
          "readOnly" : true
        },
        "url" : {
          "type" : "string",
          "title" : "URL",
          "description" : "The URL of this document within the linked document management system",
          "readOnly" : true
        }
      }
    },
    "DwellingIncident" : {
      "type" : "object",
      "title" : "Dwelling incident",
      "description" : "A loss involving fixed property used for dwelling, such as a home or condominium",
      "properties" : {
        "automationPath" : {
          "type" : "object",
          "title" : "Automation path",
          "description" : "The path taken by the automated system that created this incident. Only intended for use by automated systems. (Since 1.3.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AutomationPath"
          }
        },
        "damagedAreaSize" : {
          "type" : "integer",
          "title" : "Damaged area size",
          "description" : "The size of the damaged area in square feet, square meters, or other units of measurement",
          "minimum" : 0,
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A general description of the incident",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "dwellingRoomDamages" : {
          "type" : "array",
          "title" : "Dwelling room damages",
          "description" : "A list of types of rooms that were damaged by this incident",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/DwellingRoomDamage"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "fireProtectionAvailable" : {
          "type" : "boolean",
          "title" : "Fire protection available",
          "description" : "A `true` value indicates that fire protection is available",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "location" : {
          "type" : "object",
          "title" : "Location",
          "description" : "The location of the property",
          "$ref" : "#/definitions/PolicyLocation",
          "x-gw-nullable" : true
        },
        "lossParty" : {
          "type" : "object",
          "title" : "Loss party",
          "description" : "The type of loss party, generally either the insured or a third party",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LossPartyType"
          }
        },
        "materialsDamaged" : {
          "type" : "string",
          "title" : "Materials damaged",
          "description" : "A description of materials that were damaged, such as floors or walls",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 250
        },
        "numberOfPeopleOnPolicy" : {
          "type" : "integer",
          "title" : "Number of people on policy",
          "description" : "The number of people on the policy",
          "minimum" : 0,
          "x-gw-nullable" : true
        },
        "occupancyType" : {
          "type" : "object",
          "title" : "Occupancy type",
          "description" : "Indicates the occupancy status of the property that was affected",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "OccupancyType"
          }
        },
        "propertySize" : {
          "type" : "integer",
          "title" : "Property size",
          "description" : "The size of the property in square feet, square meters, or other units of measurement",
          "minimum" : 0,
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true
        },
        "severity" : {
          "type" : "object",
          "title" : "Severity",
          "description" : "The severity of the loss",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "SeverityType"
          }
        },
        "yearBuilt" : {
          "type" : "string",
          "title" : "Year built",
          "description" : "The year in which the property was built",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "before" : "now"
          }
        },
        "yearsInHome" : {
          "type" : "integer",
          "title" : "Years in home",
          "description" : "The number of years the insured has lived in the home",
          "minimum" : 0,
          "x-gw-nullable" : true
        }
      }
    },
    "DwellingRoomDamage" : {
      "type" : "object",
      "title" : "Dwelling room damage",
      "description" : "Details of damage to a specific room or type of room",
      "properties" : {
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "numberOfRooms" : {
          "type" : "integer",
          "title" : "Number of rooms",
          "description" : "The number of rooms of this type that were affected by the loss",
          "minimum" : 0,
          "x-gw-nullable" : true,
          "exclusiveMinimum" : true
        },
        "roomType" : {
          "type" : "object",
          "title" : "Room type",
          "description" : "The type of room that was damaged",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "RoomType"
          }
        }
      }
    },
    "Endorsement" : {
      "type" : "object",
      "title" : "Endorsement",
      "description" : "Represents an endorsement form applied to a policy that makes some modification to it",
      "properties" : {
        "comments" : {
          "type" : "string",
          "title" : "Comments",
          "description" : "Additional notes about the endorsement",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of the endorsement and what it alters",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "effectiveDate" : {
          "type" : "string",
          "title" : "Effective date",
          "description" : "The date and time when the endorsement becomes effective",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "expirationDate" : {
          "type" : "string",
          "title" : "Expiration date",
          "description" : "The date and time when the endorsement ceases to be effective",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "formNumber" : {
          "type" : "string",
          "title" : "Form number",
          "description" : "The code for the endorsement form",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 64
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        }
      }
    },
    "Exposure" : {
      "type" : "object",
      "title" : "Exposure",
      "description" : "An object on a claim that manages potential payments from a specific coverage to a specific claimant",
      "properties" : {
        "allValidationLevelsReached" : {
          "type" : "array",
          "title" : "All validation levels reached",
          "description" : "The list of all the validation levels that this exposure has passed (Since 1.3.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TypeKeyReference",
            "x-gw-extensions" : {
              "defaultViews" : [ "detail" ],
              "typelist" : "ValidationLevel"
            }
          },
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          }
        },
        "assignedByUser" : {
          "type" : "object",
          "title" : "Assigned by user",
          "description" : "A reference to the `User` who last assigned this exposure",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "assignedGroup" : {
          "type" : "object",
          "title" : "Assigned group",
          "description" : "A reference to the `Group` that this exposure is assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Group"
          }
        },
        "assignedQueue" : {
          "type" : "object",
          "title" : "Assigned queue",
          "description" : "A reference to the `AssignableQueue` that this exposure is assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "AssignableQueue"
          }
        },
        "assignedUser" : {
          "type" : "object",
          "title" : "Assigned user",
          "description" : "A reference to the `User` that this exposure is assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "assignmentStatus" : {
          "type" : "object",
          "title" : "Assignment status",
          "description" : "The assignment status of this exposure, such as `assigned` or `unassigned`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "AssignmentStatus"
          }
        },
        "autopilotStatus" : {
          "type" : "object",
          "title" : "Autopilot status",
          "description" : "The status of this exposure in the Claims Autopilot automated system. Only intended for use by the Claims Autopilot system. (Since 1.2.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ],
            "typelist" : "ExposureAutopilotStatus"
          }
        },
        "claimOrder" : {
          "type" : "integer",
          "title" : "Claim order",
          "description" : "The assigned number of this exposure",
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "claimant" : {
          "type" : "object",
          "title" : "Claimant",
          "description" : "A reference to the `ClaimContact` that represents the claimant for this exposure",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "claimantType" : {
          "type" : "object",
          "title" : "Claimant type",
          "description" : "The relationship of this exposure's claimant to the policy holder",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "ClaimantType"
          }
        },
        "closeDate" : {
          "type" : "string",
          "title" : "Close date",
          "description" : "The date and time when this exposure was closed",
          "format" : "date-time",
          "readOnly" : true
        },
        "closedOutcome" : {
          "type" : "object",
          "title" : "Closed outcome",
          "description" : "The outcome reached when closing this exposure",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ExposureClosedOutcomeType"
          }
        },
        "contactPermitted" : {
          "type" : "boolean",
          "title" : "Contact permitted",
          "description" : "Indicates whether contact is permitted with the claimant for this exposure",
          "x-gw-nullable" : true
        },
        "coverage" : {
          "type" : "object",
          "title" : "Coverage",
          "description" : "A reference to the `Coverage` that applies to this exposure",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "PolicyCoverage"
          }
        },
        "coverageSubtype" : {
          "type" : "object",
          "title" : "Coverage subtype",
          "description" : "The subtype of coverage that applies to this exposure",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "sortable" : true,
            "typelist" : "CoverageSubtype"
          }
        },
        "createdVia" : {
          "type" : "object",
          "title" : "Created via",
          "description" : "Indicates how this exposure was created, such as user entry or automated rules",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "CreatedVia"
          }
        },
        "deductible" : {
          "type" : "object",
          "title" : "Deductible",
          "description" : "Deductible on the coverage associated with this exposure (Since 1.3.0)",
          "$ref" : "#/definitions/Deductible",
          "x-gw-sinceVersion" : "1.3.0",
          "readOnly" : true
        },
        "dwellingIncident" : {
          "type" : "object",
          "title" : "Dwelling incident",
          "description" : "A reference to the `DwellingIncident` associated with this exposure",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "DwellingIncident"
          }
        },
        "fixedPropertyIncident" : {
          "type" : "object",
          "title" : "Fixed property incident",
          "description" : "A reference to the `FixedPropertyIncident` associated with this exposure",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "FixedPropertyIncident"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "injuryIncident" : {
          "type" : "object",
          "title" : "Injury incident",
          "description" : "A reference to the `InjuryIncident` associated with this exposure",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "InjuryIncident"
          }
        },
        "jurisdiction" : {
          "type" : "object",
          "title" : "Jurisdiction",
          "description" : "The legal jurisdiction that applies to this exposure, if that jurisdiction differs from the jurisdiction where the loss occurred",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "livingExpensesIncident" : {
          "type" : "object",
          "title" : "Living expenses incident",
          "description" : "A reference to the `LivingExpensesIncident` associated with this exposure",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "LivingExpensesIncident"
          }
        },
        "lossCategory" : {
          "type" : "object",
          "title" : "Loss category",
          "description" : "The detailed category that describes the loss",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LossCategory"
          }
        },
        "lossParty" : {
          "type" : "object",
          "title" : "Loss party",
          "description" : "The type of loss party, generally either the insured or a third party",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "LossPartyType",
            "filterBy" : [ "coverageSubtype" ]
          }
        },
        "otherCoverage" : {
          "type" : "boolean",
          "title" : "Other coverage",
          "description" : "A `true` value indicates that the claimant has additional coverage",
          "x-gw-nullable" : true
        },
        "otherStructureIncident" : {
          "type" : "object",
          "title" : "Other structure incident",
          "description" : "A reference to the `OtherStructureIncident` associated with this exposure (Since 1.4.0)",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-sinceVersion" : "1.4.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "OtherStructureIncident"
          }
        },
        "primaryCoverage" : {
          "type" : "object",
          "title" : "Primary coverage",
          "description" : "The type of coverage that applies to this exposure",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "sortable" : true,
            "typelist" : "CoverageType"
          }
        },
        "progress" : {
          "type" : "object",
          "title" : "Progress",
          "description" : "Indicates the current progress for an open exposure",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "ExposureProgressType"
          }
        },
        "propertyContentsIncident" : {
          "type" : "object",
          "title" : "Property contents incident",
          "description" : "A reference to the `PropertyContentsIncident` associated with this exposure (Since 1.4.0)",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-sinceVersion" : "1.4.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "PropertyContentsIncident"
          }
        },
        "reopenDate" : {
          "type" : "string",
          "title" : "Reopen date",
          "description" : "The date and time when this exposure was reopened",
          "format" : "date-time",
          "readOnly" : true
        },
        "reopenedReason" : {
          "type" : "object",
          "title" : "Reopen reason",
          "description" : "The reason why this exposure was reopened",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ExposureReopenedReason"
          }
        },
        "securityLevel" : {
          "type" : "object",
          "title" : "Security level",
          "description" : "The security level of this exposure",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "typelist" : "ExposureSecurityType"
          }
        },
        "segment" : {
          "type" : "object",
          "title" : "Segment",
          "description" : "The segment assigned to this exposure",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ClaimSegment"
          }
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The current status of the exposure, such as `open` or `closed`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ExposureState"
          }
        },
        "strategy" : {
          "type" : "object",
          "title" : "Strategy",
          "description" : "The strategy assigned to this exposure",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ClaimStrategy"
          }
        },
        "tier" : {
          "type" : "object",
          "title" : "Tier",
          "description" : "The tier of this exposure, used to decide how to rate the exposure metrics",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "ExposureTier"
          }
        },
        "type" : {
          "type" : "object",
          "title" : "Type",
          "description" : "The general type of the exposure",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "ExposureType"
          }
        },
        "validationLevel" : {
          "type" : "object",
          "title" : "Validation level",
          "description" : "The validation level of this exposure. If the exposure `state` is `open`, edits to this exposure must pass validation rules at this validation level and all lower validation levels.",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ValidationLevel"
          }
        },
        "vehicleIncident" : {
          "type" : "object",
          "title" : "Vehicle incident",
          "description" : "A reference to the `VehicleIncident` associated with this exposure",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "VehicleIncident"
          }
        }
      }
    },
    "ExposureAssignee" : {
      "type" : "object",
      "title" : "Exposure assignee",
      "description" : "The target of an assignment action, such as a user/group combination or automatic rule-based assignment (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "autoAssign" : {
          "type" : "boolean",
          "title" : "Auto assign",
          "description" : "Set to `true` to indicate the assignment should be done by assignment rules. Cannot be combined with any other assignment criteria fields."
        },
        "claimOwner" : {
          "type" : "boolean",
          "title" : "Claim owner",
          "description" : "Set to `true` to indicate that the exposure should be assigned to the same user and group that own the exposure's claim"
        },
        "groupId" : {
          "type" : "string",
          "title" : "Group ID",
          "description" : "The ID of the `Group` that the exposure should be assigned to. If specified without the `userId` field, the `User` within the `Group` is selected by assignment rules. If specified along with the `userId` field, that specific `User` is assigned the element."
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "A human-readable name for the type of assignment that this `ExposureAssignee` represents",
          "readOnly" : true
        },
        "userId" : {
          "type" : "string",
          "title" : "User ID",
          "description" : "The ID of the `User` that the exposure should be assigned to. The `groupId` field must also be specified if the `userId` field is specified, and the `User` must be a member of that `Group` and have permission to be assigned the element."
        }
      }
    },
    "FixedPropertyIncident" : {
      "type" : "object",
      "title" : "Fixed property incident",
      "description" : "A report of an incident involving property at a fixed location such as a building",
      "properties" : {
        "automationPath" : {
          "type" : "object",
          "title" : "Automation path",
          "description" : "The path taken by the automated system that created this incident. Only intended for use by automated systems. (Since 1.3.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AutomationPath"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A general description of the incident",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "location" : {
          "type" : "object",
          "title" : "Location",
          "description" : "The location of the property",
          "$ref" : "#/definitions/PolicyLocation",
          "x-gw-nullable" : true
        },
        "lossParty" : {
          "type" : "object",
          "title" : "Loss party",
          "description" : "The type of loss party, generally either the insured or a third party",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LossPartyType"
          }
        },
        "occupancyType" : {
          "type" : "object",
          "title" : "Occupancy type",
          "description" : "The occupancy status of the property",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "OccupancyType"
          }
        },
        "severity" : {
          "type" : "object",
          "title" : "Severity",
          "description" : "The severity of the loss",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "SeverityType"
          }
        }
      }
    },
    "GenericRelation" : {
      "type" : "object",
      "title" : "Generic relation",
      "description" : "A reference to a related element",
      "required" : [ "id", "type" ],
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the referenced element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "GroupDetail" : {
      "type" : "object",
      "title" : "Group detail",
      "description" : "Used to represent a reference to a `Group`",
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The name of the `Group`"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Group`"
        }
      }
    },
    "InjuryBodyPart" : {
      "type" : "object",
      "title" : "Injured body party",
      "description" : "Details of an injury to a specific body part",
      "properties" : {
        "detailedBodyPart" : {
          "type" : "object",
          "title" : "Detailed body part",
          "description" : "The specific body part that was injured",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "DetailedBodyPartType",
            "filterBy" : [ "primaryBodyPart" ]
          }
        },
        "detailedBodyPartDesc" : {
          "type" : "object",
          "title" : "Detailed body part description",
          "description" : "A more specific code for the injury, used if the value of the `detailedBodyPart` field can be further refined",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DetailedBodyPartDesc",
            "filterBy" : [ "detailedBodyPart" ]
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "impairmentPercentage" : {
          "type" : "integer",
          "title" : "Impairment percentage",
          "description" : "Percentage of permanent impairment in functionality",
          "minimum" : 0,
          "maximum" : 100,
          "x-gw-nullable" : true
        },
        "ordering" : {
          "type" : "integer",
          "title" : "Ordering",
          "description" : "The order of this element relative to other body parts on the same injury incident"
        },
        "primaryBodyPart" : {
          "type" : "object",
          "title" : "Primary body part",
          "description" : "The area of the body where the injury is located",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "BodyPartType"
          }
        },
        "sideOfBody" : {
          "type" : "object",
          "title" : "Side of body",
          "description" : "The side of the body on which the injury is located",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "SideOfBody"
          }
        }
      }
    },
    "InjuryIncident" : {
      "type" : "object",
      "title" : "Injury incident",
      "description" : "Information about a bodily injury",
      "properties" : {
        "ambulanceUsed" : {
          "type" : "boolean",
          "title" : "Ambulance used",
          "description" : "A `true` value indicates that an ambulance was used",
          "x-gw-nullable" : true
        },
        "automationPath" : {
          "type" : "object",
          "title" : "Automation path",
          "description" : "The path taken by the automated system that created this incident. Only intended for use by automated systems. (Since 1.3.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AutomationPath"
          }
        },
        "bodyParts" : {
          "type" : "array",
          "title" : "Body parts",
          "description" : "A list of `InjuryBodyPart` elements that describe the specific injuries that were sustained",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/InjuryBodyPart"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "dateOfDeath" : {
          "type" : "string",
          "title" : "Date of death",
          "description" : "The date of death, if the severity of this incident is `fatal` (Since 1.4.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.4.0",
          "x-gw-nullable" : true
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A general description of the incident",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "detailedInjuryType" : {
          "type" : "object",
          "title" : "Detailed injury type",
          "description" : "A more specific categorization of the injury",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DetailedInjuryType",
            "filterBy" : [ "generalInjuryType" ]
          }
        },
        "disabledDueToAccident" : {
          "type" : "object",
          "title" : "Disabled due to accident",
          "description" : "The level of disability caused by the injury",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "DisabledDueToAccident"
          }
        },
        "generalInjuryType" : {
          "type" : "object",
          "title" : "General injury type",
          "description" : "The general category of injury",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "InjuryType"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "injuredPerson" : {
          "type" : "object",
          "title" : "Injured person",
          "description" : "A reference to the `ClaimContact` that represents the injured person",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "lossParty" : {
          "type" : "object",
          "title" : "Loss party",
          "description" : "The type of loss party, generally either the insured or a third party",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LossPartyType"
          }
        },
        "lostWages" : {
          "type" : "boolean",
          "title" : "Lost wages",
          "description" : "A `true` value indicates that the injured person lost wages as a result of the injury",
          "x-gw-nullable" : true
        },
        "primaryDoctor" : {
          "type" : "object",
          "title" : "Primary doctor",
          "description" : "A reference to the `ClaimContact` that represents the primary doctor that treated the injury",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "severity" : {
          "type" : "object",
          "title" : "Severity",
          "description" : "The severity of the loss",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "SeverityType"
          }
        },
        "treatmentType" : {
          "type" : "object",
          "title" : "Treatment type",
          "description" : "The type of treatment received for the injury",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "MedicalTreatmentType"
          }
        }
      }
    },
    "IntakeInteraction" : {
      "type" : "object",
      "title" : "Intake interaction",
      "description" : "A request to gather data from a claim contact, such as the insured or a claimant, using an intake flow (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "claimContact" : {
          "type" : "object",
          "title" : "Claim contact",
          "description" : "The contact who will provide data via an intake flow, such as the insured or a claimant",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-extensions" : {
            "requiredForCreate" : true,
            "resourceType" : "ClaimContact"
          }
        },
        "claimSnapshotURL" : {
          "type" : "string",
          "title" : "Claim snapshot URL",
          "description" : "Snapshot URL of the claim from AppEvents service, which led to this interaction. Provides claim data for subsequent processing.",
          "x-gw-extensions" : {
            "requiredForCreate" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `IntakeInteraction` was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of this IntakeInteraction, for display to the claim contact who will fulfill it",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "intakeId" : {
          "type" : "string",
          "title" : "Intake flow ID",
          "description" : "Identifier of the intake flow to be presented to the claim contact to gather data",
          "x-gw-extensions" : {
            "requiredForCreate" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "intakeInputs" : {
          "type" : "object",
          "title" : "Intake inputs",
          "description" : "A JSON object that contains data for use by the intake flow that is not available on the claim"
        },
        "intakeResults" : {
          "type" : "object",
          "title" : "Intake results",
          "description" : "A JSON object that contains the payload of intake answers",
          "x-gw-nullable" : true
        },
        "relatedEntity" : {
          "type" : "object",
          "title" : "Related entity",
          "description" : "Entity on the claim that is the root of the intake flow, and to which answer data from the flow will be saved",
          "$ref" : "#/definitions/GenericRelation",
          "x-gw-nullable" : true
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "Status of this intake interaction",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "requiredForCreate" : true,
            "typelist" : "IntakeInteractionStatus"
          }
        }
      }
    },
    "LinkObject" : {
      "type" : "object",
      "title" : "Linked object",
      "description" : "A standard HTTP link",
      "properties" : {
        "href" : {
          "type" : "string",
          "title" : "HREF",
          "description" : "The URL of the link"
        },
        "methods" : {
          "type" : "array",
          "title" : "Methods",
          "description" : "An array of HTTP method names that can be used with the link URL",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "Links" : {
      "type" : "object",
      "title" : "Links",
      "description" : "A set of named links",
      "additionalProperties" : {
        "type" : "object",
        "title" : "Links",
        "description" : "A set of named links. Each key represents the name of the link, such as a child of the current element, an action that can be taken on it, or a navigation option.",
        "$ref" : "#/definitions/LinkObject"
      }
    },
    "LivingExpensesIncident" : {
      "type" : "object",
      "title" : "Living expenses incident",
      "description" : "A report of expenses incurred due to the loss of use of a property",
      "properties" : {
        "automationPath" : {
          "type" : "object",
          "title" : "Automation path",
          "description" : "The path taken by the automated system that created this incident. Only intended for use by automated systems. (Since 1.3.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AutomationPath"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A general description of this incident",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "lossParty" : {
          "type" : "object",
          "title" : "Loss party",
          "description" : "The type of loss party, generally either the insured or a third party",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "LossPartyType"
          }
        },
        "startDate" : {
          "type" : "string",
          "title" : "Start date",
          "description" : "The date when the affected party began their stay with a lodging provider",
          "format" : "date-time",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        }
      }
    },
    "LocationBasedRiskUnit" : {
      "type" : "object",
      "title" : "Location risk unit",
      "description" : "A risk unit that includes a location",
      "properties" : {
        "RUNumber" : {
          "type" : "integer",
          "title" : "Risk unit number",
          "description" : "The assigned to this risk unit",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "building" : {
          "type" : "object",
          "title" : "Building",
          "description" : "Details of the building at this location",
          "$ref" : "#/definitions/Building",
          "x-gw-nullable" : true
        },
        "coverages" : {
          "type" : "array",
          "title" : "Coverages",
          "description" : "The list of coverages that apply to this risk unit",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Coverage"
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of the risk unit",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "locationId" : {
          "type" : "string",
          "title" : "Location ID",
          "description" : "The unique identifier of the location",
          "readOnly" : true
        },
        "otherRiskType" : {
          "type" : "object",
          "title" : "Other risk type",
          "description" : "The risk type for a location-based miscellaneous risk. Only applicable if `subtype` is `LocationMiscRU`.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "LocationMiscRU",
            "typelist" : "OtherRiskType"
          }
        },
        "policyLocation" : {
          "type" : "object",
          "title" : "Policy location",
          "description" : "Details of the location",
          "$ref" : "#/definitions/PolicyLocation",
          "x-gw-extensions" : {
            "requiredForCreate" : true
          }
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "Policy system ID",
          "description" : "The unique identifier of this element in the policy administration system",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "subtype" : {
          "type" : "object",
          "title" : "Subtype",
          "description" : "The specific subtype of risk unit",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "filterable" : true,
            "requiredForCreate" : true,
            "sortable" : true,
            "typelist" : "RiskUnit"
          }
        }
      }
    },
    "MetaObject" : {
      "type" : "object",
      "title" : "Meta object",
      "description" : "An element",
      "properties" : {
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "The checksum of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "The set of links related to the element",
          "$ref" : "#/definitions/Links"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "related" : {
          "type" : "object",
          "title" : "Related collections",
          "description" : "The set of related collections included with the element",
          "$ref" : "#/definitions/RelatedCollections"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of element"
        }
      }
    },
    "MonetaryAmount" : {
      "type" : "object",
      "title" : "Monetary amount",
      "description" : "A monetary amount that combines a decimal amount with a currency",
      "required" : [ "amount", "currency" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "title" : "Amount",
          "description" : "The decimal amount",
          "format" : "gw-bigdecimal"
        },
        "currency" : {
          "type" : "string",
          "title" : "Currency",
          "description" : "The currency for the amount",
          "x-gw-type" : "typekey.Currency"
        }
      }
    },
    "Note" : {
      "type" : "object",
      "title" : "Note",
      "description" : "A `Note` is used to capture any sort of additional text that needs to be associated with another business object. A `Note` consists of a `body` that contains the actual text of the note, along with other fields the represent additional metadata about the note.",
      "properties" : {
        "author" : {
          "type" : "object",
          "title" : "Author",
          "description" : "The `User` who authored this note",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "body" : {
          "type" : "string",
          "title" : "Body",
          "description" : "The text of this note",
          "minLength" : 1,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ],
            "filterable" : true,
            "requiredForCreate" : true
          },
          "pattern" : "\\S",
          "maxLength" : 65000
        },
        "bodySummary" : {
          "type" : "string",
          "title" : "Body summary",
          "description" : "A shorter summary of this note's `body` field, more suitable for displaying in a list of notes",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "summary" ]
          }
        },
        "confidential" : {
          "type" : "boolean",
          "title" : "Confidential",
          "description" : "A `true` value for this field indicates that the note contains confidential information"
        },
        "createdDate" : {
          "type" : "string",
          "title" : "Created date",
          "description" : "The date and time that this `Note` was created",
          "format" : "date-time",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "Unique identifier of this `Note`",
          "readOnly" : true
        },
        "relatedTo" : {
          "type" : "object",
          "title" : "Related to",
          "description" : "A reference to the element that this note is related to",
          "$ref" : "#/definitions/GenericRelation"
        },
        "securityType" : {
          "type" : "object",
          "title" : "Security type",
          "description" : "The security level that has been assigned to this note",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "NoteSecurityType"
          }
        },
        "subject" : {
          "type" : "string",
          "title" : "Subject",
          "description" : "The subject of this note",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "topic" : {
          "type" : "object",
          "title" : "Topic",
          "description" : "The topic of this note",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "NoteTopicType"
          }
        },
        "updateTime" : {
          "type" : "string",
          "title" : "Update time",
          "description" : "The date and time when this `Note` was most recently updated",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        }
      }
    },
    "OtherStructureIncident" : {
      "type" : "object",
      "title" : "Other structure incident",
      "description" : "A loss involving structures other than the main dwelling, such as a secondary building like a shed or artist’s studio (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "General description of the incident",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "fencesDamaged" : {
          "type" : "boolean",
          "title" : "Fences damaged",
          "description" : "A `true` value indicates that the fence was damaged",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "lossParty" : {
          "type" : "object",
          "title" : "Loss party",
          "description" : "The type of loss party, generally either the insured or a third-party",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "LossPartyType"
          }
        },
        "severity" : {
          "type" : "object",
          "title" : "Severity",
          "description" : "The severity of the loss",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "SeverityType"
          }
        }
      }
    },
    "Payee" : {
      "type" : "object",
      "title" : "Payee",
      "description" : "The contact that is a payee for a check (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "contact" : {
          "type" : "object",
          "title" : "Contact",
          "description" : "A reference to the `ClaimContact` that represents the payee",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "payeeType" : {
          "type" : "object",
          "title" : "Payee type",
          "description" : "The type of payee",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ContactRole"
          }
        }
      }
    },
    "PhoneNumber" : {
      "type" : "object",
      "title" : "Phone number",
      "description" : "A phone number, with different components of the number broken out as separate fields",
      "required" : [ "countryCode", "number" ],
      "properties" : {
        "countryCode" : {
          "type" : "object",
          "title" : "Country code",
          "description" : "The country code for the phone number",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "PhoneCountryCode"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The phone number formatted in a standardized way",
          "readOnly" : true
        },
        "extension" : {
          "type" : "string",
          "title" : "Extension",
          "description" : "The extension for the phone number",
          "x-gw-nullable" : true
        },
        "number" : {
          "type" : "string",
          "title" : "Number",
          "description" : "The actual phone number, including area code, but excluding the country code and extension"
        }
      }
    },
    "Policy" : {
      "type" : "object",
      "title" : "Policy",
      "description" : "A copy of the policy that a claim has been filed against. Each `Claim` has its own copy of the associated policy.",
      "properties" : {
        "accountNumber" : {
          "type" : "string",
          "title" : "Account number",
          "description" : "The account number for the account that this policy belongs to",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "agent" : {
          "type" : "object",
          "title" : "Agent",
          "description" : "A reference to the `ClaimContact` that represents the agent for this policy (Since 1.2.0)",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "assignedRisk" : {
          "type" : "boolean",
          "title" : "Assigned risk",
          "description" : "A `true` value indicates that this policy is written as part of a program mandated by the government for covering the worst risks",
          "x-gw-nullable" : true
        },
        "cancellationDate" : {
          "type" : "string",
          "title" : "Cancellation date",
          "description" : "The date and time when this policy was cancelled",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "coveredParties" : {
          "type" : "array",
          "title" : "Covered parties",
          "description" : "A list of references to `ClaimContact` elements that represent covered parties on this policy (Since 1.2.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UpdatablePolicyObjectReference",
            "x-gw-extensions" : {
              "resourceType" : "ClaimContact"
            }
          },
          "x-gw-sinceVersion" : "1.2.0",
          "xml" : {
            "wrapped" : true
          }
        },
        "currency" : {
          "type" : "object",
          "title" : "Currency",
          "description" : "The currency for this policy. Updating this value will also update the claim's currency.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Currency"
          }
        },
        "effectiveDate" : {
          "type" : "string",
          "title" : "Effective date",
          "description" : "The date and time when this policy became effective",
          "format" : "date-time",
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "excludedParties" : {
          "type" : "array",
          "title" : "Excluded parties",
          "description" : "A list of references to `ClaimContact` elements that represent excluded parties on this policy (Since 1.2.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UpdatablePolicyObjectReference",
            "x-gw-extensions" : {
              "resourceType" : "ClaimContact"
            }
          },
          "x-gw-sinceVersion" : "1.2.0",
          "xml" : {
            "wrapped" : true
          }
        },
        "expirationDate" : {
          "type" : "string",
          "title" : "Expiration date",
          "description" : "The date and time when this policy ceased to be in effect",
          "format" : "date-time"
        },
        "financialInterests" : {
          "type" : "string",
          "title" : "Financial interests",
          "description" : "Other financial interests of note",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "foreignCoverage" : {
          "type" : "boolean",
          "title" : "Foreign coverage",
          "description" : "A `true` value indicates that the insured has foreign coverage",
          "x-gw-nullable" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "insured" : {
          "type" : "object",
          "title" : "Insured",
          "description" : "A reference to the `ClaimContact` that represents the primary insured party for this policy (Since 1.2.0)",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "notes" : {
          "type" : "string",
          "title" : "Notes",
          "description" : "Other comments about the policy",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "originalEffectiveDate" : {
          "type" : "string",
          "title" : "Original effective date",
          "description" : "The date and time when the policy holder first had coverage",
          "format" : "date-time",
          "x-gw-nullable" : true
        },
        "policyLocations" : {
          "type" : "array",
          "title" : "Policy locations",
          "description" : "A list of references to `PolicyLocation` elements that represent locations that appear on this policy",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/PolicyObjectReference",
            "x-gw-extensions" : {
              "resourceType" : "PolicyLocation"
            }
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "policyNumber" : {
          "type" : "string",
          "title" : "Policy number",
          "description" : "The policy number assigned to this policy",
          "x-gw-extensions" : {
            "requiredForCreate" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "policyType" : {
          "type" : "object",
          "title" : "Policy type",
          "description" : "The type of policy. This generally corresponds to the insurance product for that policy.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "typelist" : "PolicyType"
          }
        },
        "producerCode" : {
          "type" : "string",
          "title" : "Producer code",
          "description" : "The producer code for the agency responsible for this policy",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "serviceTier" : {
          "type" : "object",
          "title" : "Service tier",
          "description" : "The customer service tier for this policy",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "CustomerServiceTier"
          }
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The status of the policy, such as `inforce` or `canceled`",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "PolicyStatus"
          }
        },
        "underwritingCo" : {
          "type" : "object",
          "title" : "Underwriting company",
          "description" : "The underwriting company for this policy",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "UnderwritingCompanyType"
          }
        },
        "underwritingGroup" : {
          "type" : "object",
          "title" : "Underwriting group",
          "description" : "The underwriting group for this policy",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "UnderwritingGroupType"
          }
        },
        "verifiedPolicy" : {
          "type" : "boolean",
          "title" : "Verified policy",
          "description" : "A `true` value indicates that the policy has not been edited since it was retrieved from the policy system",
          "readOnly" : true
        }
      }
    },
    "PolicyLocation" : {
      "type" : "object",
      "title" : "Policy location",
      "description" : "A location on a policy",
      "properties" : {
        "address" : {
          "type" : "object",
          "title" : "Address",
          "description" : "The address of this location",
          "$ref" : "#/definitions/ClaimAddress"
        },
        "buildings" : {
          "type" : "array",
          "title" : "Buildings",
          "description" : "A list of buildings at this location",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Building"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of this location",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "locationNumber" : {
          "type" : "string",
          "title" : "Location number",
          "description" : "The location number automatically assigned to this location in the context of the policy",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "notes" : {
          "type" : "string",
          "title" : "Notes",
          "description" : "Additional comments about this location",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "Policy system ID",
          "description" : "The unique identifier of this element within the policy system",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "primaryLocation" : {
          "type" : "boolean",
          "title" : "Primary location",
          "description" : "A `true` value indicates that this location is the primary location on the policy",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        }
      }
    },
    "PolicyObjectReference" : {
      "type" : "object",
      "title" : "Policy object reference",
      "description" : "A reference to an element that exists on the claim's copy of the policy",
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the referenced element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "policyLabel" : {
          "type" : "string",
          "title" : "Policy label",
          "description" : "A label that describes the context in which the referenced element appears on the policy",
          "readOnly" : true
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "Policy system ID",
          "description" : "The unique identifier of this element within the policy system"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0"
        }
      }
    },
    "PropertyContentsIncident" : {
      "type" : "object",
      "title" : "Property contents incident",
      "description" : "Property contents incident (Since 1.4.0)",
      "x-gw-sinceVersion" : "1.4.0",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "General description of the incident",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "location" : {
          "type" : "object",
          "title" : "Location",
          "description" : "The location of the property",
          "$ref" : "#/definitions/PolicyLocation",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "lossParty" : {
          "type" : "object",
          "title" : "Loss party",
          "description" : "The type of loss party, generally either the insured or a third-party",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "LossPartyType"
          }
        },
        "severity" : {
          "type" : "object",
          "title" : "Severity",
          "description" : "The severity of the loss",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "SeverityType"
          }
        }
      }
    },
    "QueueDetail" : {
      "type" : "object",
      "title" : "Queue detail",
      "description" : "Used to represent a reference to a `Queue`",
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The name of the `Queue`",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 30
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the `Queue`"
        }
      }
    },
    "RecoveryReserveSet" : {
      "type" : "object",
      "title" : "Recovery reserve set",
      "description" : "A set of related recovery reserve transactions that are submitted together for approval (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "approvalDate" : {
          "type" : "string",
          "title" : "Approval date",
          "description" : "The date and time when this recovery reserve set was approved or rejected",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "approvalStatus" : {
          "type" : "object",
          "title" : "Approval status",
          "description" : "Whether this recovery reserve set is approved, rejected, or awaiting approval",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ApprovalStatus"
          }
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `RecoveryReserveSet` was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "createdVia" : {
          "type" : "object",
          "title" : "Created via",
          "description" : "Indicates how this recovery reserve set was created, such as user entry or automated rules",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "CreatedVia"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "recoveryReserves" : {
          "type" : "array",
          "title" : "RecoveryReserves",
          "description" : "The list of `RecoveryReserves` that define the recovery reserve transactions that are part of this set",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/SimpleReference",
            "x-gw-extensions" : {
              "resourceType" : "RecoveryReserve"
            }
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "recoveryReservesToWrite" : {
          "type" : "array",
          "title" : "RecoveryReserves to write",
          "description" : "The list of `RecoveryReserves` used to populate a recovery reserve set during creation or edit",
          "minItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Transaction"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "requiredForCreate" : true
          }
        },
        "requestingUser" : {
          "type" : "object",
          "title" : "Requesting user",
          "description" : "A reference to the `User` that represents the caller that submitted this recovery reserve set for approval",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        }
      }
    },
    "RecoverySet" : {
      "type" : "object",
      "title" : "Recovery set",
      "description" : "A set of related recovery transactions that are submitted together for approval (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "approvalDate" : {
          "type" : "string",
          "title" : "Approval date",
          "description" : "The date and time when this recovery set was approved or rejected",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "approvalStatus" : {
          "type" : "object",
          "title" : "Approval status",
          "description" : "Whether this recovery set is approved, rejected, or awaiting approval",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ApprovalStatus"
          }
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `RecoverySet` was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "createdVia" : {
          "type" : "object",
          "title" : "Created via",
          "description" : "Indicates how this recovery set was created, such as user entry or automated rules",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "CreatedVia"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "recoveries" : {
          "type" : "array",
          "title" : "Recoveries",
          "description" : "The list of `Transaction` elements that define the recovery transactions that are part of this set",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/SimpleReference",
            "x-gw-extensions" : {
              "resourceType" : "Recovery"
            }
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "recoveriesToWrite" : {
          "type" : "array",
          "title" : "Recoveries to write",
          "description" : "The list of `Recoveries` used to populate a recovery set during creation or edit",
          "minItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Transaction"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "requiredForCreate" : true
          }
        },
        "requestingUser" : {
          "type" : "object",
          "title" : "Requesting user",
          "description" : "A reference to the `User` that represents the caller that submitted this recovery set for approval",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        }
      }
    },
    "RelatedCollection" : {
      "type" : "object",
      "title" : "Related collection",
      "description" : "A set of element references that are related to the element in some way. Used to link elements with their relations when a request is made using the `include` query parameter.",
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements included in the `data` array"
        },
        "data" : {
          "type" : "array",
          "title" : "Data",
          "description" : "The list of references to the related elements",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/SimpleReference"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements in the related set of elements. Only present if the `includeTotal` query parameter is used to request that the total be calculated for an included collection."
        }
      }
    },
    "RelatedCollections" : {
      "type" : "object",
      "title" : "Related collections",
      "description" : "A set of `RelatedCollection` elements that contain references to elements included using the `include` query parameter on a request",
      "additionalProperties" : {
        "type" : "object",
        "title" : "Related collections",
        "description" : "The related collections. Each key in this object will match the name of the inclusion requested via the `include` query parameter.",
        "$ref" : "#/definitions/RelatedCollection"
      }
    },
    "ReserveSet" : {
      "type" : "object",
      "title" : "Reserve set",
      "description" : "A set of related reserve transactions that are submitted together for approval (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "approvalDate" : {
          "type" : "string",
          "title" : "Approval date",
          "description" : "The date and time when this reserve set was approved or rejected",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "approvalStatus" : {
          "type" : "object",
          "title" : "Approval status",
          "description" : "Whether this reserve set is approved, rejected, or awaiting approval",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ApprovalStatus"
          }
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `ReserveSet` was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "createdVia" : {
          "type" : "object",
          "title" : "Created via",
          "description" : "Indicates how this reserve set was created, such as user entry or automated rules",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "CreatedVia"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "requestingUser" : {
          "type" : "object",
          "title" : "Requesting user",
          "description" : "A reference to the `User` that represents the caller that submitted this reserve set for approval",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "reserves" : {
          "type" : "array",
          "title" : "Reserves",
          "description" : "The list of `Transaction` elements that define the reserve transactions that are part of this set",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/SimpleReference",
            "x-gw-extensions" : {
              "resourceType" : "Reserve"
            }
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "reservesToWrite" : {
          "type" : "array",
          "title" : "Reserves to write",
          "description" : "The list of `Reserves` used to populate a reserve set during creation or edit",
          "minItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Transaction"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "requiredForCreate" : true
          }
        }
      }
    },
    "RoleSchemaConstraint" : {
      "type" : "object",
      "title" : "Role schema constraint",
      "description" : "A constraint that applies to how roles can be assigned to contacts",
      "properties" : {
        "constraints" : {
          "type" : "array",
          "title" : "Constraints",
          "description" : "A list of specific constraints, for example that the role is required or can only be held by one contact",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/SchemaConstraint"
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          }
        },
        "exceptionSubtypes" : {
          "type" : "array",
          "title" : "Exception subtypes",
          "description" : "A list of exceptions to the `subtype` defined on the containing constraint that allow additional contact types to have this role when it is related to the type of element defined in the `schema` field",
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          }
        },
        "schema" : {
          "type" : "string",
          "title" : "Schema",
          "description" : "The type of owning element that this constraint applies to. For example, a `schema` value of `Claim` means that this constraint applies when the role is related to the claim itself and not to another element such as an exposure.",
          "readOnly" : true
        }
      }
    },
    "SchemaConstraint" : {
      "type" : "object",
      "title" : "Schema constraint",
      "description" : "A specific constraint for a contact role in the context of a related element",
      "properties" : {
        "additionalInfoList" : {
          "type" : "array",
          "title" : "Additional info list",
          "description" : "A list of additional criteria for the constraint, such as specific loss types or exposure types that it applies to",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/AdditionalInfo"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "constraintType" : {
          "type" : "string",
          "title" : "Constraint type",
          "description" : "The type of constraint. Possible values include `Prohibited`, `Exclusive`, `Required`, and `ZeroToMore`.",
          "readOnly" : true
        }
      }
    },
    "ServiceRequest" : {
      "type" : "object",
      "title" : "Service request",
      "description" : "Represents a unit of work requested of a specialist or vendor, including instructions that describe the work to be done and its current state",
      "properties" : {
        "assignedGroup" : {
          "type" : "object",
          "title" : "Assigned group",
          "description" : "A reference to the `Group` that this service request is assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Group"
          }
        },
        "assignedUser" : {
          "type" : "object",
          "title" : "Assigned user",
          "description" : "A reference to the `User` that this service request is assigned to",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "assignmentDate" : {
          "type" : "string",
          "title" : "Assignment date",
          "description" : "The date when this service request was last assigned. For precision across timezones, use `assignmentDateTime` field.",
          "format" : "date",
          "readOnly" : true
        },
        "assignmentDateTime" : {
          "type" : "string",
          "title" : "Assignment date time",
          "description" : "The date and time when this service request was last assigned",
          "format" : "date-time",
          "readOnly" : true
        },
        "canceledReason" : {
          "type" : "string",
          "title" : "Canceled reason",
          "description" : "The reason this service request was canceled",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 65000
        },
        "claim" : {
          "type" : "object",
          "title" : "Claim",
          "description" : "A reference to the `Claim` that this service request is associated with",
          "$ref" : "#/definitions/ClaimReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "Claim"
          }
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `ServiceRequest` was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "expectedQuoteCompletionDate" : {
          "type" : "string",
          "title" : "Expected quote completion date",
          "description" : "The date by which the specialist expects to submit the quote. For precision across timezones, use `expectedQuoteCompletionDateTime` field.",
          "format" : "date",
          "readOnly" : true
        },
        "expectedQuoteCompletionDateTime" : {
          "type" : "string",
          "title" : "Expected quote completion date time",
          "description" : "The date and time by which the specialist expects to submit the quote",
          "format" : "date-time",
          "readOnly" : true
        },
        "expectedServiceCompletionDate" : {
          "type" : "string",
          "title" : "Expected service completion date",
          "description" : "The date by which the specialist expects to complete the work. For precision across timezones, use `expectedServiceCompletionDateTime` field.",
          "format" : "date",
          "readOnly" : true
        },
        "expectedServiceCompletionDateTime" : {
          "type" : "string",
          "title" : "Expected service completion date time",
          "description" : "The date and time by which the specialist expects to complete the work",
          "format" : "date-time",
          "readOnly" : true
        },
        "exposure" : {
          "type" : "object",
          "title" : "Exposure",
          "description" : "A reference to the `Exposure` that this service request is associated with",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "resourceType" : "Exposure"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "incident" : {
          "type" : "object",
          "title" : "Incident",
          "description" : "A reference to the `Incident` that this service request is associated with",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true
          }
        },
        "instruction" : {
          "type" : "object",
          "title" : "Instruction",
          "description" : "The active instruction associated with this service request",
          "$ref" : "#/definitions/ServiceRequestInstruction",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "resourceType" : "ServiceRequestInstruction"
          }
        },
        "kind" : {
          "type" : "object",
          "title" : "Kind",
          "description" : "The kind of service request, such as `quoteonly` or `quoteandservice`. This determines the workflow for managing this service request.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "sortable" : true,
            "typelist" : "ServiceRequestKind"
          }
        },
        "latestQuote" : {
          "type" : "object",
          "title" : "Latest quote",
          "description" : "The latest quote associated with this service request",
          "$ref" : "#/definitions/ServiceRequestStatement",
          "readOnly" : true
        },
        "nextStep" : {
          "type" : "object",
          "title" : "Next step",
          "description" : "The next action to be taken in the lifecycle of this service request",
          "$ref" : "#/definitions/ServiceRequestAction",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "progress" : {
          "type" : "object",
          "title" : "Progress",
          "description" : "This service request's place in its life cycle",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true,
            "typelist" : "ServiceRequestProgress"
          }
        },
        "quoteStatus" : {
          "type" : "object",
          "title" : "Quote status",
          "description" : "The quote status for this service request",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ServiceRequestQuoteStatus"
          }
        },
        "referenceNumber" : {
          "type" : "string",
          "title" : "Reference number",
          "description" : "A string identifier assigned to this service request by the specialist",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "requestedQuoteCompletionDate" : {
          "type" : "string",
          "title" : "Requested quote completion date",
          "description" : "The desired date by which the specialist will have submitted the quote. For precision across timezones, use `requestedQuoteCompletionDateTime` field.",
          "format" : "date",
          "x-gw-extensions" : {
            "after" : "now",
            "createOnly" : true
          }
        },
        "requestedQuoteCompletionDateTime" : {
          "type" : "string",
          "title" : "Requested quote completion date time",
          "description" : "The desired date and time by which the specialist will have submitted the quote",
          "format" : "date-time",
          "x-gw-extensions" : {
            "after" : "now",
            "createOnly" : true
          }
        },
        "requestedServiceCompletionDate" : {
          "type" : "string",
          "title" : "Requested service completion date",
          "description" : "The desired date by which the specialist will have completed the work. For precision across timezones, use `requestedServiceCompletionDateTime` field.",
          "format" : "date",
          "x-gw-extensions" : {
            "after" : "now",
            "createOnly" : true
          }
        },
        "requestedServiceCompletionDateTime" : {
          "type" : "string",
          "title" : "Requested service completion date time",
          "description" : "The desired date and time by which the specialist will have completed the work",
          "format" : "date-time",
          "x-gw-extensions" : {
            "after" : "now",
            "createOnly" : true
          }
        },
        "serviceRequestNumber" : {
          "type" : "string",
          "title" : "Service request number",
          "description" : "A globally unique, user-readable identifier for this service request. This number is normally generated within the application.",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "specialist" : {
          "type" : "object",
          "title" : "Specialist",
          "description" : "The vendor or internal entity selected to do the work requested by this service request",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "resourceType" : "ClaimContact"
          }
        },
        "specialistCommMethod" : {
          "type" : "object",
          "title" : "Specialist communication method",
          "description" : "The channel through which the carrier will communicate with the specialist",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "typelist" : "SpecialistCommMethod"
          }
        },
        "tier" : {
          "type" : "object",
          "title" : "Tier",
          "description" : "The tier of this service request",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "sortable" : true,
            "typelist" : "ServiceRequestTier"
          }
        }
      }
    },
    "ServiceRequestAction" : {
      "type" : "object",
      "title" : "Service request action",
      "description" : "An action that can be taken on a service request (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "properties" : {
        "defaultOperation" : {
          "type" : "string",
          "title" : "Default operation",
          "description" : "The type of operation this action performs when invoked"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this action"
        }
      }
    },
    "ServiceRequestAssignee" : {
      "type" : "object",
      "title" : "Service request assignee",
      "description" : "The target of an assignment action, such as a user/group combination or automatic rule-based assignment (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "autoAssign" : {
          "type" : "boolean",
          "title" : "Auto assign",
          "description" : "Set to `true` to indicate the assignment should be done by assignment rules. Cannot be combined with any other assignment criteria fields."
        },
        "claimOwner" : {
          "type" : "boolean",
          "title" : "Claim owner",
          "description" : "Set to `true` to indicate that the service request should be assigned to the same user and group that own the service request's claim"
        },
        "groupId" : {
          "type" : "string",
          "title" : "Group ID",
          "description" : "The `id` of the `Group` that the service request should be assigned to. If specified without the `userId` field, the `User` within the `Group` is selected by assignment rules. If specified along with the `userId` field, that `User` must be a member of the `Group`, and that `User` is assigned the service request."
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "A human-readable name for the type of assignment that this `ServiceRequestAssignee` represents",
          "readOnly" : true
        },
        "userId" : {
          "type" : "string",
          "title" : "User ID",
          "description" : "The ID of the `User` that the service request should be assigned to. The `groupId` field must also be specified if the `userId` field is specified, and the `User` must be a member of that `Group` and have permission to be assigned the element."
        }
      }
    },
    "ServiceRequestInstruction" : {
      "type" : "object",
      "title" : "Service request instruction",
      "description" : "A set of instructions to be transmitted to the specialist who will work on a service request (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "properties" : {
        "customer" : {
          "type" : "object",
          "title" : "Customer",
          "description" : "The contact with whom the specialist should coordinate to perform the work",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "resourceType" : "ClaimContact"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "instructionText" : {
          "type" : "string",
          "title" : "Instruction text",
          "description" : "The instructions to be provided to the specialist",
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ],
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 65000
        },
        "serviceAddress" : {
          "type" : "object",
          "title" : "Service address",
          "description" : "The location at which the service is to be performed",
          "$ref" : "#/definitions/ClaimAddress",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "services" : {
          "type" : "array",
          "title" : "Services",
          "description" : "The services to be performed for this set of instructions",
          "minItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/SpecialistService"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        }
      }
    },
    "ServiceRequestInvoiceOperationContext" : {
      "type" : "object",
      "title" : "Service request invoice operation context",
      "description" : "Additional details regarding an operation performed on a service request invoice (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "reason" : {
          "type" : "string",
          "title" : "Reason",
          "description" : "The reason the operation is being performed"
        }
      }
    },
    "ServiceRequestInvoicePayInfo" : {
      "type" : "object",
      "title" : "Service request invoice payment info",
      "description" : "Details regarding the invoice payment (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "required" : [ "check" ],
      "properties" : {
        "check" : {
          "type" : "object",
          "title" : "Check",
          "description" : "A reference to the `Check` associated with the invoice payment",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-extensions" : {
            "resourceType" : "Check"
          }
        },
        "operationContext" : {
          "type" : "object",
          "title" : "Operation context",
          "description" : "Additional details regarding the operation",
          "$ref" : "#/definitions/ServiceRequestInvoiceOperationContext"
        }
      }
    },
    "ServiceRequestOperationContext" : {
      "type" : "object",
      "title" : "Service request operation context",
      "description" : "Additional details regarding an operation performed on a service request (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "properties" : {
        "expectedCompletionDate" : {
          "type" : "string",
          "title" : "Expected completion date",
          "description" : "The date by which the specialist expects to complete the work",
          "format" : "date-time",
          "x-gw-extensions" : {
            "after" : "now"
          }
        },
        "originalDate" : {
          "type" : "string",
          "title" : "Original date",
          "description" : "The original service completion date",
          "format" : "date-time"
        },
        "reason" : {
          "type" : "string",
          "title" : "Reason",
          "description" : "The reason the operation is being performed"
        },
        "requestedCompletionDate" : {
          "type" : "string",
          "title" : "Requested completion date",
          "description" : "The requested quote or service completion date",
          "format" : "date-time",
          "x-gw-extensions" : {
            "after" : "now"
          }
        },
        "statement" : {
          "type" : "object",
          "title" : "Statement",
          "description" : "The service request statement associated with this operation",
          "$ref" : "#/definitions/ServiceRequestStatement"
        }
      }
    },
    "ServiceRequestReference" : {
      "type" : "object",
      "title" : "Service request reference",
      "description" : "A reference to a `ServiceRequest` element",
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the referenced element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "referenceNumber" : {
          "type" : "string",
          "title" : "Reference number",
          "description" : "The `referenceNumber` of the referenced service request",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "serviceRequestNumber" : {
          "type" : "string",
          "title" : "Reference number",
          "description" : "The `serviceRequestNumber` of the referenced service request",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "ServiceRequestSimpleOperationContext" : {
      "type" : "object",
      "title" : "Service request simple operation context",
      "description" : "Additional details regarding a simple operation performed on a service request (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0"
    },
    "ServiceRequestStatement" : {
      "type" : "object",
      "title" : "Service request statement",
      "description" : "A statement received from a specialist related to a service request, such as a quote or invoice (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "required" : [ "description" ],
      "properties" : {
        "approvalDate" : {
          "type" : "string",
          "title" : "Approval date",
          "description" : "The date and time when this statement was approved",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "approvedBy" : {
          "type" : "object",
          "title" : "Approved by",
          "description" : "A reference to the `User` that represents the calling user or service that approved this statement",
          "$ref" : "#/definitions/SimpleReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "resourceType" : "User"
          }
        },
        "creationTime" : {
          "type" : "string",
          "title" : "Creation time",
          "description" : "The date and time when this statement was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "declinedReason" : {
          "type" : "string",
          "title" : "Declined reason",
          "description" : "The reason the statement was declined",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 65000
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of the statement",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 65000
        },
        "expectedDaysToPerformService" : {
          "type" : "integer",
          "title" : "Expected days to perform service",
          "description" : "The number of business days the specialist expects it will take to perform the service. Only applicable if `subtype` is `ServiceRequestQuote`.",
          "x-gw-extensions" : {
            "entitySubtype" : "ServiceRequestQuote"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "lineItems" : {
          "type" : "array",
          "title" : "Line items",
          "description" : "The list of line items for this statement",
          "minItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ServiceRequestStatementLineItem"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "requiredForCreate" : true
          }
        },
        "operationContext" : {
          "type" : "object",
          "title" : "Operation context",
          "description" : "Additional details about this statement. Only applicable if `subtype` is `ServiceRequestInvoice`.",
          "$ref" : "#/definitions/ServiceRequestSimpleOperationContext",
          "x-gw-extensions" : {
            "createOnly" : true,
            "entitySubtype" : "ServiceRequestInvoice"
          }
        },
        "paymentDate" : {
          "type" : "string",
          "title" : "Payment date",
          "description" : "The date when this invoice was paid. Only applicable if `subtype` is `ServiceRequestInvoice`. For precision across timezones, use `paymentDateTime` field.",
          "format" : "date",
          "x-gw-extensions" : {
            "entitySubtype" : "ServiceRequestInvoice"
          }
        },
        "paymentDateTime" : {
          "type" : "string",
          "title" : "Payment date time",
          "description" : "The date and time when this invoice was paid. Only applicable if `subtype` is `ServiceRequestInvoice`. (Since 1.4.0)",
          "format" : "date-time",
          "x-gw-sinceVersion" : "1.4.0",
          "x-gw-extensions" : {
            "entitySubtype" : "ServiceRequestInvoice"
          }
        },
        "referenceNumber" : {
          "type" : "string",
          "title" : "Reference number",
          "description" : "An identifier assigned to this statement by the specialist",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "source" : {
          "type" : "object",
          "title" : "Statement source",
          "description" : "The source for this statement, such as manual entry or an external system",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "StatementSource"
          }
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The current invoice status. Only applicable if `subtype` is `ServiceRequestInvoice`.",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "entitySubtype" : "ServiceRequestInvoice",
            "typelist" : "ServiceRequestInvoiceStatus"
          }
        },
        "subtype" : {
          "type" : "object",
          "title" : "Subtype",
          "description" : "The specific type of statement, such as `ServiceRequestInvoice` or `ServiceRequestQuote`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "ServiceRequestStatement"
          }
        },
        "total" : {
          "type" : "object",
          "title" : "Total",
          "description" : "The sum of all the line items on this statement",
          "$ref" : "#/definitions/MonetaryAmount",
          "readOnly" : true
        }
      }
    },
    "ServiceRequestStatementLineItem" : {
      "type" : "object",
      "title" : "Service request statement line item",
      "description" : "A single line item on a service request statement (Since 1.1.0)",
      "x-gw-sinceVersion" : "1.1.0",
      "required" : [ "amount" ],
      "properties" : {
        "amount" : {
          "type" : "object",
          "title" : "Amount",
          "description" : "The line item's amount",
          "$ref" : "#/definitions/MonetaryAmount",
          "maximum" : 9999999999999999.99,
          "minimum" : -9999999999999999.99
        },
        "category" : {
          "type" : "object",
          "title" : "Category",
          "description" : "The line item's category",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ServiceRequestStatementLineItemCategory"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of the line item",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        }
      }
    },
    "SimpleReference" : {
      "type" : "object",
      "title" : "Simple reference",
      "description" : "A reference to an element",
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "SpatialPoint" : {
      "type" : "object",
      "title" : "Spatial point",
      "description" : "An object that combines a latitude with a longitude (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "required" : [ "latitude", "longitude" ],
      "properties" : {
        "latitude" : {
          "type" : "string",
          "title" : "Latitude",
          "description" : "The latitude of the spatial point",
          "format" : "gw-bigdecimal"
        },
        "longitude" : {
          "type" : "string",
          "title" : "Longitude",
          "description" : "The longitude of the spatial point",
          "format" : "gw-bigdecimal"
        }
      }
    },
    "SpecialistService" : {
      "type" : "object",
      "title" : "Specialist service",
      "description" : "A particular service category that a specialist is able to provide",
      "properties" : {
        "active" : {
          "type" : "boolean",
          "title" : "Active",
          "description" : "A `true` value indicates that this service is active for the specialist and can be used for new service requests",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "A unique code identifying the service",
          "x-gw-extensions" : {
            "createOnly" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of the service",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of the service",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "parent" : {
          "type" : "object",
          "title" : "Parent",
          "description" : "A reference to the service code that is the parent of this service code",
          "$ref" : "#/definitions/CodeReference",
          "readOnly" : true
        }
      }
    },
    "Transaction" : {
      "type" : "object",
      "title" : "Transaction",
      "description" : "A financial transaction for a claim or exposure. Transactions are either reserves, payments, recoveries, or recovery reserves. (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "bookingDate" : {
          "type" : "string",
          "title" : "Booking date",
          "description" : "The date and time when the transaction was submitted",
          "format" : "date-time",
          "readOnly" : true
        },
        "claimToReportingExchangeRate" : {
          "type" : "object",
          "title" : "Claim to reporting exchange rate",
          "description" : "The exchange rate from the claim currency to the reporting currency",
          "$ref" : "#/definitions/TransactionExchangeRate",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "comments" : {
          "type" : "string",
          "title" : "Comments",
          "description" : "Comments about the transaction",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "coverage" : {
          "type" : "object",
          "title" : "Coverage",
          "description" : "The `primaryCoverage` on the exposure this transaction applies to",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "CoverageType"
          }
        },
        "createTime" : {
          "type" : "string",
          "title" : "Create time",
          "description" : "The date and time when this `Transaction` was created",
          "format" : "date-time",
          "readOnly" : true,
          "x-gw-extensions" : {
            "sortable" : true
          }
        },
        "createdVia" : {
          "type" : "object",
          "title" : "Created via",
          "description" : "Indicates how this transaction was created, such as user entry or automated rules",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "CreatedVia"
          }
        },
        "currency" : {
          "type" : "object",
          "title" : "Currency",
          "description" : "The currency of this transaction's amount",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true,
            "typelist" : "Currency"
          }
        },
        "eroding" : {
          "type" : "boolean",
          "title" : "Eroding",
          "description" : "A `true` value indicates that this transaction erodes the reserves for the associated reserve line. Only applicable if `type` is `Payment`.",
          "x-gw-extensions" : {
            "entitySubtype" : "Payment"
          }
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "lineItems" : {
          "type" : "array",
          "title" : "Line items",
          "description" : "The list of line items that are part of this transaction",
          "minItems" : 1,
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TransactionLineItem"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "paymentType" : {
          "type" : "object",
          "title" : "Payment type",
          "description" : "The type of payment, either `partial`, `final`, or `supplement`. Only applicable if `type` is `Payment`.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "entitySubtype" : "Payment",
            "requiredForCreate" : true,
            "typelist" : "PaymentType"
          }
        },
        "reserveLine" : {
          "type" : "object",
          "title" : "Reserve line",
          "description" : "The coding for this transaction that determines how it will affect reserves for the claim or exposure",
          "$ref" : "#/definitions/TransactionCoding",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          }
        },
        "status" : {
          "type" : "object",
          "title" : "Status",
          "description" : "The current status of this transaction",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "typelist" : "TransactionStatus"
          }
        },
        "subtype" : {
          "type" : "object",
          "title" : "Type",
          "description" : "The type of this transaction, such as `Payment` or `Reserve`",
          "$ref" : "#/definitions/TypeKeyReference",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "typelist" : "Transaction"
          }
        },
        "transToClaimExchangeRate" : {
          "type" : "object",
          "title" : "Transaction to claim exchange rate",
          "description" : "The exchange rate from the transaction currency to the claim currency",
          "$ref" : "#/definitions/TransactionExchangeRate",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "transToReservingExchangeRate" : {
          "type" : "object",
          "title" : "Transaction to reserving exchange rate",
          "description" : "The exchange rate from the transaction currency to the reserving currency",
          "$ref" : "#/definitions/TransactionExchangeRate",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "createOnly" : true,
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "TransactionCoding" : {
      "type" : "object",
      "title" : "Transaction coding",
      "description" : "A unique combination of an exposure, cost category, cost type, and reserving currency that is used to group transactions for a particular claim in order to establish reserves and make payments against them (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "required" : [ "costCategory", "costType", "exposure", "reservingCurrency" ],
      "properties" : {
        "costCategory" : {
          "type" : "object",
          "title" : "Cost category",
          "description" : "The cost category for the transaction",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "CostCategory",
            "filterBy" : [ "costType" ]
          }
        },
        "costType" : {
          "type" : "object",
          "title" : "Cost type",
          "description" : "The cost type for the transaction",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "CostType"
          }
        },
        "exposure" : {
          "type" : "object",
          "title" : "Exposure",
          "description" : "A reference to the `Exposure` that the transaction applies to",
          "$ref" : "#/definitions/SimpleReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "Exposure"
          }
        },
        "recoveryCategory" : {
          "type" : "object",
          "title" : "Recovery category",
          "description" : "The recovery category for the transaction. Only applicable if the `type` of the transaction is `Recovery` or `RecoveryReserve`.",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "RecoveryCategory"
          }
        },
        "reservingCurrency" : {
          "type" : "object",
          "title" : "Reserving currency",
          "description" : "The reserving currency for the transaction",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "Currency"
          }
        }
      }
    },
    "TransactionExchangeRate" : {
      "type" : "object",
      "title" : "Transaction exchange rate",
      "description" : "An exchange rate between two currencies (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "required" : [ "market" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of the exchange rate",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "market" : {
          "type" : "boolean",
          "title" : "Market",
          "description" : "A `true` value indicates that this exchange rate will appear in searches for the latest market rates"
        },
        "rate" : {
          "type" : "string",
          "title" : "Rate",
          "description" : "The actual exchange rate",
          "format" : "gw-bigdecimal",
          "x-gw-nullable" : true
        }
      }
    },
    "TransactionLineItem" : {
      "type" : "object",
      "title" : "Transaction line item",
      "description" : "A line item on a transaction (Since 1.3.0)",
      "x-gw-sinceVersion" : "1.3.0",
      "properties" : {
        "claimAmount" : {
          "type" : "object",
          "title" : "Claim amount",
          "description" : "The amount of this line item in the claim currency",
          "$ref" : "#/definitions/MonetaryAmount",
          "maximum" : 9999999999999999.99,
          "minimum" : -9999999999999999.99
        },
        "comments" : {
          "type" : "string",
          "title" : "Comments",
          "description" : "A description of the line item",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "lineCategory" : {
          "type" : "object",
          "title" : "Line category",
          "description" : "The category for this line item",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "LineCategory"
          }
        },
        "reportingAmount" : {
          "type" : "object",
          "title" : "Reporting amount",
          "description" : "The amount of this line item in the reporting currency",
          "$ref" : "#/definitions/MonetaryAmount",
          "maximum" : 9999999999999999.99,
          "minimum" : -9999999999999999.99
        },
        "reservingAmount" : {
          "type" : "object",
          "title" : "Reserving amount",
          "description" : "The amount of this line item in the currency used for reserves",
          "$ref" : "#/definitions/MonetaryAmount",
          "maximum" : 9999999999999999.99,
          "minimum" : -9999999999999999.99
        },
        "transactionAmount" : {
          "type" : "object",
          "title" : "Transaction amount",
          "description" : "The amount of this line item in transaction currency",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-extensions" : {
            "createOnly" : true,
            "requiredForCreate" : true
          },
          "maximum" : 9999999999999999.99,
          "minimum" : -9999999999999999.99
        }
      }
    },
    "TypeFilter" : {
      "type" : "object",
      "title" : "TypeFilter",
      "description" : "A `TypeFilter` represents a filtered set of the `TypeKey` values from a `TypeList`",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this `TypeFilter`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this `TypeFilter`"
        },
        "typeKeys" : {
          "type" : "array",
          "title" : "TypeKeys",
          "description" : "The `code` values for the `TypeKeys` that are included by this `TypeFilter`",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "TypeKey" : {
      "type" : "object",
      "title" : "TypeKey",
      "description" : "A `TypeKey` represents one of the possible enumerated values of a `TypeList`",
      "properties" : {
        "categories" : {
          "type" : "array",
          "title" : "Categories",
          "description" : "The categories that this `TypeKey` belongs to. Categories are formatted by combining the name of the `TypeList` with the `code` for its `TypeKey`, separated by a `.` character.",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The code for this `TypeKey`. `TypeKey` codes are unique within a `TypeList`."
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The longer description of this `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The human-readable name of this `TypeKey`"
        },
        "priority" : {
          "type" : "integer",
          "title" : "Priority",
          "description" : "The order of this `TypeKey` relative to other `TypeKeys` in the same `TypeList`. A `TypeKey` with a lower `priority` will appear before a `TypeKey` with a higher priority when the values for a `TypeList` are presented in sorted order."
        },
        "retired" : {
          "type" : "boolean",
          "title" : "Retried",
          "description" : "A `true` value for this field indicates that the `TypeKey` value should no longer be used. Retired `TypeKey` values are retained only for the sake of historical data that may already be using the `TypeKey`.",
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        }
      }
    },
    "TypeKeyReference" : {
      "type" : "object",
      "title" : "TypeKey reference",
      "description" : "A reference to a `TypeKey` element that defines an enumerated value from a `TypeList`",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The `name` of the `TypeKey`"
        }
      }
    },
    "TypeList" : {
      "type" : "object",
      "title" : "TypeList",
      "description" : "A `TypeList` represents a list of enumerated `TypeKey` values",
      "properties" : {
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "The description of this `TypeList`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of this `TypeList`",
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "typeFilters" : {
          "type" : "array",
          "title" : "TypeFilters",
          "description" : "The set of `TypeFilters` available on this `TypeList`. A `TypeFilter` represents a filtered subset of the `TypeKeys` in this `TypeList`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TypeFilter"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "typeKeys" : {
          "type" : "array",
          "title" : "TypeKeys",
          "description" : "The list of `TypeKeys` available on this `TypeList`. A `TypeKey` represents one of the enumerated values that comprise this `TypeList`.",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TypeKey"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        }
      }
    },
    "UnverifiedPolicyLocation" : {
      "type" : "object",
      "title" : "Unverified policy location",
      "description" : "A policy location on an unverified policy. An unverified policy is a policy that was manually entered or modified, and therefore it may not match the information in the policy system. (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "properties" : {
        "address" : {
          "type" : "object",
          "title" : "Address",
          "description" : "The address of this location",
          "$ref" : "#/definitions/Address"
        },
        "buildings" : {
          "type" : "array",
          "title" : "Buildings",
          "description" : "A list of buildings at this location",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Building"
          },
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of this location",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "locationNumber" : {
          "type" : "string",
          "title" : "Location number",
          "description" : "The location number in the context of the policy",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "notes" : {
          "type" : "string",
          "title" : "Notes",
          "description" : "Additional comments about this location",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "Policy system ID",
          "description" : "The unique identifier of this element within the policy system",
          "readOnly" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "primaryLocation" : {
          "type" : "boolean",
          "title" : "Primary location",
          "description" : "A `true` value indicates that this location is the primary location on the policy",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        }
      }
    },
    "UpdatablePolicyObjectReference" : {
      "type" : "object",
      "title" : "Updatable policy object reference",
      "description" : "A reference to an object, such as a location or vehicle, that may exist on the policy or which may only exist on the claim",
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "Policy system ID",
          "description" : "The unique identifier of the referenced element within the policy system"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "ValidationIssue" : {
      "type" : "object",
      "title" : "Validation issue",
      "description" : "An error or warning raised during validation",
      "properties" : {
        "field" : {
          "type" : "string",
          "title" : "Field",
          "description" : "The field that the issue applies to"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element that the issue applies to"
        },
        "message" : {
          "type" : "string",
          "title" : "Message",
          "description" : "The error or warning message"
        },
        "severity" : {
          "type" : "object",
          "title" : "Severity",
          "description" : "The severity of the issue, either `error` or `warning`",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ValidationIssueType"
          }
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of element that the issue applies to"
        },
        "url" : {
          "type" : "string",
          "title" : "URL",
          "description" : "The canonical URI of the element that the issue applies to"
        },
        "validationLevel" : {
          "type" : "object",
          "title" : "Validation level",
          "description" : "The validation level that this issue was raised at",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ValidationLevel"
          }
        }
      }
    },
    "ValidationResult" : {
      "type" : "object",
      "title" : "Validation result",
      "description" : "The results of running validation rules against an element",
      "properties" : {
        "allValidationLevelsReached" : {
          "type" : "array",
          "title" : "All validation levels reached",
          "description" : "The list of all the validation levels that were passed by the root element being validated (Since 1.3.0)",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/TypeKeyReference",
            "x-gw-extensions" : {
              "typelist" : "ValidationLevel"
            }
          },
          "x-gw-sinceVersion" : "1.3.0",
          "xml" : {
            "wrapped" : true
          }
        },
        "hasErrors" : {
          "type" : "boolean",
          "title" : "Has errors",
          "description" : "A `true` value indicates that there are one or more issues with a `severity` or `error` on this result"
        },
        "validationIssues" : {
          "type" : "array",
          "title" : "Validation issues",
          "description" : "The list of specific validation issues that were raised by rules",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ValidationIssue"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "validationLevelReached" : {
          "type" : "object",
          "title" : "Validation level reached",
          "description" : "The highest validation level that was passed by the root element being validated",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "ValidationLevel"
          }
        }
      }
    },
    "Vehicle" : {
      "type" : "object",
      "title" : "Vehicle",
      "description" : "A vehicle",
      "properties" : {
        "color" : {
          "type" : "string",
          "title" : "Color",
          "description" : "The color of this vehicle",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of this vehicle",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "licensePlate" : {
          "type" : "string",
          "title" : "License plate",
          "description" : "The license plate number of this vehicle",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "make" : {
          "type" : "string",
          "title" : "Make",
          "description" : "The make of this vehicle",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "manufacturer" : {
          "type" : "object",
          "title" : "Manufacturer",
          "description" : "The manufacturer of this vehicle",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "VehicleManufacturer"
          }
        },
        "model" : {
          "type" : "string",
          "title" : "Model",
          "description" : "The model of this vehicle",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "policyLabel" : {
          "type" : "string",
          "title" : "Policy label",
          "description" : "Describes where on the policy this vehicle came from. Only applicable if `policyVehicle` is `true`.",
          "readOnly" : true
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "Policy system ID",
          "description" : "The unique identifier of this element within the policy system",
          "x-gw-extensions" : {
            "filterable" : true
          }
        },
        "policyVehicle" : {
          "type" : "boolean",
          "title" : "Policy vehicle",
          "description" : "A `true` value indicates that this `Vehicle` is part of the claim's policy and cannot be edited directly",
          "readOnly" : true
        },
        "state" : {
          "type" : "object",
          "title" : "State",
          "description" : "The jurisdiction in which this vehicle is registered",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "Jurisdiction"
          }
        },
        "style" : {
          "type" : "object",
          "title" : "Style",
          "description" : "The style of this vehicle",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "VehicleStyle"
          }
        },
        "vin" : {
          "type" : "string",
          "title" : "VIN",
          "description" : "The Vehicle Identification Number of this vehicle",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 40
        },
        "year" : {
          "type" : "integer",
          "title" : "Year",
          "description" : "The model year of this vehicle",
          "x-gw-nullable" : true
        }
      }
    },
    "VehicleIncident" : {
      "type" : "object",
      "title" : "Vehicle incident",
      "description" : "A vehicle that suffered loss or damage",
      "properties" : {
        "airbagsDeployed" : {
          "type" : "boolean",
          "title" : "Airbags deployed",
          "description" : "A `true` value indicates that the vehicle's airbags were deployed"
        },
        "automationPath" : {
          "type" : "object",
          "title" : "Automation path",
          "description" : "The path taken by the automated system that created this incident. Only intended for use by automated systems. (Since 1.3.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "AutomationPath"
          }
        },
        "childSafetySeatStatus" : {
          "type" : "object",
          "title" : "Child safety seat status",
          "description" : "The status of the child safety seat, for instance whether or not it was occupied or unoccupied. (Since 1.3.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "ChildSafetySeatStatus"
          }
        },
        "collision" : {
          "type" : "boolean",
          "title" : "Collision",
          "description" : "A `true` value indicates that the vehicle was involved in a collision"
        },
        "collisionPoint" : {
          "type" : "object",
          "title" : "Collision point",
          "description" : "The point of first impact during the collision",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "CollisionPoint"
          }
        },
        "damageDescription" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A general description of the damage",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 1333
        },
        "driver" : {
          "type" : "object",
          "title" : "Driver",
          "description" : "A reference to the `ClaimContact` that represents the driver of the vehicle",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "equipmentFailure" : {
          "type" : "boolean",
          "title" : "Equipment failure",
          "description" : "A `true` value indicates that equipment failure was involved in this loss"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element"
        },
        "incidentOwner" : {
          "type" : "object",
          "title" : "Incident owner",
          "description" : "A reference to the `ClaimContact` that represents the owner of the vehicle, if this incident represents a third-party loss",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "lossParty" : {
          "type" : "object",
          "title" : "Loss party",
          "description" : "The type of loss party, generally either the insured or a third-party",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "LossPartyType"
          }
        },
        "passengers" : {
          "type" : "array",
          "title" : "Excluded parties",
          "description" : "A list of references to `ClaimContact` elements that represent passengers in the vehicle",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/UpdatablePolicyObjectReference",
            "x-gw-extensions" : {
              "resourceType" : "ClaimContact"
            }
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "propertyDamageDescription" : {
          "type" : "string",
          "title" : "Property description",
          "description" : "A description of the property that was damaged",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "propertyValue" : {
          "type" : "object",
          "title" : "Property value",
          "description" : "The estimated value of the property that was lost or damaged (Since 1.3.0)",
          "$ref" : "#/definitions/MonetaryAmount",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-nullable" : true,
          "maximum" : 9999999999999999.99,
          "minimum" : 0
        },
        "safeToDrive" : {
          "type" : "boolean",
          "title" : "Operable",
          "description" : "A `true` value indicates that the vehicle is still operable"
        },
        "severity" : {
          "type" : "object",
          "title" : "Severity",
          "description" : "The severity of the loss",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "SeverityType"
          }
        },
        "theft" : {
          "type" : "boolean",
          "title" : "Theft",
          "description" : "A `true` value indicates that the vehicle was stolen"
        },
        "totalLoss" : {
          "type" : "boolean",
          "title" : "Total loss",
          "description" : "A `true` value indicates that the vehicle is a total loss",
          "x-gw-nullable" : true
        },
        "valuationRequired" : {
          "type" : "object",
          "title" : "Valuation required",
          "description" : "Whether a valuation should be or has been requested, possibly with a reason given (Since 1.3.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-extensions" : {
            "typelist" : "ValuationRequired"
          }
        },
        "valuationSource" : {
          "type" : "object",
          "title" : "Valuation source",
          "description" : "The source of the property valuation (Since 1.3.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.3.0",
          "x-gw-extensions" : {
            "sortable" : true,
            "typelist" : "PropertyValuationSource"
          }
        },
        "vehicle" : {
          "type" : "object",
          "title" : "Vehicle",
          "description" : "The vehicle involved in the loss",
          "$ref" : "#/definitions/Vehicle"
        },
        "vehicleDirection" : {
          "type" : "object",
          "title" : "Vehicle direction",
          "description" : "The direction the vehicle was traveling at impact",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "VehicleDirection"
          }
        },
        "vehicleParked" : {
          "type" : "boolean",
          "title" : "Vehicle parked",
          "description" : "A `true` value indicates that the vehicle was parked at the time of the incident",
          "x-gw-nullable" : true
        },
        "vehicleType" : {
          "type" : "object",
          "title" : "Vehicle type",
          "description" : "A description of the type of possession of the vehicle, such as `owned`, `leased`, or `rented`",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "VehicleType",
            "filterBy" : [ "lossParty" ]
          }
        },
        "vehicleUseReason" : {
          "type" : "object",
          "title" : "Vehicle use reason",
          "description" : "The reason for the vehicle's use (Since 1.2.0)",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-sinceVersion" : "1.2.0",
          "x-gw-nullable" : true,
          "x-gw-extensions" : {
            "typelist" : "ReasonForUse"
          }
        }
      }
    },
    "VehicleRiskUnit" : {
      "type" : "object",
      "title" : "Vehicle risk unit",
      "description" : "A covered vehicle risk",
      "properties" : {
        "RUNumber" : {
          "type" : "integer",
          "title" : "Risk unit number",
          "description" : "The number automatically assigned to this covered risk unit on the policy",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true,
            "sortable" : true
          }
        },
        "coverages" : {
          "type" : "array",
          "title" : "Coverages",
          "description" : "The list of coverages that apply to this risk unit",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/Coverage"
          },
          "readOnly" : true,
          "xml" : {
            "wrapped" : true
          },
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "description" : "A description of the risk unit",
          "x-gw-nullable" : true,
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 255
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of this element",
          "readOnly" : true
        },
        "policySystemId" : {
          "type" : "string",
          "title" : "Policy system ID",
          "description" : "The unique identifier of this element within the policy system",
          "readOnly" : true,
          "x-gw-extensions" : {
            "filterable" : true
          },
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 256
        },
        "vehicle" : {
          "type" : "object",
          "title" : "Vehicle",
          "description" : "Details of the vehicle that is covered",
          "$ref" : "#/definitions/Vehicle",
          "x-gw-extensions" : {
            "defaultViews" : [ "detail" ]
          }
        },
        "vehicleId" : {
          "type" : "string",
          "title" : "Vehicle ID",
          "description" : "The unique identifier of the `Vehicle` that is covered",
          "readOnly" : true
        },
        "vehicleLocation" : {
          "type" : "object",
          "title" : "Vehicle location",
          "description" : "A reference to the `PolicyLocation` that the vehicle is associated with",
          "$ref" : "#/definitions/PolicyLocation",
          "readOnly" : true
        }
      }
    },
    "Witness" : {
      "type" : "object",
      "title" : "Witness",
      "description" : "Details of the contact who witnessed an incident",
      "required" : [ "contact" ],
      "properties" : {
        "contact" : {
          "type" : "object",
          "title" : "Contact",
          "description" : "A reference to the `ClaimContact` that represents the person who witnessed the loss",
          "$ref" : "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions" : {
            "resourceType" : "ClaimContact"
          }
        },
        "perspective" : {
          "type" : "string",
          "title" : "Perspective",
          "description" : "Details of the perspective that the witness observed the loss from",
          "minLength" : 1,
          "pattern" : "\\S",
          "maxLength" : 100
        },
        "position" : {
          "type" : "object",
          "title" : "Position",
          "description" : "Where the witness was when the loss occurred",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "WitnessPosition"
          }
        },
        "statementObtained" : {
          "type" : "object",
          "title" : "Statement obtained",
          "description" : "A `true` value indicates that a statement was obtained from the witness",
          "$ref" : "#/definitions/TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "YesNo"
          }
        }
      }
    },
    "framework_GenericRelation" : {
      "type" : "object",
      "title" : "Generic relation",
      "description" : "A reference to a related element",
      "xml" : {
        "name" : "GenericRelation"
      },
      "required" : [ "id", "type" ],
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the referenced element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "framework_LinkObject" : {
      "type" : "object",
      "title" : "Linked object",
      "description" : "A standard HTTP link",
      "xml" : {
        "name" : "LinkObject"
      },
      "properties" : {
        "href" : {
          "type" : "string",
          "title" : "HREF",
          "description" : "The URL of the link"
        },
        "methods" : {
          "type" : "array",
          "title" : "Methods",
          "description" : "An array of HTTP method names that can be used with the link URL",
          "items" : {
            "type" : "string"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "framework_Links" : {
      "type" : "object",
      "title" : "Links",
      "description" : "A set of named links",
      "xml" : {
        "name" : "Links"
      },
      "additionalProperties" : {
        "type" : "object",
        "title" : "Links",
        "description" : "A set of named links. Each key represents the name of the link, such as a child of the current element, an action that can be taken on it, or a navigation option.",
        "$ref" : "#/definitions/framework_LinkObject"
      }
    },
    "framework_MetaObject" : {
      "type" : "object",
      "title" : "Meta object",
      "description" : "An element",
      "xml" : {
        "name" : "MetaObject"
      },
      "properties" : {
        "checksum" : {
          "type" : "string",
          "title" : "Checksum",
          "description" : "The checksum of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the element"
        },
        "links" : {
          "type" : "object",
          "title" : "Links",
          "description" : "The set of links related to the element",
          "$ref" : "#/definitions/framework_Links"
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "related" : {
          "type" : "object",
          "title" : "Related collections",
          "description" : "The set of related collections included with the element",
          "$ref" : "#/definitions/framework_RelatedCollections"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of element"
        }
      }
    },
    "framework_MonetaryAmount" : {
      "type" : "object",
      "title" : "Monetary amount",
      "description" : "A monetary amount that combines a decimal amount with a currency",
      "xml" : {
        "name" : "MonetaryAmount"
      },
      "required" : [ "amount", "currency" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "title" : "Amount",
          "description" : "The decimal amount",
          "format" : "gw-bigdecimal"
        },
        "currency" : {
          "type" : "string",
          "title" : "Currency",
          "description" : "The currency for the amount",
          "x-gw-type" : "typekey.Currency"
        }
      }
    },
    "framework_PhoneNumber" : {
      "type" : "object",
      "title" : "Phone number",
      "description" : "A phone number, with different components of the number broken out as separate fields",
      "xml" : {
        "name" : "PhoneNumber"
      },
      "required" : [ "countryCode", "number" ],
      "properties" : {
        "countryCode" : {
          "type" : "object",
          "title" : "Country code",
          "description" : "The country code for the phone number",
          "$ref" : "#/definitions/framework_TypeKeyReference",
          "x-gw-extensions" : {
            "typelist" : "PhoneCountryCode"
          }
        },
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The phone number formatted in a standardized way",
          "readOnly" : true
        },
        "extension" : {
          "type" : "string",
          "title" : "Extension",
          "description" : "The extension for the phone number",
          "x-gw-nullable" : true
        },
        "number" : {
          "type" : "string",
          "title" : "Number",
          "description" : "The actual phone number, including area code, but excluding the country code and extension"
        }
      }
    },
    "framework_RelatedCollection" : {
      "type" : "object",
      "title" : "Related collection",
      "description" : "A set of element references that are related to the element in some way. Used to link elements with their relations when a request is made using the `include` query parameter.",
      "xml" : {
        "name" : "RelatedCollection"
      },
      "properties" : {
        "count" : {
          "type" : "integer",
          "title" : "Count",
          "description" : "The number of elements included in the `data` array"
        },
        "data" : {
          "type" : "array",
          "title" : "Data",
          "description" : "The list of references to the related elements",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/framework_SimpleReference"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "total" : {
          "type" : "integer",
          "title" : "Total",
          "description" : "The total number of elements in the related set of elements. Only present if the `includeTotal` query parameter is used to request that the total be calculated for an included collection."
        }
      }
    },
    "framework_RelatedCollections" : {
      "type" : "object",
      "title" : "Related collections",
      "description" : "A set of `RelatedCollection` elements that contain references to elements included using the `include` query parameter on a request",
      "xml" : {
        "name" : "RelatedCollections"
      },
      "additionalProperties" : {
        "type" : "object",
        "title" : "Related collections",
        "description" : "The related collections. Each key in this object will match the name of the inclusion requested via the `include` query parameter.",
        "$ref" : "#/definitions/framework_RelatedCollection"
      }
    },
    "framework_SimpleReference" : {
      "type" : "object",
      "title" : "Simple reference",
      "description" : "A reference to an element",
      "xml" : {
        "name" : "SimpleReference"
      },
      "x-gw-extensions" : {
        "resourceReference" : true
      },
      "properties" : {
        "displayName" : {
          "type" : "string",
          "title" : "Display name",
          "description" : "The formatted name of the element"
        },
        "id" : {
          "type" : "string",
          "title" : "ID",
          "description" : "The unique identifier of the referenced element"
        },
        "jsonPath" : {
          "type" : "string",
          "title" : "JSON path",
          "description" : "The path to the referenced element within the overall JSON document (Since 1.2.0)",
          "x-gw-sinceVersion" : "1.2.0",
          "readOnly" : true,
          "x-gw-extensions" : {
            "defaultViews" : [ "none" ]
          }
        },
        "refid" : {
          "type" : "string",
          "title" : "Reference ID",
          "description" : "A unique identifier given to the newly created element in the context of the current request"
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The type of the referenced element"
        },
        "uri" : {
          "type" : "string",
          "title" : "URI",
          "description" : "The canonical URI for the referenced element"
        }
      }
    },
    "framework_SpatialPoint" : {
      "type" : "object",
      "title" : "Spatial point",
      "description" : "An object that combines a latitude with a longitude (Since 1.2.0)",
      "x-gw-sinceVersion" : "1.2.0",
      "xml" : {
        "name" : "SpatialPoint"
      },
      "required" : [ "latitude", "longitude" ],
      "properties" : {
        "latitude" : {
          "type" : "string",
          "title" : "Latitude",
          "description" : "The latitude of the spatial point",
          "format" : "gw-bigdecimal"
        },
        "longitude" : {
          "type" : "string",
          "title" : "Longitude",
          "description" : "The longitude of the spatial point",
          "format" : "gw-bigdecimal"
        }
      }
    },
    "framework_TypeKeyReference" : {
      "type" : "object",
      "title" : "TypeKey reference",
      "description" : "A reference to a `TypeKey` element that defines an enumerated value from a `TypeList`",
      "xml" : {
        "name" : "TypeKeyReference"
      },
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "title" : "Code",
          "description" : "The `code` of the `TypeKey`"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The `name` of the `TypeKey`"
        }
      }
    },
    "ErrorDetails" : {
      "type" : "object",
      "properties" : {
        "lineNumber" : {
          "type" : "integer"
        },
        "message" : {
          "type" : "string"
        },
        "parameterLocation" : {
          "type" : "string"
        },
        "parameterName" : {
          "type" : "string"
        },
        "stackTrace" : {
          "type" : "string"
        }
      }
    },
    "ErrorInfo" : {
      "type" : "object",
      "properties" : {
        "details" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "$ref" : "#/definitions/ErrorDetails"
          },
          "xml" : {
            "wrapped" : true
          }
        },
        "developerMessage" : {
          "type" : "string"
        },
        "statusCode" : {
          "type" : "integer"
        },
        "userMessage" : {
          "type" : "string"
        }
      }
    }
  }
}
